import{J as se,k as x,C as o,g as H,h as q,i as v,b as O,o as S,c as $,d as n,t as s,f as r,l as p,y as I,A as P,E as y,v as V,z as W,F as le,e as ue,p as oe,K as ee,_ as pe,a as re,u as ye,G as de,H as me,L as ce,B as be,q as fe,m as te,M as ne}from"./index-149d5279.js";import{B as ve}from"./Back-06334edb.js";import{C as ae,T as Te}from"./CopyText-1b8e6d32.js";import{_ as K}from"./OperateSuccessDialog-c2474d0d.js";import{f as D,a as we}from"./units-a0140e3c.js";import{R as E}from"./Rate-2f0c331f.js";import"./TokenIcon-2e0d7251.js";/* empty css                                                          */import"./DoubleToken-4ede8e52.js";const he=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ge=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Me=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],_e=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],j=se("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,whiteListCount:0,whiteList:[]}),actions:{init(F,a){switch(this.deployerId=Number(F),this.tokenAddress=a.toLowerCase(),this.deployerId){case 0:this.abi=he;break;case 1:this.abi=ge;break;case 2:this.abi=Me;break;case 3:this.abi=_e;break;default:this.abi=null}},async getFreeTaxTokenInfo(F){this.loading=!0;const a=await x.wallet.metamask.contract(F,this.abi);Promise.all([a.name(),a.canMint(),a.symbol(),a.decimals(),a.totalSupply(),a.owner()]).then(e=>{this.name=e[0],this.canMint=e[1],this.symbol=e[2],this.decimals=Number(e[3]),this.totalSupply=D(e[4].toString(),Number(this.decimals)),this.owner=e[5]}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getWhiteList(F){try{const a=await x.wallet.metamask.contract(F,this.abi);this.whiteListCount=await a.feeWhiteListCount();let e=[];this.whiteListCount>0&&(e=await a.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=e.map(w=>w.toLowerCase()),console.log(this.whiteListCount),console.log(this.whiteList)}catch(a){throw a}},async getTokenFee(F){const a=await x.wallet.metamask.contract(F,this.abi);let e=[];this.deployerId==1?e=[a._buyFundFee(),a._buyLPFee(),a._buyBurnFee(),a._sellFundFee(),a._sellLPFee(),a._sellBurnFee()]:(this.deployerId==2||this.deployerId==3)&&(e=[a._buyFundFee(),a._buyLPFee(),a._buyRewardFee(),a._sellFundFee(),a._sellLPFee(),a._sellRewardFee()]),Promise.all(e).then(w=>{console.log(w),this.deployerId==1?(this.buyFundFee=o(w[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(w[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=o(w[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(w[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(w[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=o(w[5]).div(1e4).multipliedBy(100).toString()):(this.deployerId==2||this.deployerId==3)&&(this.buyFundFee=o(w[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(w[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=o(w[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(w[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(w[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=o(w[5]).div(1e4).multipliedBy(100).toString())}).catch(w=>{console.log(w)})},async getFeeTokenInfo(F){this.loading=!0;const a=await x.wallet.metamask.contract(F,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.canMint(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax()]).then(async e=>{this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=D(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.canMint=e[5],this.enableManualStartTrade=e[6],this.tradeStart=e[7],this.enableWhiteList=e[8],this.enableChangeTax=e[9],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getDividendSelfTokenInfo(F){this.loading=!0;const a=await x.wallet.metamask.contract(F,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax()]).then(async e=>{this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=D(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.enableManualStartTrade=e[5],this.tradeStart=e[6],this.enableWhiteList=e[7],this.enableChangeTax=e[8],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getAddPoolDividendTokenInfo(F){this.loading=!0;const a=await x.wallet.metamask.contract(F,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax(),a.canMint()]).then(async e=>{console.log(e),this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=D(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.enableManualStartTrade=e[5],this.tradeStart=e[6],this.enableWhiteList=e[7],this.enableChangeTax=e[8],this.canMint=e[9],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})}}}),ke={class:"mint"},Fe={class:"dlg-item"},Le={class:"dlg-item-title"},Se={class:"dlg-item"},$e={class:"dlg-item-title"},xe={class:"dlg-item"},Ce={class:"dlg-item-title"},Ie={class:"dlg-bottom"},Be={__name:"Mint",emits:["operateSuccess"],setup(F,{emit:a}){const{t:e}=H(),w=q(),i=j(),t=v(""),m=v(w.walletAddress),g=v(""),L=v(!1),_=v(!1);function k(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(m.value)||y({message:e("addressWrong"),type:"warning"})}async function d(){if(!w.isConnecting){y.error(e("pleaseConnectWallet"));return}if(!t.value){y({message:e("amountEmpty"),type:"warning"});return}if(t.value.replace(".","").length>34){y({message:e("amountOver"),type:"warning"});return}let T=t.value.split(".");if(T[1]&&T[1].length>i.decimals){y({message:e("amountOver"),type:"warning"});return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(m.value)){y({message:e("addressWrong"),type:"warning"});return}L.value=!0;try{const M=await x.wallet.metamask.contract(i.tokenAddress,i.abi);let c=await M.mint(m.value,we(t.value,i.decimals));g.value=c.hash,_.value=!0,c.wait().then(async b=>{if(b.status===1){y({message:e("upChainSuccessfully"),type:"success"});let f=await M.totalSupply();i.totalSupply=D(f.toString(),i.decimals),L.value=!1,a("operateSuccess")}})}catch(M){L.value=!1;const c=x.wallet.metamask.parseError(M);y({message:e(c),type:"error"})}finally{}}return(T,M)=>{const c=O("el-input"),b=O("el-button");return S(),$("div",ke,[n("div",Fe,[n("div",Le,s(T.$t("currentTotal")),1),r(c,{class:"ipt-block",disabled:"",modelValue:p(i).totalSupply,"onUpdate:modelValue":M[0]||(M[0]=f=>p(i).totalSupply=f)},null,8,["modelValue"])]),n("div",Se,[n("div",$e,s(T.$t("mintTokenAmount")),1),r(c,{class:"ipt-block",type:"number",modelValue:t.value,"onUpdate:modelValue":M[1]||(M[1]=f=>t.value=f),placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",xe,[n("div",Ce,s(T.$t("receivingAddress")),1),r(c,{class:"ipt-block",modelValue:m.value,"onUpdate:modelValue":M[2]||(M[2]=f=>m.value=f),onBlur:k,placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",Ie,[r(b,{class:"btn-gradient btn-block",loading:L.value,onClick:d},{default:I(()=>[P(s(T.$t("submitAdd")),1)]),_:1},8,["loading"])]),r(K,{txHash:g.value,modelValue:_.value},null,8,["txHash","modelValue"])])}}},Ae={class:"edit-rate"},Ve={class:"dlg-item"},Pe={class:"dlg-item-title"},We={class:"dlg-item-value"},Oe={class:"rate-item"},Ne={class:"rate-item-title"},Re={class:"rate-item"},Ee={class:"rate-item-title"},Ue={key:0,class:"rate-item"},De={class:"rate-item-title"},He={key:1,class:"rate-item"},qe={class:"rate-item-title"},Ke={class:"dlg-item"},je={class:"dlg-item-title"},ze={class:"dlg-item-value"},Je={class:"rate-item"},Xe={class:"rate-item-title"},Ge={class:"rate-item"},Qe={class:"rate-item-title"},Ye={key:0,class:"rate-item"},Ze={class:"rate-item-title"},et={key:1,class:"rate-item"},tt={class:"rate-item-title"},nt={class:"dlg-bottom"},at={__name:"EditTax",emits:["operateSuccess"],setup(F,{emit:a}){const{t:e}=H(),w=q(),i=j(),t=v(!1),m=v(i.buyFundFee),g=v(i.buyLPFee),L=v(i.buyBurnFee),_=v(i.buyRewardFee),k=v(i.sellFundFee),d=v(i.sellLPFee),T=v(i.sellBurnFee),M=v(i.sellRewardFee),c=v(""),b=v(!1),f=V(()=>{if(i.deployerId==1)return o(m.value).plus(g.value).plus(L.value);if(i.deployerId==2||i.deployerId==3)return o(m.value).plus(g.value).plus(_.value)}),N=V(()=>{if(i.deployerId==1)return o(k.value).plus(d.value).plus(T.value);if(i.deployerId==2||i.deployerId==3)return o(k.value).plus(d.value).plus(M.value)}),U=V(()=>{if(i.deployerId==1)return Number(o(20).minus(g.value).minus(L.value));if(i.deployerId==2||i.deployerId==3)return Number(o(20).minus(g.value).minus(_.value))}),R=V(()=>{if(i.deployerId==1)return Number(o(20).minus(m.value).minus(L.value));if(i.deployerId==2||i.deployerId==3)return Number(o(20).minus(m.value).minus(_.value))}),z=V(()=>{if(i.deployerId==1)return Number(o(20).minus(m.value).minus(g.value))}),X=V(()=>{if(i.deployerId==2||i.deployerId==3)return Number(o(20).minus(m.value).minus(g.value).toNumber())}),G=V(()=>{if(i.deployerId==1)return Number(o(20).minus(d.value).minus(T.value));if(i.deployerId==2||i.deployerId==3)return Number(o(20).minus(d.value).minus(M.value))}),Q=V(()=>{if(i.deployerId==1)return Number(o(20).minus(k.value).minus(T.value));if(i.deployerId==2||i.deployerId==3)return Number(o(20).minus(k.value).minus(M.value))}),Y=V(()=>{if(i.deployerId==1)return Number(o(20).minus(k.value).minus(d.value))}),Z=V(()=>{if(i.deployerId==2||i.deployerId==3)return o(20).minus(k.value).minus(d.value).toNumber()});async function l(){if(!w.isConnecting){y.error(e("pleaseConnectWallet"));return}if(i.deployerId==1){if(o(m.value).plus(L.value).plus(g.value).plus(k.value).plus(T.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit1")});return}}else if(i.deployerId==2){if(o(m.value).plus(g.value).plus(k.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit2")});return}}else if(i.deployerId==3&&o(m.value).plus(_.value).plus(g.value).plus(k.value).plus(M.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit1")});return}t.value=!0;try{const u=await x.wallet.metamask.contract(i.tokenAddress,i.abi);let h;i.deployerId==1?h=[o(g.value).div(100).multipliedBy(1e4).toNumber(),o(L.value).div(100).multipliedBy(1e4).toNumber(),o(m.value).div(100).multipliedBy(1e4).toNumber(),o(d.value).div(100).multipliedBy(1e4).toNumber(),o(T.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber()]:i.deployerId==2?h=[o(g.value).div(100).multipliedBy(1e4).toNumber(),o(_.value).div(100).multipliedBy(1e4).toNumber(),o(m.value).div(100).multipliedBy(1e4).toNumber(),o(d.value).div(100).multipliedBy(1e4).toNumber(),o(M.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber()]:i.deployerId==3&&(h=[o(m.value).div(100).multipliedBy(1e4).toNumber(),o(_.value).div(100).multipliedBy(1e4).toNumber(),o(g.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber(),o(M.value).div(100).multipliedBy(1e4).toNumber(),o(d.value).div(100).multipliedBy(1e4).toNumber()]);const A=await u.completeCustoms(h);y({type:"success",message:e("submitSuccess")}),c.value=A.hash,b.value=!0,await A.wait(),i.getTokenFee(i.tokenAddress),y({type:"success",message:e("editTaxSuccess")}),a("operateSuccess")}catch(u){const h=x.wallet.metamask.parseError(u);y({message:e(h),type:"error"})}finally{t.value=!1}}return(u,h)=>{const A=O("el-button");return S(),$("div",Ae,[n("div",Ve,[n("div",Pe,s(u.$t("editBuyTax",{buyFee:f.value})),1),n("div",We,[n("div",Oe,[n("div",Ne,s(u.$t("marketingTax")),1),r(E,{class:"rate-item-value",modelValue:m.value,"onUpdate:modelValue":h[0]||(h[0]=C=>m.value=C),max:U.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Re,[n("div",Ee,s(u.$t("liquidityTax")),1),r(E,{class:"rate-item-value",modelValue:g.value,"onUpdate:modelValue":h[1]||(h[1]=C=>g.value=C),max:R.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),p(i).deployerId==1?(S(),$("div",Ue,[n("div",De,s(u.$t("burnTax")),1),r(E,{class:"rate-item-value",modelValue:L.value,"onUpdate:modelValue":h[2]||(h[2]=C=>L.value=C),max:z.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),p(i).deployerId==2||p(i).deployerId==3?(S(),$("div",He,[n("div",qe,s(u.$t("rewardTax")),1),r(E,{class:"rate-item-value",modelValue:_.value,"onUpdate:modelValue":h[3]||(h[3]=C=>_.value=C),max:X.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),n("div",Ke,[n("div",je,s(u.$t("editSellTax",{sellFee:N.value})),1),n("div",ze,[n("div",Je,[n("div",Xe,s(u.$t("marketingTax")),1),r(E,{class:"rate-item-value",modelValue:k.value,"onUpdate:modelValue":h[4]||(h[4]=C=>k.value=C),max:G.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Ge,[n("div",Qe,s(u.$t("liquidityTax")),1),r(E,{class:"rate-item-value",modelValue:d.value,"onUpdate:modelValue":h[5]||(h[5]=C=>d.value=C),max:Q.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),p(i).deployerId==1?(S(),$("div",Ye,[n("div",Ze,s(u.$t("burnTax")),1),r(E,{class:"rate-item-value",modelValue:T.value,"onUpdate:modelValue":h[6]||(h[6]=C=>T.value=C),max:Y.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),p(i).deployerId==2||p(i).deployerId==3?(S(),$("div",et,[n("div",tt,s(u.$t("rewardTax")),1),r(E,{class:"rate-item-value",modelValue:M.value,"onUpdate:modelValue":h[7]||(h[7]=C=>M.value=C),max:Z.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),n("div",nt,[r(A,{class:"btn-gradient btn-block",loading:t.value,onClick:l},{default:I(()=>[P(s(u.$t("submit")),1)]),_:1},8,["loading"])]),r(K,{txHash:c.value,modelValue:b.value},null,8,["txHash","modelValue"])])}}},it={class:"mint"},st={class:"dlg-item"},lt={class:"dlg-bottom"},ut={class:"white-list-table"},ot={class:"white-list-table-title"},pt={class:"white-list-table-item"},rt={__name:"WhiteList",emits:["operateSuccess"],setup(F,{emit:a}){const{t:e}=H(),w=q(),i=j(),t=v(""),m=v(""),g=v(""),L=v(!1);function _(c){return c&&c.trim()}function k(){if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(t.value)){y({type:"warnning",message:e("trueFormat")});return}if(i.whiteList.findIndex(b=>b==t.value)!=-1){y({type:"warning",message:e("addressAdded")});return}ee.confirm(e("addWhiteListWarn",{userAddress:t.value,tokenName:i.symbol}),"",{cancelButtonText:e("thinkAgain"),confirmButtonText:e("confirm"),autofocus:!1,beforeClose:async(b,f,N)=>{f.confirmButtonLoading=!0,b=="confirm"&&await d(),f.confirmButtonLoading=!1,N()},callback:b=>{}})}async function d(){if(!w.isConnecting){y.error(e("pleaseConnectWallet"));return}let c=t.value;try{const b=await x.wallet.metamask.contract(i.tokenAddress,i.abi);console.log(b),await(await b.setFeeWhiteList([t.value],!0)).wait(),await i.getWhiteList(i.tokenAddress),y({type:"success",message:e("addWhiteListSuccess",{userAddress:c})})}catch(b){const f=x.wallet.metamask.parseError(b);y({message:e(f),type:"error"})}finally{}}function T(c){m.value=c,ee.confirm(e("removeWhiteListWarn",{userAddress:m.value}),"",{cancelButtonText:e("thinkAgain"),confirmButtonText:e("confirm"),autofocus:!1,beforeClose:async(b,f,N)=>{f.confirmButtonLoading=!0,b=="confirm"&&await M(),f.confirmButtonLoading=!1,N()},callback:b=>{}})}async function M(){if(!w.isConnecting){y.error(e("pleaseConnectWallet"));return}let c=m.value;try{const b=await x.wallet.metamask.contract(i.tokenAddress,i.abi);console.log(b);const f=await b.setFeeWhiteList([m.value],!1);console.log(f),await f.wait(),await i.getWhiteList(i.tokenAddress),m.value="",y({type:"success",message:e("removeWhiteListSuccess",{userAddress:c})})}catch(b){const f=x.wallet.metamask.parseError(b);y({message:e(f),type:"error"})}finally{}}return(c,b)=>{const f=O("el-input"),N=O("el-button"),U=O("el-link");return S(),$("div",it,[n("div",st,[r(f,{class:"ipt-block",clearable:"",formatter:_,modelValue:t.value,"onUpdate:modelValue":b[0]||(b[0]=R=>t.value=R),placeholder:p(e)("inputAddress")},null,8,["modelValue","placeholder"])]),n("div",lt,[r(N,{class:"btn-gradient btn-block",onClick:k},{default:I(()=>[P(s(c.$t("add")),1)]),_:1}),n("div",ut,[n("div",ot,s(c.$t("added")),1),n("ul",null,[(S(!0),$(le,null,ue(p(i).whiteList,R=>(S(),$("li",pt,[r(ae,{text:R,smallText:p(oe)(R)},null,8,["text","smallText"]),r(U,{type:"primary",underline:!1,onClick:z=>T(R)},{default:I(()=>[P(s(c.$t("remove")),1)]),_:2},1032,["onClick"])]))),256))])])]),r(K,{txHash:g.value,modelValue:L.value},null,8,["txHash","modelValue"])])}}},yt={class:"transfer"},dt={class:"dlg-item"},mt={class:"dlg-item-title"},ct={class:"dlg-item"},bt={class:"dlg-item-title"},ft={class:"dlg-bottom"},vt={__name:"TransferOwnership",emits:["operateSuccess"],setup(F,{emit:a}){const{t:e}=H(),w=q(),i=j(),t=v(""),m=v(!1),g=v(!1),L=v(i.owner),_=v("");async function k(){if(!w.isConnecting){y.error(e("pleaseConnectWallet"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(_.value)){y({message:e("trueFormat"),type:"warning"});return}if(_.value==L.value){y({message:e("transferConsistent"),type:"warning"});return}g.value=!0;try{const d=await x.wallet.metamask.contract(i.tokenAddress,i.abi),T=await d.transferOwnership(_.value);y({message:e("submitSuccess"),type:"success"}),t.value=T.hash,m.value=!0,await T.wait(),i.owner=await d.owner(),_.value="",a("operateSuccess"),y({message:e("transferSuccess"),type:"success"})}catch(d){console.log(d),d.info&&d.info.error&&d.info.error.code===4001?y.error(e("userCancelOperate")):d.error&&d.error.message&&d.error.message=="Canceled"?y.error(e("userCancelOperate")):y.error(e("transferFail"))}finally{g.value=!1}}return(d,T)=>{const M=O("el-input"),c=O("el-button");return S(),$("div",yt,[n("div",dt,[n("div",mt,s(d.$t("ownership")),1),r(M,{class:"ipt-block",disabled:"",modelValue:L.value,"onUpdate:modelValue":T[0]||(T[0]=b=>L.value=b)},null,8,["modelValue"])]),n("div",ct,[n("div",bt,s(d.$t("transferTo")),1),r(M,{class:"ipt-block",modelValue:_.value,"onUpdate:modelValue":T[1]||(T[1]=b=>_.value=b),placeholder:d.$t("input")},null,8,["modelValue","placeholder"])]),n("div",ft,[r(c,{class:"btn-gradient btn-block",loading:g.value,onClick:k},{default:I(()=>[P(s(d.$t("submit")),1)]),_:1},8,["loading"])]),r(K,{txHash:t.value,modelValue:m.value},null,8,["txHash","modelValue"])])}}};const Tt={class:"token-detail"},wt={class:"content"},ht={class:"top"},gt={class:"small-title"},Mt={class:"left"},_t={class:"right"},kt={class:"left"},Ft={class:"right"},Lt={key:0},St={key:1},$t={key:2},xt={key:3},Ct={class:"left"},It={class:"right"},Bt={class:"left"},At={class:"right"},Vt={class:"left"},Pt={class:"right"},Wt={class:"left"},Ot={class:"right"},Nt={key:0},Rt={class:"left"},Et={class:"right"},Ut={class:"left"},Dt={class:"right"},Ht={key:0},qt={class:"small-title"},Kt={class:"model-manage"},jt={key:1},zt={class:"small-title"},Jt={key:0,class:"operate-item"},Xt={class:"left"},Gt={class:"right"},Qt={key:1,class:"operate-item"},Yt={class:"left"},Zt={class:"right"},en={key:2,class:"operate-item"},tn={class:"left"},nn={class:"right"},an={class:"small-title"},sn={class:"operate-item"},ln={class:"left"},un={class:"right"},on={class:"operate-item"},pn={class:"left"},rn={class:"right"},yn={class:"operate"},dn={__name:"Manage",setup(F){const{t:a}=H(),e=re(),w=ye(),i=q(),t=j(),m=v(!1),g=v(!1),L=v(!1),_=v(!1),k=v(!1),d=v(!1),T=v("");let M=e.params.deployerId,c=e.params.chain,b=e.params.tokenAddress;const f=V(()=>i.walletAddress.toLowerCase()===t.owner.toLowerCase());(M!=t.deployerId||b!=t.deployerId)&&(t.$reset(),t.init(e.params.deployerId,e.params.tokenAddress),R());const N=V(()=>{if(t.deployerId==1)return o(t.buyFundFee).plus(t.buyLPFee).plus(t.buyBurnFee);if(t.deployerId==2||t.deployerId==3)return o(t.buyFundFee).plus(t.buyLPFee).plus(t.buyRewardFee)}),U=V(()=>{if(t.deployerId==1)return o(t.sellFundFee).plus(t.sellLPFee).plus(t.sellBurnFee);if(t.deployerId==2||t.deployerId==3)return o(t.sellFundFee).plus(t.sellLPFee).plus(t.sellRewardFee)});async function R(){t.deployerId==0?await t.getFreeTaxTokenInfo(t.tokenAddress):t.deployerId==1?await t.getFeeTokenInfo(t.tokenAddress):t.deployerId==2?await t.getDividendSelfTokenInfo(t.tokenAddress):t.deployerId==3&&await t.getAddPoolDividendTokenInfo(t.tokenAddress)}async function z(){if(!g.value){if(!f.value){y({type:"error",message:"您不是合约持有者"});return}if(!t.tradeStart){g.value=!0;try{await(await(await x.wallet.metamask.contract(t.tokenAddress,t.abi)).startTrade()).wait(),y({type:"success",message:a("tradeOpening")}),t.tradeStart=!0}catch(l){console.log(l.info);const u=x.wallet.metamask.parseError(l);y({message:a(u),type:"error"})}finally{g.value=!1}}}}function X(){ee.confirm(a("giveUpConfirmInfo"),a("giveUpConfirm"),{confirmButtonText:a("confirm"),cancelButtonText:a("thinkAgain"),type:"warning",autofocus:!1,beforeClose:async(l,u,h)=>{u.confirmButtonLoading=!0,l=="confirm"&&await G(),u.confirmButtonLoading=!1,h()}}).then(()=>{}).catch(()=>{})}async function G(){try{const l=await x.wallet.metamask.contract(t.tokenAddress,t.abi);let u=await l.renounceOwnership();T.value=u.hash,d.value=!0,u.wait().then(async h=>{h.status===1&&(y({success:a("upChainSuccessfully"),type:"success"}),t.owner=await l.owner())})}catch(l){const u=x.wallet.metamask.parseError(l);y({message:a(u),type:"error"})}finally{}}function Q(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function Y(){w.push("/lock/create/token")}async function Z(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t.tokenAddress,symbol:t.symbol,decimals:t.decimals,image:""}}})}catch(l){console.log(l),l.info&&l.info.error&&l.info.error.code===4001?y.error(a("userCancelOperate")):l.error&&l.error.message&&l.error.message=="Canceled"?y.error(a("userCancelOperate")):y.error(a("unkonwError"))}}return(l,u)=>{const h=O("el-input"),A=O("el-button"),C=O("el-switch"),J=O("el-dialog"),ie=de("loading");return S(),$("div",Tt,[r(ve),me((S(),$("div",wt,[n("ul",null,[n("li",ht,[r(Te,{class:"token-name",symbol:p(t).symbol,name:p(t).name,bigIcon:p(fe)(p(c).toLowerCase(),p(t).tokenAddress.toLowerCase()),smallIcon:p(te)(p(c).toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),n("div",gt,s(l.$t("tokenInformation")),1),n("ul",null,[n("li",null,[n("div",Mt,s(l.$t("chain")),1),n("div",_t,[r(ce,{icon:p(te)(p(c).toLowerCase()),text:p(c).toUpperCase()},null,8,["icon","text"])])]),n("li",null,[n("div",kt,s(l.$t("template")),1),n("div",Ft,[p(t).deployerId==0?(S(),$("span",Lt,s(l.$t("freeTax")),1)):p(t).deployerId==1?(S(),$("span",St,s(l.$t("feeToken")),1)):p(t).deployerId==2?(S(),$("span",$t,s(l.$t("selfDividendToken")),1)):p(t).deployerId==3?(S(),$("span",xt,s(l.$t("addPoolDividend")),1)):W("",!0)])]),n("li",null,[n("div",Ct,s(l.$t("tokenName")),1),n("div",It,s(p(t).name),1)]),n("li",null,[n("div",Bt,s(l.$t("tokenSymbol")),1),n("div",At,s(p(t).symbol),1)]),n("li",null,[n("div",Vt,s(l.$t("tokenPrecision")),1),n("div",Pt,s(p(t).decimals),1)]),n("li",null,[n("div",Wt,s(l.$t("tokenAmount")),1),n("div",Ot,s(p(ne)(p(t).totalSupply)),1)]),p(t).deployerId!=2?(S(),$("li",Nt,[n("div",Rt,s(l.$t("isMintToken")),1),n("div",Et,s(p(t).canMint?l.$t("yes"):l.$t("no")),1)])):W("",!0),n("li",null,[n("div",Ut,s(l.$t("ownerAddr")),1),n("div",Dt,[r(ae,{text:p(t).owner,smallText:p(t).owner},null,8,["text","smallText"])])])]),p(t).canMint?(S(),$("div",Ht,[n("div",qt,s(l.$t("economicManagement")),1),n("div",Kt,[r(h,{class:"mint-input","model-value":p(ne)(p(t).totalSupply),disabled:""},null,8,["model-value"]),r(A,{class:"mint-btn",type:"primary",onClick:u[0]||(u[0]=B=>m.value=!0),disabled:!f.value},{default:I(()=>[P(s(l.$t("mint")),1)]),_:1},8,["disabled"])])])):W("",!0),p(t).deployerId!=0&&(p(t).enableManualStartTrade||p(t).enableChangeTax||p(t).enableWhiteList)?(S(),$("div",jt,[n("div",zt,s(l.$t("tradeManage")),1),n("ul",null,[p(t).deployerId!=0&&p(t).enableManualStartTrade?(S(),$("li",Jt,[n("div",Xt,s(l.$t("openTrade")),1),n("div",Gt,[r(C,{"model-value":p(t).tradeStart,loading:g.value,onClick:u[1]||(u[1]=B=>z())},null,8,["model-value","loading"])])])):W("",!0),p(t).deployerId!=0&&p(t).enableChangeTax?(S(),$("li",Qt,[n("div",Yt,s(l.$t("taxEdit")),1),n("div",Zt,[n("span",null,s(l.$t("buy"))+s(N.value)+"%"+s(l.$t("sell"))+s(U.value)+"%",1),r(A,{class:"btn",key:"primary",type:"primary",disabled:!f.value,link:"",onClick:u[2]||(u[2]=B=>_.value=!0)},{default:I(()=>[P(s(l.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),p(t).deployerId!=0&&p(t).enableWhiteList?(S(),$("li",en,[n("div",tn,s(l.$t("whiteList2")),1),n("div",nn,[n("span",null,s(p(t).whiteList.length),1),r(A,{class:"btn",key:"primary",disabled:!f.value,type:"primary",link:"",onClick:u[3]||(u[3]=B=>L.value=!0)},{default:I(()=>[P(s(l.$t("add")),1)]),_:1},8,["disabled"])])])):W("",!0)])])):W("",!0),n("div",an,s(l.$t("authorityManagement")),1),n("ul",null,[n("li",sn,[n("div",ln,s(l.$t("contractOwnership")),1),n("div",un,[r(A,{class:"btn",key:"primary",type:"primary",link:"",disabled:!f.value,onClick:X},{default:I(()=>[P(s(l.$t("renounce")),1)]),_:1},8,["disabled"])])]),n("li",on,[n("div",pn,s(l.$t("transferOwnership")),1),n("div",rn,[r(A,{class:"btn",key:"primary",type:"primary",link:"",disabled:!f.value,onClick:u[4]||(u[4]=B=>k.value=!0)},{default:I(()=>[P(s(l.$t("transfer")),1)]),_:1},8,["disabled"])])])]),n("div",yn,[r(A,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:Q},{default:I(()=>[P(s(l.$t("LPAddOrManage")),1)]),_:1}),r(A,{class:"btn",text:"",bg:"",type:"primary",onClick:Y},{default:I(()=>[P(s(l.$t("lockToken")),1)]),_:1}),p(i).walletType=="metamask"?(S(),be(A,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:Z},{default:I(()=>[P(s(l.$t("importToWallet")),1)]),_:1})):W("",!0)])])),[[ie,p(t).loading]]),r(J,{modelValue:m.value,"onUpdate:modelValue":u[6]||(u[6]=B=>m.value=B),title:l.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:I(()=>[r(Be,{onOperateSuccess:u[5]||(u[5]=B=>m.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:_.value,"onUpdate:modelValue":u[8]||(u[8]=B=>_.value=B),title:l.$t("taxEdit"),class:"dlg dlg-rate"},{default:I(()=>[r(at,{onOperateSuccess:u[7]||(u[7]=B=>_.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:L.value,"onUpdate:modelValue":u[10]||(u[10]=B=>L.value=B),title:l.$t("whiteListManage"),class:"dlg dlg-white-list"},{default:I(()=>[r(rt,{onOperateSuccess:u[9]||(u[9]=B=>L.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:k.value,"onUpdate:modelValue":u[12]||(u[12]=B=>k.value=B),title:l.$t("transferOwnership"),class:"dlg dlg-white-list"},{default:I(()=>[r(vt,{onOperateSuccess:u[11]||(u[11]=B=>k.value=!1)})]),_:1},8,["modelValue","title"]),r(K,{txHash:T.value,modelValue:d.value},null,8,["txHash","modelValue"])])}}},Mn=pe(dn,[["__scopeId","data-v-e8369e8f"]]);export{Mn as default};
