import{L as ie,m as $,C as o,i as D,j as H,r as b,a as O,o as k,c as L,b as a,t as s,d as r,p,w as B,e as P,E as m,y as V,A as W,F as se,h as ue,s as le,M as Z,_ as oe,f as pe,u as re,I as ye,J as de,N as me,B as ce,v as be,q as ee,O as te}from"./index-18187a1e.js";import{B as fe}from"./Back-afca3803.js";import{C as ne,T as ve}from"./CopyText-981480e0.js";import{_ as q}from"./OperateSuccessDialog-9793c619.js";import{f as U,a as Te}from"./units-227812fa.js";import{R}from"./Rate-713e26da.js";import"./TokenIcon-91f5a9a9.js";import"./TokenIcon.vuevuetypestyleindex0scopedc700f23blang-01358ba7.js";import"./DoubleToken-0835ca43.js";const we=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],he=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Me=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ge=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],K=ie("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,whiteListCount:0,whiteList:[]}),actions:{init(_,i){switch(this.deployerId=Number(_),this.tokenAddress=i.toLowerCase(),this.deployerId){case 0:this.abi=we;break;case 1:this.abi=he;break;case 2:this.abi=Me;break;case 3:this.abi=ge;break;default:this.abi=null}},async getFreeTaxTokenInfo(_){this.loading=!0;const i=await $.wallet.metamask.contract(_,this.abi);Promise.all([i.name(),i.canMint(),i.symbol(),i.decimals(),i.totalSupply(),i.owner()]).then(t=>{this.name=t[0],this.canMint=t[1],this.symbol=t[2],this.decimals=Number(t[3]),this.totalSupply=U(t[4].toString(),Number(this.decimals)),this.owner=t[5]}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getWhiteList(_){try{const i=await $.wallet.metamask.contract(_,this.abi);this.whiteListCount=await i.feeWhiteListCount();let t=[];this.whiteListCount>0&&(t=await i.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=t.map(n=>n.toLowerCase()),console.log(this.whiteListCount),console.log(this.whiteList)}catch(i){throw i}},async getTokenFee(_){const i=await $.wallet.metamask.contract(_,this.abi);let t=[];this.deployerId==1?t=[i._buyFundFee(),i._buyLPFee(),i._buyBurnFee(),i._sellFundFee(),i._sellLPFee(),i._sellBurnFee()]:(this.deployerId==2||this.deployerId==3)&&(t=[i._buyFundFee(),i._buyLPFee(),i._buyRewardFee(),i._sellFundFee(),i._sellLPFee(),i._sellRewardFee()]),Promise.all(t).then(n=>{console.log(n),this.deployerId==1?(this.buyFundFee=o(n[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(n[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=o(n[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(n[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(n[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=o(n[5]).div(1e4).multipliedBy(100).toString()):(this.deployerId==2||this.deployerId==3)&&(this.buyFundFee=o(n[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(n[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=o(n[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(n[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(n[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=o(n[5]).div(1e4).multipliedBy(100).toString())}).catch(n=>{console.log(n)})},async getFeeTokenInfo(_){this.loading=!0;const i=await $.wallet.metamask.contract(_,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.canMint(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.canMint=t[5],this.enableManualStartTrade=t[6],this.tradeStart=t[7],this.enableWhiteList=t[8],this.enableChangeTax=t[9],await this.getTokenFee(_),await this.getWhiteList(_)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getDividendSelfTokenInfo(_){this.loading=!0;const i=await $.wallet.metamask.contract(_,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],await this.getTokenFee(_),await this.getWhiteList(_)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getAddPoolDividendTokenInfo(_){this.loading=!0;const i=await $.wallet.metamask.contract(_,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax(),i.canMint()]).then(async t=>{console.log(t),this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.canMint=t[9],await this.getTokenFee(_),await this.getWhiteList(_)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})}}}),_e={class:"mint"},ke={class:"dlg-item"},Fe={class:"dlg-item-title"},Le={class:"dlg-item"},Se={class:"dlg-item-title"},$e={class:"dlg-item"},xe={class:"dlg-item-title"},Ie={class:"dlg-bottom"},Be={__name:"Mint",emits:["operateSuccess"],setup(_,{emit:i}){const{t}=D(),n=H(),v=K(),e=b(""),f=b(n.walletAddress),S=b(""),h=b(!1),M=b(!1);function y(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(f.value)||m({message:t("addressWrong"),type:"warning"})}async function F(){if(!e.value){m({message:t("amountEmpty"),type:"warning"});return}if(e.value.replace(".","").length>34){m({message:t("amountOver"),type:"warning"});return}let g=e.value.split(".");if(g[1]&&g[1].length>v.decimals){m({message:t("amountOver"),type:"warning"});return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(f.value)){m({message:t("addressWrong"),type:"warning"});return}h.value=!0;try{const c=await $.wallet.metamask.contract(v.tokenAddress,v.abi);let d=await c.mint(f.value,Te(e.value,v.decimals));S.value=d.hash,M.value=!0,d.wait().then(async w=>{if(w.status===1){m({message:t("upChainSuccessfully"),type:"success"});let x=await c.totalSupply();v.totalSupply=U(x.toString(),v.decimals),h.value=!1,i("operateSuccess")}})}catch(c){h.value=!1;const d=$.wallet.metamask.parseError(c);m({message:t(d),type:"error"})}finally{}}return(g,c)=>{const d=O("el-input"),w=O("el-button");return k(),L("div",_e,[a("div",ke,[a("div",Fe,s(g.$t("currentTotal")),1),r(d,{class:"ipt-block",disabled:"",modelValue:p(v).totalSupply,"onUpdate:modelValue":c[0]||(c[0]=x=>p(v).totalSupply=x)},null,8,["modelValue"])]),a("div",Le,[a("div",Se,s(g.$t("mintTokenAmount")),1),r(d,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":c[1]||(c[1]=x=>e.value=x),placeholder:g.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),a("div",$e,[a("div",xe,s(g.$t("receivingAddress")),1),r(d,{class:"ipt-block",modelValue:f.value,"onUpdate:modelValue":c[2]||(c[2]=x=>f.value=x),onBlur:y,placeholder:g.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),a("div",Ie,[r(w,{class:"btn-gradient btn-block",loading:h.value,onClick:F},{default:B(()=>[P(s(g.$t("submitAdd")),1)]),_:1},8,["loading"])]),r(q,{txHash:S.value,modelValue:M.value},null,8,["txHash","modelValue"])])}}},Ce={class:"edit-rate"},Ae={class:"dlg-item"},Ve={class:"dlg-item-title"},Pe={class:"dlg-item-value"},We={class:"rate-item"},Oe={class:"rate-item-title"},Ne={class:"rate-item"},Re={class:"rate-item-title"},Ee={key:0,class:"rate-item"},Ue={class:"rate-item-title"},De={key:1,class:"rate-item"},He={class:"rate-item-title"},qe={class:"dlg-item"},Ke={class:"dlg-item-title"},je={class:"dlg-item-value"},Je={class:"rate-item"},Xe={class:"rate-item-title"},ze={class:"rate-item"},Ge={class:"rate-item-title"},Qe={key:0,class:"rate-item"},Ye={class:"rate-item-title"},Ze={key:1,class:"rate-item"},et={class:"rate-item-title"},tt={class:"dlg-bottom"},nt={__name:"EditTax",emits:["operateSuccess"],setup(_,{emit:i}){const{t}=D();H();const n=K(),v=b(!1),e=b(n.buyFundFee),f=b(n.buyLPFee),S=b(n.buyBurnFee),h=b(n.buyRewardFee),M=b(n.sellFundFee),y=b(n.sellLPFee),F=b(n.sellBurnFee),g=b(n.sellRewardFee),c=b(""),d=b(!1),w=V(()=>{if(n.deployerId==1)return o(e.value).plus(f.value).plus(S.value);if(n.deployerId==2||n.deployerId==3)return o(e.value).plus(f.value).plus(h.value)}),x=V(()=>{if(n.deployerId==1)return o(M.value).plus(y.value).plus(F.value);if(n.deployerId==2||n.deployerId==3)return o(M.value).plus(y.value).plus(g.value)}),E=V(()=>{if(n.deployerId==1)return Number(o(20).minus(f.value).minus(S.value));if(n.deployerId==2||n.deployerId==3)return Number(o(20).minus(f.value).minus(h.value))}),N=V(()=>{if(n.deployerId==1)return Number(o(20).minus(e.value).minus(S.value));if(n.deployerId==2||n.deployerId==3)return Number(o(20).minus(e.value).minus(h.value))}),j=V(()=>{if(n.deployerId==1)return Number(o(20).minus(e.value).minus(f.value))}),X=V(()=>{if(n.deployerId==2||n.deployerId==3)return Number(o(20).minus(e.value).minus(f.value).toNumber())}),z=V(()=>{if(n.deployerId==1)return Number(o(20).minus(y.value).minus(F.value));if(n.deployerId==2||n.deployerId==3)return Number(o(20).minus(y.value).minus(g.value))}),G=V(()=>{if(n.deployerId==1)return Number(o(20).minus(M.value).minus(F.value));if(n.deployerId==2||n.deployerId==3)return Number(o(20).minus(M.value).minus(g.value))}),Q=V(()=>{if(n.deployerId==1)return Number(o(20).minus(M.value).minus(y.value))}),Y=V(()=>{if(n.deployerId==2||n.deployerId==3)return o(20).minus(M.value).minus(y.value).toNumber()});async function u(){if(n.deployerId==1){if(o(e.value).plus(S.value).plus(f.value).plus(M.value).plus(F.value).plus(y.value).lte(0)){m({type:"error",message:t("taxlimit1")});return}}else if(n.deployerId==2){if(o(e.value).plus(f.value).plus(M.value).plus(y.value).lte(0)){m({type:"error",message:t("taxlimit2")});return}}else if(n.deployerId==3&&o(e.value).plus(h.value).plus(f.value).plus(M.value).plus(g.value).plus(y.value).lte(0)){m({type:"error",message:t("taxlimit1")});return}v.value=!0;try{const l=await $.wallet.metamask.contract(n.tokenAddress,n.abi);let T;n.deployerId==1?T=[o(f.value).div(100).multipliedBy(1e4).toNumber(),o(S.value).div(100).multipliedBy(1e4).toNumber(),o(e.value).div(100).multipliedBy(1e4).toNumber(),o(y.value).div(100).multipliedBy(1e4).toNumber(),o(F.value).div(100).multipliedBy(1e4).toNumber(),o(M.value).div(100).multipliedBy(1e4).toNumber()]:n.deployerId==2?T=[o(f.value).div(100).multipliedBy(1e4).toNumber(),o(h.value).div(100).multipliedBy(1e4).toNumber(),o(e.value).div(100).multipliedBy(1e4).toNumber(),o(y.value).div(100).multipliedBy(1e4).toNumber(),o(g.value).div(100).multipliedBy(1e4).toNumber(),o(M.value).div(100).multipliedBy(1e4).toNumber()]:n.deployerId==3&&(T=[o(e.value).div(100).multipliedBy(1e4).toNumber(),o(h.value).div(100).multipliedBy(1e4).toNumber(),o(f.value).div(100).multipliedBy(1e4).toNumber(),o(M.value).div(100).multipliedBy(1e4).toNumber(),o(g.value).div(100).multipliedBy(1e4).toNumber(),o(y.value).div(100).multipliedBy(1e4).toNumber()]);const A=await l.completeCustoms(T);m({type:"success",message:t("submitSuccess")}),c.value=A.hash,d.value=!0,await A.wait(),n.getTokenFee(n.tokenAddress),m({type:"success",message:t("editTaxSuccess")}),i("operateSuccess")}catch(l){const T=$.wallet.metamask.parseError(l);m({message:t(T),type:"error"})}finally{v.value=!1}}return(l,T)=>{const A=O("el-button");return k(),L("div",Ce,[a("div",Ae,[a("div",Ve,s(l.$t("editBuyTax",{buyFee:w.value})),1),a("div",Pe,[a("div",We,[a("div",Oe,s(l.$t("marketingTax")),1),r(R,{class:"rate-item-value",modelValue:e.value,"onUpdate:modelValue":T[0]||(T[0]=I=>e.value=I),max:E.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),a("div",Ne,[a("div",Re,s(l.$t("liquidityTax")),1),r(R,{class:"rate-item-value",modelValue:f.value,"onUpdate:modelValue":T[1]||(T[1]=I=>f.value=I),max:N.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),p(n).deployerId==1?(k(),L("div",Ee,[a("div",Ue,s(l.$t("burnTax")),1),r(R,{class:"rate-item-value",modelValue:S.value,"onUpdate:modelValue":T[2]||(T[2]=I=>S.value=I),max:j.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),p(n).deployerId==2||p(n).deployerId==3?(k(),L("div",De,[a("div",He,s(l.$t("rewardTax")),1),r(R,{class:"rate-item-value",modelValue:h.value,"onUpdate:modelValue":T[3]||(T[3]=I=>h.value=I),max:X.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),a("div",qe,[a("div",Ke,s(l.$t("editSellTax",{sellFee:x.value})),1),a("div",je,[a("div",Je,[a("div",Xe,s(l.$t("marketingTax")),1),r(R,{class:"rate-item-value",modelValue:M.value,"onUpdate:modelValue":T[4]||(T[4]=I=>M.value=I),max:z.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),a("div",ze,[a("div",Ge,s(l.$t("liquidityTax")),1),r(R,{class:"rate-item-value",modelValue:y.value,"onUpdate:modelValue":T[5]||(T[5]=I=>y.value=I),max:G.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),p(n).deployerId==1?(k(),L("div",Qe,[a("div",Ye,s(l.$t("burnTax")),1),r(R,{class:"rate-item-value",modelValue:F.value,"onUpdate:modelValue":T[6]||(T[6]=I=>F.value=I),max:Q.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),p(n).deployerId==2||p(n).deployerId==3?(k(),L("div",Ze,[a("div",et,s(l.$t("rewardTax")),1),r(R,{class:"rate-item-value",modelValue:g.value,"onUpdate:modelValue":T[7]||(T[7]=I=>g.value=I),max:Y.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),a("div",tt,[r(A,{class:"btn-gradient btn-block",loading:v.value,onClick:u},{default:B(()=>[P(s(l.$t("submit")),1)]),_:1},8,["loading"])]),r(q,{txHash:c.value,modelValue:d.value},null,8,["txHash","modelValue"])])}}},at={class:"mint"},it={class:"dlg-item"},st={class:"dlg-bottom"},ut={class:"white-list-table"},lt={class:"white-list-table-title"},ot={class:"white-list-table-item"},pt={__name:"WhiteList",emits:["operateSuccess"],setup(_,{emit:i}){const{t}=D();H();const n=K(),v=b(""),e=b(""),f=b(""),S=b(!1);function h(c){return c&&c.trim()}function M(){if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(v.value)){m({type:"warnning",message:t("trueFormat")});return}if(n.whiteList.findIndex(d=>d==v.value)!=-1){m({type:"warning",message:t("addressAdded")});return}Z.confirm(t("addWhiteListWarn",{userAddress:v.value,tokenName:n.symbol}),"",{cancelButtonText:t("thinkAgain"),confirmButtonText:t("confirm"),beforeClose:async(d,w,x)=>{w.confirmButtonLoading=!0,d=="confirm"&&await y(),w.confirmButtonLoading=!1,x()},callback:d=>{}})}async function y(){let c=v.value;try{const d=await $.wallet.metamask.contract(n.tokenAddress,n.abi);console.log(d),await(await d.setFeeWhiteList([v.value],!0)).wait(),await n.getWhiteList(n.tokenAddress),m({type:"success",message:t("addWhiteListSuccess",{userAddress:c})})}catch(d){const w=$.wallet.metamask.parseError(d);m({message:t(w),type:"error"})}finally{}}function F(c){e.value=c,Z.confirm(t("removeWhiteListWarn",{userAddress:e.value}),"",{cancelButtonText:t("thinkAgain"),confirmButtonText:t("confirm"),beforeClose:async(d,w,x)=>{w.confirmButtonLoading=!0,d=="confirm"&&await g(),w.confirmButtonLoading=!1,x()},callback:d=>{}})}async function g(){let c=e.value;try{const d=await $.wallet.metamask.contract(n.tokenAddress,n.abi);console.log(d);const w=await d.setFeeWhiteList([e.value],!1);console.log(w),await w.wait(),await n.getWhiteList(n.tokenAddress),e.value="",m({type:"success",message:t("removeWhiteListSuccess",{userAddress:c})})}catch(d){const w=$.wallet.metamask.parseError(d);m({message:t(w),type:"error"})}finally{}}return(c,d)=>{const w=O("el-input"),x=O("el-button"),E=O("el-link");return k(),L("div",at,[a("div",it,[r(w,{class:"ipt-block",clearable:"",formatter:h,modelValue:v.value,"onUpdate:modelValue":d[0]||(d[0]=N=>v.value=N),placeholder:p(t)("inputAddress")},null,8,["modelValue","placeholder"])]),a("div",st,[r(x,{class:"btn-gradient btn-block",onClick:M},{default:B(()=>[P(s(c.$t("add")),1)]),_:1}),a("div",ut,[a("div",lt,s(c.$t("added")),1),a("ul",null,[(k(!0),L(se,null,ue(p(n).whiteList,N=>(k(),L("li",ot,[r(ne,{text:N,smallText:p(le)(N)},null,8,["text","smallText"]),r(E,{type:"primary",underline:!1,onClick:j=>F(N)},{default:B(()=>[P(s(c.$t("remove")),1)]),_:2},1032,["onClick"])]))),256))])])]),r(q,{txHash:f.value,modelValue:S.value},null,8,["txHash","modelValue"])])}}},rt={class:"transfer"},yt={class:"dlg-item"},dt={class:"dlg-item-title"},mt={class:"dlg-item"},ct={class:"dlg-item-title"},bt={class:"dlg-bottom"},ft={__name:"TransferOwnership",emits:["operateSuccess"],setup(_,{emit:i}){const{t}=D();H();const n=K(),v=b(""),e=b(!1),f=b(!1),S=b(n.owner),h=b("");async function M(){if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(h.value)){m({message:t("trueFormat"),type:"warning"});return}if(h.value==S.value){m({message:t("transferConsistent"),type:"warning"});return}f.value=!0;try{const y=await $.wallet.metamask.contract(n.tokenAddress,n.abi),F=await y.transferOwnership(h.value);m({message:t("submitSuccess"),type:"success"}),v.value=F.hash,e.value=!0,await F.wait(),n.owner=await y.owner(),h.value="",i("operateSuccess"),m({message:t("transferSuccess"),type:"success"})}catch(y){console.log(y),y.info&&y.info.error&&y.info.error.code===4001?m.error(t("userCancelOperate")):y.error&&y.error.message&&y.error.message=="Canceled"?m.error(t("userCancelOperate")):m.error(t("transferFail"))}finally{f.value=!1}}return(y,F)=>{const g=O("el-input"),c=O("el-button");return k(),L("div",rt,[a("div",yt,[a("div",dt,s(y.$t("ownership")),1),r(g,{class:"ipt-block",disabled:"",modelValue:S.value,"onUpdate:modelValue":F[0]||(F[0]=d=>S.value=d)},null,8,["modelValue"])]),a("div",mt,[a("div",ct,s(y.$t("transferTo")),1),r(g,{class:"ipt-block",modelValue:h.value,"onUpdate:modelValue":F[1]||(F[1]=d=>h.value=d),placeholder:y.$t("input")},null,8,["modelValue","placeholder"])]),a("div",bt,[r(c,{class:"btn-gradient btn-block",loading:f.value,onClick:M},{default:B(()=>[P(s(y.$t("submit")),1)]),_:1},8,["loading"])]),r(q,{txHash:v.value,modelValue:e.value},null,8,["txHash","modelValue"])])}}};const vt={class:"token-detail"},Tt={class:"content"},wt={class:"top"},ht={class:"small-title"},Mt={class:"left"},gt={class:"right"},_t={class:"left"},kt={class:"right"},Ft={key:0},Lt={key:1},St={key:2},$t={key:3},xt={class:"left"},It={class:"right"},Bt={class:"left"},Ct={class:"right"},At={class:"left"},Vt={class:"right"},Pt={class:"left"},Wt={class:"right"},Ot={key:0},Nt={class:"left"},Rt={class:"right"},Et={class:"left"},Ut={class:"right"},Dt={key:0},Ht={class:"small-title"},qt={class:"model-manage"},Kt={key:1},jt={class:"small-title"},Jt={key:0,class:"operate-item"},Xt={class:"left"},zt={class:"right"},Gt={key:1,class:"operate-item"},Qt={class:"left"},Yt={class:"right"},Zt={key:2,class:"operate-item"},en={class:"left"},tn={class:"right"},nn={class:"small-title"},an={class:"operate-item"},sn={class:"left"},un={class:"right"},ln={class:"operate-item"},on={class:"left"},pn={class:"right"},rn={class:"operate"},yn={__name:"Manage",setup(_){const{t:i}=D(),t=pe(),n=re(),v=H(),e=K(),f=b(!1),S=b(!1),h=b(!1),M=b(!1),y=b(!1),F=b(!1),g=b("");let c=t.params.deployerId,d=t.params.tokenAddress;const w=V(()=>v.walletAddress.toLowerCase()===e.owner.toLowerCase());(c!=e.deployerId||d!=e.deployerId)&&(e.$reset(),e.init(t.params.deployerId,t.params.tokenAddress),N());const x=V(()=>{if(e.deployerId==1)return o(e.buyFundFee).plus(e.buyLPFee).plus(e.buyBurnFee);if(e.deployerId==2||e.deployerId==3)return o(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee)}),E=V(()=>{if(e.deployerId==1)return o(e.sellFundFee).plus(e.sellLPFee).plus(e.sellBurnFee);if(e.deployerId==2||e.deployerId==3)return o(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee)});async function N(){e.deployerId==0?await e.getFreeTaxTokenInfo(e.tokenAddress):e.deployerId==1?await e.getFeeTokenInfo(e.tokenAddress):e.deployerId==2?await e.getDividendSelfTokenInfo(e.tokenAddress):e.deployerId==3&&await e.getAddPoolDividendTokenInfo(e.tokenAddress)}async function j(){if(!S.value){if(!w.value){m({type:"error",message:"您不是合约持有者"});return}if(!e.tradeStart){S.value=!0;try{await(await(await $.wallet.metamask.contract(e.tokenAddress,e.abi)).startTrade()).wait(),m({type:"success",message:i("tradeOpening")}),e.tradeStart=!0}catch(u){console.log(u.info);const l=$.wallet.metamask.parseError(u);m({message:i(l),type:"error"})}finally{S.value=!1}}}}function X(){Z.confirm(i("giveUpConfirmInfo"),i("giveUpConfirm"),{confirmButtonText:i("confirm"),cancelButtonText:i("thinkAgain"),type:"warning",beforeClose:async(u,l,T)=>{l.confirmButtonLoading=!0,u=="confirm"&&await z(),l.confirmButtonLoading=!1,T()}}).then(()=>{}).catch(()=>{})}async function z(){try{const u=await $.wallet.metamask.contract(e.tokenAddress,e.abi);let l=await u.renounceOwnership();g.value=l.hash,F.value=!0,l.wait().then(async T=>{T.status===1&&(m({success:i("upChainSuccessfully"),type:"success"}),e.owner=await u.owner())})}catch(u){const l=$.wallet.metamask.parseError(u);m({message:i(l),type:"error"})}finally{}}function G(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function Q(){n.push("/lock/create/token")}async function Y(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e.tokenAddress,symbol:e.symbol,decimals:e.decimals,image:""}}})}catch(u){console.log(u),u.info&&u.info.error&&u.info.error.code===4001?m.error(i("userCancelOperate")):u.error&&u.error.message&&u.error.message=="Canceled"?m.error(i("userCancelOperate")):m.error(i("unkonwError"))}}return(u,l)=>{const T=O("el-input"),A=O("el-button"),I=O("el-switch"),J=O("el-dialog"),ae=ye("loading");return k(),L("div",vt,[r(fe),de((k(),L("div",Tt,[a("ul",null,[a("li",wt,[r(ve,{class:"token-name",symbol:p(e).symbol,name:p(e).name,bigIcon:p(be)(p(v).chain.toLowerCase(),p(e).tokenAddress.toLowerCase()),smallIcon:p(ee)(p(v).chain.toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),a("div",ht,s(u.$t("tokenInformation")),1),a("ul",null,[a("li",null,[a("div",Mt,s(u.$t("chain")),1),a("div",gt,[r(me,{icon:p(ee)(p(v).chain.toLowerCase()),text:p(v).chain.toUpperCase()},null,8,["icon","text"])])]),a("li",null,[a("div",_t,s(u.$t("template")),1),a("div",kt,[p(e).deployerId==0?(k(),L("span",Ft,s(u.$t("freeTax")),1)):p(e).deployerId==1?(k(),L("span",Lt,s(u.$t("feeToken")),1)):p(e).deployerId==2?(k(),L("span",St,s(u.$t("selfDividendToken")),1)):p(e).deployerId==3?(k(),L("span",$t,s(u.$t("addPoolDividend")),1)):W("",!0)])]),a("li",null,[a("div",xt,s(u.$t("tokenName")),1),a("div",It,s(p(e).name),1)]),a("li",null,[a("div",Bt,s(u.$t("tokenSymbol")),1),a("div",Ct,s(p(e).symbol),1)]),a("li",null,[a("div",At,s(u.$t("tokenPrecision")),1),a("div",Vt,s(p(e).decimals),1)]),a("li",null,[a("div",Pt,s(u.$t("tokenAmount")),1),a("div",Wt,s(p(te)(p(e).totalSupply)),1)]),p(e).deployerId!=2?(k(),L("li",Ot,[a("div",Nt,s(u.$t("isMintToken")),1),a("div",Rt,s(p(e).canMint?u.$t("yes"):u.$t("no")),1)])):W("",!0),a("li",null,[a("div",Et,s(u.$t("ownerAddr")),1),a("div",Ut,[r(ne,{text:p(e).owner,smallText:p(e).owner},null,8,["text","smallText"])])])]),p(e).canMint?(k(),L("div",Dt,[a("div",Ht,s(u.$t("economicManagement")),1),a("div",qt,[r(T,{class:"mint-input","model-value":p(te)(p(e).totalSupply),disabled:""},null,8,["model-value"]),r(A,{class:"mint-btn",type:"primary",onClick:l[0]||(l[0]=C=>f.value=!0),disabled:!w.value},{default:B(()=>[P(s(u.$t("mint")),1)]),_:1},8,["disabled"])])])):W("",!0),p(e).deployerId!=0&&(p(e).enableManualStartTrade||p(e).enableChangeTax||p(e).enableWhiteList)?(k(),L("div",Kt,[a("div",jt,s(u.$t("tradeManage")),1),a("ul",null,[p(e).deployerId!=0&&p(e).enableManualStartTrade?(k(),L("li",Jt,[a("div",Xt,s(u.$t("openTrade")),1),a("div",zt,[r(I,{"model-value":p(e).tradeStart,loading:S.value,onClick:l[1]||(l[1]=C=>j())},null,8,["model-value","loading"])])])):W("",!0),p(e).deployerId!=0&&p(e).enableChangeTax?(k(),L("li",Gt,[a("div",Qt,s(u.$t("taxEdit")),1),a("div",Yt,[a("span",null,s(u.$t("buy"))+s(x.value)+"%"+s(u.$t("sell"))+s(E.value)+"%",1),r(A,{class:"btn",key:"primary",type:"primary",disabled:!w.value,link:"",onClick:l[2]||(l[2]=C=>M.value=!0)},{default:B(()=>[P(s(u.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),p(e).deployerId!=0&&p(e).enableWhiteList?(k(),L("li",Zt,[a("div",en,s(u.$t("whiteList2")),1),a("div",tn,[a("span",null,s(p(e).whiteList.length),1),r(A,{class:"btn",key:"primary",disabled:!w.value,type:"primary",link:"",onClick:l[3]||(l[3]=C=>h.value=!0)},{default:B(()=>[P(s(u.$t("add")),1)]),_:1},8,["disabled"])])])):W("",!0)])])):W("",!0),a("div",nn,s(u.$t("authorityManagement")),1),a("ul",null,[a("li",an,[a("div",sn,s(u.$t("contractOwnership")),1),a("div",un,[r(A,{class:"btn",key:"primary",type:"primary",link:"",disabled:!w.value,onClick:X},{default:B(()=>[P(s(u.$t("renounce")),1)]),_:1},8,["disabled"])])]),a("li",ln,[a("div",on,s(u.$t("transferOwnership")),1),a("div",pn,[r(A,{class:"btn",key:"primary",type:"primary",link:"",disabled:!w.value,onClick:l[4]||(l[4]=C=>y.value=!0)},{default:B(()=>[P(s(u.$t("remove")),1)]),_:1},8,["disabled"])])])]),a("div",rn,[r(A,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:G},{default:B(()=>[P(s(u.$t("LPAddOrManage")),1)]),_:1}),r(A,{class:"btn",text:"",bg:"",type:"primary",onClick:Q},{default:B(()=>[P(s(u.$t("lockToken")),1)]),_:1}),p(v).walletType=="metamask"?(k(),ce(A,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:Y},{default:B(()=>[P(s(u.$t("importToWallet")),1)]),_:1})):W("",!0)])])),[[ae,p(e).loading]]),r(J,{modelValue:f.value,"onUpdate:modelValue":l[6]||(l[6]=C=>f.value=C),title:u.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:B(()=>[r(Be,{onOperateSuccess:l[5]||(l[5]=C=>f.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:M.value,"onUpdate:modelValue":l[8]||(l[8]=C=>M.value=C),title:u.$t("taxEdit"),class:"dlg dlg-rate"},{default:B(()=>[r(nt,{onOperateSuccess:l[7]||(l[7]=C=>M.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:h.value,"onUpdate:modelValue":l[10]||(l[10]=C=>h.value=C),title:u.$t("whiteListManage"),class:"dlg dlg-white-list"},{default:B(()=>[r(pt,{onOperateSuccess:l[9]||(l[9]=C=>h.value=!1)})]),_:1},8,["modelValue","title"]),r(J,{modelValue:y.value,"onUpdate:modelValue":l[12]||(l[12]=C=>y.value=C),title:u.$t("transferOwnership"),class:"dlg dlg-white-list"},{default:B(()=>[r(ft,{onOperateSuccess:l[11]||(l[11]=C=>y.value=!1)})]),_:1},8,["modelValue","title"]),r(q,{txHash:g.value,modelValue:F.value},null,8,["txHash","modelValue"])])}}},Mn=oe(yn,[["__scopeId","data-v-fde1b72b"]]);export{Mn as default};
