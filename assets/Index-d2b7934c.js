/* empty css                                                          */import{_ as R,u as W,i as j,j as w,e as $,o as L,c as G,f as t,t as n,A as x,l as k,q as I,z as H,h as b,x as U,F as z,D as M,b as r,E as m,M as A,a9 as X,y as K,B as O,k as ee}from"./index-1a6d1bbc.js";import{_ as q}from"./OperateSuccessDialog-5facfac0.js";import{e as Z}from"./ethers-e9d4ae29.js";import{S as te}from"./SelectLockDate-1e40d200.js";/* empty css                                                                */import{D as J}from"./DoubleToken-dd452491.js";import{b as F,a as Q,f as ae}from"./units-963d647b.js";const oe={class:"info"},le={class:"key"},se={class:"value"},ne={class:"key"},ce={class:"value"},ie={class:"key"},re={class:"value"},ue={class:"key"},de={class:"value"},ke={class:"dlg-bottom"},me={__name:"Unlock",props:{lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["close","operateSuccess"],setup(g,{emit:u}){const e=g,o=W(),{t:s}=j(),a=w(0n),p=w(0),c=w(!1),B=w("");async function E(){const l=await r.wallet.metamask.getGasPrice(),i=await r.wallet.metamask.getBalance(o.walletAddress);console.log("balance",i);let d;if(e.isLockV2){const S=await r.wallet.metamask.contractTokenLockV2(o.lock.tokenLockV2Address);a.value=await S.withdrawFee(),i<a.value&&m.error(s("balanceSlow2",{chainMianCoin:o.nativeCurrencySymbol,amount:F(a.value)})),d=await S.unlock.estimateGas(e.lockId,{value:a.value})}else{const S=await r.wallet.metamask.contractTokenLockV3(o.lock.tokenLockV3Address);a.value=await S.withdrawFee(),i<a.value&&m.error(s("balanceSlow2",{chainMianCoin:o.nativeCurrencySymbol,amount:F(a.value)})),d=await S.unlock.estimateGas(e.lockId,{value:a.value})}console.dir(d),p.value=F(d*l).toString(),console.log(p.value)}async function T(){const l=M.service({lock:!0,text:"Loading..."});if(e.isLockV2)try{const i=await r.wallet.metamask.contractTokenLockV2(o.lock.tokenLockV2Address);a.value=await i.withdrawFee();let d=await i.unlock(e.lockId,{value:a.value});console.dir(d),B.value=d.hash,c.value=!0,await d.wait(),u("operateSuccess")}catch(i){let d=r.wallet.metamask.parseError(i);m.error(s(d)),console.log(i)}finally{l.close()}else try{const i=await r.wallet.metamask.contractTokenLockV3(o.lock.tokenLockV3Address);a.value=await i.withdrawFee();let d=await i.unlock(e.lockId,{value:a.value});console.dir(d),B.value=d.hash,c.value=!0,await d.wait(),u("operateSuccess")}catch(i){let d=r.wallet.metamask.parseError(i);m.error(s(d)),console.log(i)}finally{l.close()}}async function y(){if(!o.isConnecting){m.error(s("pleaseConnectWallet")),v();return}const l=M.service({lock:!0,text:"Loading..."});try{await E()}catch(i){console.log(i)}finally{l.close()}}function v(){u("close")}return y(),(l,i)=>{const d=$("icon-text"),S=$("el-button");return L(),G(z,null,[t("ul",oe,[t("li",null,[t("div",le,n(l.$t("withdrawAssets")),1),t("div",se,[e.isLpToken?(L(),x(J,{key:0,class:"token-icon-20 image",token1:k(I)(e.chain,e.tokenList[0].address),token2:k(I)(e.chain,e.tokenList[1].address)},null,8,["token1","token2"])):(L(),x(d,{key:1,icon:k(I)(e.chain,e.address),text:e.symbol},null,8,["icon","text"]))])]),t("li",null,[t("div",ne,n(l.$t("withdrawNumber")),1),t("div",ce,[t("span",null,n(l.$t("toBeWithdrawNumber")+": "),1),H(n(g.amountString),1)])]),t("li",null,[t("div",ie,n(l.$t("withdrawFee")),1),t("div",re,n(`${a.value?k(Z).formatEther(a.value):"--"}
                            ${k(o).nativeCurrencySymbol}`),1)]),t("li",null,[t("div",ue,n(l.$t("gas")),1),t("div",de,n(`${p.value?p.value:"--"} ${k(o).nativeCurrencySymbol}`),1)])]),t("div",ke,[b(S,{class:"btn-gradient btn-block",block:"",onClick:T},{default:U(()=>[H(n(l.$t("withdraw")),1)]),_:1})]),b(q,{modelValue:c.value,"onUpdate:modelValue":i[0]||(i[0]=Y=>c.value=Y),txHash:l.lockTxHash,onClose:v},null,8,["modelValue","txHash"])],64)}}},pe=R(me,[["__scopeId","data-v-1034d84e"]]),Ze={__name:"Index",props:{modelValue:{type:Boolean,default:!1},lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["update:model-value","operateSuccess"],setup(g,{emit:u}){const e=g;function o(){u("update:model-value",!1)}function s(){u("operateSuccess")}return(a,p)=>{const c=$("el-dialog");return L(),x(c,{"model-value":e.modelValue,title:a.$t("withdrawAssets"),class:"dlg","destroy-on-close":"",onClose:o},{default:U(()=>[b(pe,{lockId:e.lockId,isLockV2:e.isLockV2,isLpToken:e.isLpToken,unlockDate:e.unlockDate,tokenList:e.tokenList,symbol:e.symbol,address:g.address,amountString:e.amountString,chain:e.chain,decimals:e.decimals,onClose:o,onOperateSuccess:s},null,8,["lockId","isLockV2","isLpToken","unlockDate","tokenList","symbol","address","amountString","chain","decimals"])]),_:1},8,["model-value","title"])}}};const fe={key:0,class:"info"},ve={class:"key"},ye={class:"value"},_e={class:"key"},ge={class:"value"},we={class:"blue-font"},he={class:"key"},Le={class:"value"},Se={class:"key"},be={class:"value"},Ve={class:"select-date"},Ce={class:"key"},$e={class:"value"},Te={key:1,class:"change-amount"},De={class:"key"},Ae={class:"value"},Ie={class:"dlg-bottom"},xe={__name:"Edit",props:{lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["close","operateSuccess"],setup(g,{emit:u}){const e=g,o=W(),{t:s}=j(),a=w(0n),p=w(A.unix(e.unlockDate).toDate()),c=w(e.amountString),B=w(""),E=w(""),T=w(!1),y=w("");async function v(){const _=await(await r.wallet.metamask.contractERC20(e.address)).balanceOf(o.walletAddress);B.value=ae(_,e.decimals),console.log("value:"+B.value),_==0n&&(m.error(s("balanceSlow")),u("error"))}async function l(){console.log("estimateGas");const f=A.unix(e.unlockDate).add(1,"day").unix(),_=await r.wallet.metamask.getGasPrice(),V=await r.wallet.metamask.getBalance(o.walletAddress);console.log("balance",V);let h;if(e.isLockV2){const C=await r.wallet.metamask.contractTokenLockV2(o.lock.tokenLockV2Address),N=await(await r.wallet.metamask.contractERC20(e.address)).decimals(),P=Q(e.amountString,N);a.value=await C.editFee(),V<a.value&&m.error(s("balanceSlow2",{chainMianCoin:o.nativeCurrencySymbol,amount:F(a.value)})),h=await C.editLock.estimateGas(e.lockId,P.toString(),f,{value:a.value})}else{const C=await r.wallet.metamask.contractTokenLockV3(o.lock.tokenLockV3Address);a.value=await C.editFee(),V<a.value&&m.error(s("balanceSlow2",{chainMianCoin:o.nativeCurrencySymbol,amount:F(a.value)})),h=await C.editLock.estimateGas(e.lockId,f,{value:a.value})}console.dir(h),E.value=F(h*_).toString(),console.log(E.value)}function i(){console.log(c.value),(O(c.value).lt(e.amountString)||!c.value)&&(c.value=e.amountString)}async function d(){if(!p.value){m.error(s("selectUnlockTime"));return}if(O(c.value).lt(e.amountString)||!c.value){m.error(s("newLockedAmountLimit"));return}if(O(c.value).minus(e.amountString).gt(O(B.value))){m.error(e.symbol+s("balanceSlow"));return}const f=M.service({lock:!0,text:"Loading..."}),_=A(p.value).unix();if(e.isLockV2){const V=await r.wallet.metamask.contractTokenLockV2(o.lock.tokenLockV2Address),C=await(await r.wallet.metamask.contractERC20(e.address)).decimals(),D=Q(c.value,C);console.log(D);try{a.value=await V.editFee();let N=await V.editLock(e.lockId.toString(),D.toString(),_,{value:a.value});console.dir(N),y.value=N.hash,T.value=!0,await N.wait(),u("operateSuccess")}catch(N){let P=r.wallet.metamask.parseError(N);m.error(s(P)),console.log(N)}finally{f.close()}}else{const V=await r.wallet.metamask.contractTokenLockV3(o.lock.tokenLockV3Address);try{a.value=await V.editFee();let h=await V.editLock(e.lockId.toString(),_,{value:a.value});console.dir(h),y.value=h.hash,T.value=!0,await h.wait(),u("operateSuccess")}catch(h){let C=r.wallet.metamask.parseError(h);m.error(s(C)),console.log(h)}finally{f.close()}}}async function S(){if(!o.isConnecting){m.error(s("pleaseConnectWallet")),u("close");return}const f=M.service({lock:!0,text:"Loading..."});try{p.value=A.unix(e.unlockDate).add(1,"day").endOf("day").toDate(),await v(),await l()}catch(_){console.log(_)}finally{f.close()}}function Y(){u("close")}return S(),(f,_)=>{const V=$("icon-text"),h=$("el-input"),C=$("el-button");return L(),G(z,null,[e.chain?(L(),G("ul",fe,[t("li",null,[t("div",ve,n(f.$t("lockAssets")),1),t("div",ye,[e.isLpToken?(L(),x(J,{key:0,class:"token-icon-20 image",token1:k(I)(e.chain,e.tokenList[0].address),token2:k(I)(e.chain,e.tokenList[1].address)},null,8,["token1","token2"])):(L(),x(V,{key:1,icon:k(I)(e.chain,e.address),text:e.symbol},null,8,["icon","text"]))])]),t("li",null,[t("div",_e,n(f.$t("unlockTime")),1),t("div",ge,[t("span",null,n(k(A).unix(e.unlockDate).format("YYYY-MM-DD HH:mm:ss")),1),t("span",null,[H("("),t("span",we,n(f.$t("dayLeft",{day:k(X)(k(A).unix(e.unlockDate).toDate())})),1),H(")")])])]),t("li",null,[t("div",he,n(f.$t("editFee")),1),t("div",Le,n(`${a.value?k(Z).formatEther(a.value):"--"} ${k(o).nativeCurrencySymbol}`),1)]),t("li",null,[t("div",Se,n(f.$t("gas")),1),t("div",be,n(`${E.value?E.value:"--"} ${k(o).nativeCurrencySymbol}`),1)])])):K("",!0),t("div",Ve,[t("div",Ce,n(f.$t("setDelayDate")),1),t("div",$e,[b(te,{modelValue:p.value,"onUpdate:modelValue":_[0]||(_[0]=D=>p.value=D),"min-date":k(A).unix(e.unlockDate).add(1,"day").endOf("day").toDate()},null,8,["modelValue","min-date"])])]),e.isLockV2?(L(),G("div",Te,[t("div",De,n(f.$t("newLockedAmount")),1),t("div",Ae,[b(h,{size:"large",type:"number",modelValue:c.value,"onUpdate:modelValue":_[1]||(_[1]=D=>c.value=D),onBlur:i,placeholder:f.$t("pleaseEnter"),clearable:""},null,8,["modelValue","placeholder"])])])):K("",!0),t("div",Ie,[b(C,{class:"btn-gradient btn-block",block:"",onClick:d},{default:U(()=>[H(n(f.$t("confirmAndLock")),1)]),_:1})]),b(q,{modelValue:T.value,"onUpdate:modelValue":_[2]||(_[2]=D=>T.value=D),txHash:y.value,onClose:Y},null,8,["modelValue","txHash"])],64)}}},Be=R(xe,[["__scopeId","data-v-9f11b17f"]]),et={__name:"Index",props:{modelValue:{type:Boolean,default:!1},lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["update:model-value","operateSuccess"],setup(g,{emit:u}){const e=g;function o(){u("update:model-value",!1)}function s(){u("operateSuccess")}return(a,p)=>{const c=$("el-dialog");return L(),x(c,{"model-value":e.modelValue,title:a.$t("editLock"),class:"dlg","destroy-on-close":"",onClose:o},{default:U(()=>[b(Be,{lockId:e.lockId,isLockV2:e.isLockV2,isLpToken:e.isLpToken,unlockDate:e.unlockDate,tokenList:e.tokenList,symbol:e.symbol,address:g.address,amountString:e.amountString,chain:e.chain,decimals:e.decimals,onClose:o,onOperateSuccess:s},null,8,["lockId","isLockV2","isLpToken","unlockDate","tokenList","symbol","address","amountString","chain","decimals"])]),_:1},8,["model-value","title"])}}};const Ee={class:"info"},Ne={class:"key"},He={class:"value"},Fe={class:"key"},Ue={class:"value"},Ge={class:"blue-font"},Me={class:"transfer-address"},Oe={class:"owner-address"},Ye={class:"dlg-bottom"},Pe={__name:"Transfer",props:{lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["close","operateSuccess"],setup(g,{emit:u}){const e=g,o=W(),{t:s}=j(),a=w("");w(0);const p=w(!1),c=w("");async function B(){if(!ee(a.value))return m.error(s("pleaseEnterTrueAddress")),!1;if(a.value==o.walletAddress)return m.error(s("transferConsistentOwner")),!1;const y=M.service({lock:!0,text:"Loading..."});if(e.isLockV2)try{let l=await(await r.wallet.metamask.contractTokenLockV2(o.lock.tokenLockV2Address)).transferLockOwnership(e.lockId,a.value);console.dir(l),c.value=l.hash,p.value=!0,await l.wait(),u("operateSuccess")}catch(v){let l=r.wallet.metamask.parseError(v);m.error(s(l)),console.log(v)}finally{y.close()}else try{let l=await(await r.wallet.metamask.contractTokenLockV3(o.lock.tokenLockV3Address)).transferLockOwnership(e.lockId,a.value);console.dir(l),c.value=l.hash,p.value=!0,await l.wait(),u("operateSuccess")}catch(v){let l=r.wallet.metamask.parseError(v);m.error(s(l)),console.log(v)}finally{y.close()}}async function E(){if(!o.isConnecting){m.error(s("pleaseConnectWallet")),T();return}}function T(){u("close")}return E(),(y,v)=>{const l=$("icon-text"),i=$("el-input"),d=$("el-button");return L(),G(z,null,[t("ul",Ee,[t("li",null,[t("div",Ne,n(y.$t("withdrawAssets")),1),t("div",He,[e.isLpToken?(L(),x(J,{key:0,class:"token-icon-20 image",token1:k(I)(e.chain,e.tokenList[0].address),token2:k(I)(e.chain,e.tokenList[1].address)},null,8,["token1","token2"])):(L(),x(l,{key:1,icon:k(I)(e.chain,e.address),text:e.symbol},null,8,["icon","text"]))])]),t("li",null,[t("div",Fe,n(y.$t("unlockTime")),1),t("div",Ue,[t("span",null,n(k(A).unix(e.unlockDate).format("YYYY-MM-DD HH:mm:ss")),1),t("span",null,[H("("),t("span",Ge,n(y.$t("dayLeft",{day:k(X)(k(A).unix(e.unlockDate).toDate())})),1),H(")")])])]),t("li",Me,[t("div",null,n(y.$t("transferLockedTo")),1),t("div",Oe,[b(i,{modelValue:a.value,"onUpdate:modelValue":v[0]||(v[0]=S=>a.value=S),placeholder:y.$t("enterReceivingAddress"),class:"ipt"},null,8,["modelValue","placeholder"])])])]),t("div",Ye,[b(d,{class:"btn-gradient btn-block",block:"",onClick:B},{default:U(()=>[H(n(y.$t("confirmTransfer")),1)]),_:1})]),b(q,{modelValue:p.value,"onUpdate:modelValue":v[1]||(v[1]=S=>p.value=S),txHash:y.lockTxHash,onClose:T},null,8,["modelValue","txHash"])],64)}}},Re=R(Pe,[["__scopeId","data-v-7c20603c"]]),tt={__name:"Index",props:{modelValue:{type:Boolean,default:!1},lockId:{type:String,default:""},isLockV2:{type:Boolean,default:!1},isLpToken:{type:Boolean,default:!1},unlockDate:Number,tokenList:Array,symbol:{type:String,default:""},address:{type:String,default:""},amountString:{type:String,default:""},chain:{type:String,default:""},decimals:{type:Number,default:18}},emits:["update:model-value","operateSuccess"],setup(g,{emit:u}){const e=g;function o(){u("update:model-value",!1)}function s(){u("operateSuccess")}return(a,p)=>{const c=$("el-dialog");return L(),x(c,{"model-value":e.modelValue,title:a.$t("editLock"),class:"dlg","destroy-on-close":"",onClose:o},{default:U(()=>[b(Re,{lockId:e.lockId,isLockV2:e.isLockV2,isLpToken:e.isLpToken,unlockDate:e.unlockDate,tokenList:e.tokenList,symbol:e.symbol,address:g.address,amountString:e.amountString,chain:e.chain,decimals:e.decimals,onClose:o,onOperateSuccess:s},null,8,["lockId","isLockV2","isLpToken","unlockDate","tokenList","symbol","address","amountString","chain","decimals"])]),_:1},8,["model-value","title"])}}};export{Ze as _,tt as a,et as b};
