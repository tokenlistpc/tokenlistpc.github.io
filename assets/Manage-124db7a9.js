import{J as ie,k as C,C as p,g as H,h as q,i as T,b as P,o as S,c as $,d as n,t as s,f as r,l as u,y as B,A,E as y,v as V,z as W,F as se,e as le,p as ue,K as Z,_ as oe,a as pe,u as re,G as ye,H as de,L as me,B as ce,q as be,m as te,x as fe,M as ne}from"./index-c5ffcea4.js";import{B as ve}from"./Back-0de6c2e7.js";import{C as ee,T as Te}from"./CopyText-350d9ffe.js";import{_ as K}from"./OperateSuccessDialog-b5ac12f7.js";import{f as U,a as we}from"./units-833e723c.js";import{R}from"./Rate-8cbc8c7e.js";import"./TokenIcon-6ec78b8f.js";/* empty css                                                          */import"./DoubleToken-551e89da.js";const he=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ge=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Me=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],_e=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],j=ie("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,whiteListCount:0,whiteList:[]}),actions:{init(F,i){switch(this.deployerId=Number(F),this.tokenAddress=i.toLowerCase(),this.deployerId){case 0:this.abi=he;break;case 1:this.abi=ge;break;case 2:this.abi=Me;break;case 3:this.abi=_e;break;default:this.abi=null}},async getFreeTaxTokenInfo(F){this.loading=!0;const i=await C.wallet.metamask.contract(F,this.abi);Promise.all([i.name(),i.canMint(),i.symbol(),i.decimals(),i.totalSupply(),i.owner()]).then(e=>{this.name=e[0],this.canMint=e[1],this.symbol=e[2],this.decimals=Number(e[3]),this.totalSupply=U(e[4].toString(),Number(this.decimals)),this.owner=e[5]}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getWhiteList(F){try{const i=await C.wallet.metamask.contract(F,this.abi);this.whiteListCount=await i.feeWhiteListCount();let e=[];this.whiteListCount>0&&(e=await i.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=e.map(h=>h.toLowerCase()),console.log(this.whiteListCount),console.log(this.whiteList)}catch(i){throw i}},async getTokenFee(F){const i=await C.wallet.metamask.contract(F,this.abi);let e=[];this.deployerId==1?e=[i._buyFundFee(),i._buyLPFee(),i._buyBurnFee(),i._sellFundFee(),i._sellLPFee(),i._sellBurnFee()]:(this.deployerId==2||this.deployerId==3)&&(e=[i._buyFundFee(),i._buyLPFee(),i._buyRewardFee(),i._sellFundFee(),i._sellLPFee(),i._sellRewardFee()]),Promise.all(e).then(h=>{console.log(h),this.deployerId==1?(this.buyFundFee=p(h[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=p(h[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=p(h[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=p(h[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=p(h[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=p(h[5]).div(1e4).multipliedBy(100).toString()):(this.deployerId==2||this.deployerId==3)&&(this.buyFundFee=p(h[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=p(h[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=p(h[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=p(h[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=p(h[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=p(h[5]).div(1e4).multipliedBy(100).toString())}).catch(h=>{console.log(h)})},async getFeeTokenInfo(F){this.loading=!0;const i=await C.wallet.metamask.contract(F,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.canMint(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax()]).then(async e=>{this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=U(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.canMint=e[5],this.enableManualStartTrade=e[6],this.tradeStart=e[7],this.enableWhiteList=e[8],this.enableChangeTax=e[9],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getDividendSelfTokenInfo(F){this.loading=!0;const i=await C.wallet.metamask.contract(F,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax()]).then(async e=>{this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=U(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.enableManualStartTrade=e[5],this.tradeStart=e[6],this.enableWhiteList=e[7],this.enableChangeTax=e[8],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})},async getAddPoolDividendTokenInfo(F){this.loading=!0;const i=await C.wallet.metamask.contract(F,this.abi);Promise.all([i.name(),i.symbol(),i.decimals(),i.totalSupply(),i.owner(),i.enableManualStartTrade(),i.tradeStart(),i.enableWhiteList(),i.enableChangeTax(),i.canMint()]).then(async e=>{console.log(e),this.name=e[0],this.symbol=e[1],this.decimals=Number(e[2]),this.totalSupply=U(e[3].toString(),Number(this.decimals)),this.owner=e[4],this.enableManualStartTrade=e[5],this.tradeStart=e[6],this.enableWhiteList=e[7],this.enableChangeTax=e[8],this.canMint=e[9],await this.getTokenFee(F),await this.getWhiteList(F)}).catch(e=>{console.log(e)}).finally(e=>{this.loading=!1})}}}),ke={class:"mint"},Fe={class:"dlg-item"},Le={class:"dlg-item-title"},Se={class:"dlg-item"},$e={class:"dlg-item-title"},xe={class:"dlg-item"},Ce={class:"dlg-item-title"},Ie={class:"dlg-bottom"},Be={__name:"Mint",emits:["operateSuccess"],setup(F,{emit:i}){const{t:e}=H(),h=q(),a=j(),t=T(""),c=T(h.walletAddress),g=T(""),L=T(!1),_=T(!1);function k(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(c.value)||y({message:e("addressWrong"),type:"warning"})}async function d(){if(!h.isConnecting){y.error(e("pleaseConnectWallet"));return}if(!t.value){y({message:e("amountEmpty"),type:"warning"});return}if(t.value.replace(".","").length>34){y({message:e("amountOver"),type:"warning"});return}let w=t.value.split(".");if(w[1]&&w[1].length>a.decimals){y({message:e("amountOver"),type:"warning"});return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(c.value)){y({message:e("addressWrong"),type:"warning"});return}L.value=!0;try{const M=await C.wallet.metamask.contract(a.tokenAddress,a.abi);let b=await M.mint(c.value,we(t.value,a.decimals));g.value=b.hash,_.value=!0,b.wait().then(async f=>{if(f.status===1){y({message:e("upChainSuccessfully"),type:"success"});let v=await M.totalSupply();a.totalSupply=U(v.toString(),a.decimals),L.value=!1,i("operateSuccess")}})}catch(M){L.value=!1;const b=C.wallet.metamask.parseError(M);y({message:e(b),type:"error"})}finally{}}return(w,M)=>{const b=P("el-input"),f=P("el-button");return S(),$("div",ke,[n("div",Fe,[n("div",Le,s(w.$t("currentTotal")),1),r(b,{class:"ipt-block",disabled:"",modelValue:u(a).totalSupply,"onUpdate:modelValue":M[0]||(M[0]=v=>u(a).totalSupply=v)},null,8,["modelValue"])]),n("div",Se,[n("div",$e,s(w.$t("mintTokenAmount")),1),r(b,{class:"ipt-block",type:"number",modelValue:t.value,"onUpdate:modelValue":M[1]||(M[1]=v=>t.value=v),placeholder:w.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",xe,[n("div",Ce,s(w.$t("receivingAddress")),1),r(b,{class:"ipt-block",modelValue:c.value,"onUpdate:modelValue":M[2]||(M[2]=v=>c.value=v),onBlur:k,placeholder:w.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",Ie,[r(f,{class:"btn-gradient btn-block",loading:L.value,onClick:d},{default:B(()=>[A(s(w.$t("submitAdd")),1)]),_:1},8,["loading"])]),r(K,{txHash:g.value,modelValue:_.value},null,8,["txHash","modelValue"])])}}},Ae={class:"edit-rate"},Ve={class:"dlg-item"},We={class:"dlg-item-title"},Pe={class:"dlg-item-value"},Oe={class:"rate-item"},Ne={class:"rate-item-title"},Re={class:"rate-item"},Ee={class:"rate-item-title"},De={key:0,class:"rate-item"},Ue={class:"rate-item-title"},He={key:1,class:"rate-item"},qe={class:"rate-item-title"},Ke={class:"dlg-item"},je={class:"dlg-item-title"},ze={class:"dlg-item-value"},Je={class:"rate-item"},Xe={class:"rate-item-title"},Ge={class:"rate-item"},Qe={class:"rate-item-title"},Ye={key:0,class:"rate-item"},Ze={class:"rate-item-title"},et={key:1,class:"rate-item"},tt={class:"rate-item-title"},nt={class:"dlg-bottom"},at={__name:"EditTax",emits:["operateSuccess"],setup(F,{emit:i}){const{t:e}=H(),h=q(),a=j(),t=T(!1),c=T(a.buyFundFee),g=T(a.buyLPFee),L=T(a.buyBurnFee),_=T(a.buyRewardFee),k=T(a.sellFundFee),d=T(a.sellLPFee),w=T(a.sellBurnFee),M=T(a.sellRewardFee),b=T(""),f=T(!1),v=V(()=>{if(a.deployerId==1)return p(c.value).plus(g.value).plus(L.value);if(a.deployerId==2||a.deployerId==3)return p(c.value).plus(g.value).plus(_.value)}),O=V(()=>{if(a.deployerId==1)return p(k.value).plus(d.value).plus(w.value);if(a.deployerId==2||a.deployerId==3)return p(k.value).plus(d.value).plus(M.value)}),D=V(()=>{if(a.deployerId==1)return Number(p(20).minus(g.value).minus(L.value));if(a.deployerId==2||a.deployerId==3)return Number(p(20).minus(g.value).minus(_.value))}),N=V(()=>{if(a.deployerId==1)return Number(p(20).minus(c.value).minus(L.value));if(a.deployerId==2||a.deployerId==3)return Number(p(20).minus(c.value).minus(_.value))}),z=V(()=>{if(a.deployerId==1)return Number(p(20).minus(c.value).minus(g.value))}),J=V(()=>{if(a.deployerId==2||a.deployerId==3)return Number(p(20).minus(c.value).minus(g.value).toNumber())}),X=V(()=>{if(a.deployerId==1)return Number(p(20).minus(d.value).minus(w.value));if(a.deployerId==2||a.deployerId==3)return Number(p(20).minus(d.value).minus(M.value))}),G=V(()=>{if(a.deployerId==1)return Number(p(20).minus(k.value).minus(w.value));if(a.deployerId==2||a.deployerId==3)return Number(p(20).minus(k.value).minus(M.value))}),Q=V(()=>{if(a.deployerId==1)return Number(p(20).minus(k.value).minus(d.value))}),Y=V(()=>{if(a.deployerId==2||a.deployerId==3)return p(20).minus(k.value).minus(d.value).toNumber()});async function l(){if(!h.isConnecting){y.error(e("pleaseConnectWallet"));return}if(a.deployerId==1){if(p(c.value).plus(L.value).plus(g.value).plus(k.value).plus(w.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit1")});return}}else if(a.deployerId==2){if(p(c.value).plus(g.value).plus(k.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit2")});return}}else if(a.deployerId==3&&p(c.value).plus(_.value).plus(g.value).plus(k.value).plus(M.value).plus(d.value).lte(0)){y({type:"error",message:e("taxlimit1")});return}t.value=!0;try{const o=await C.wallet.metamask.contract(a.tokenAddress,a.abi);let m;a.deployerId==1?m=[p(g.value).div(100).multipliedBy(1e4).toNumber(),p(L.value).div(100).multipliedBy(1e4).toNumber(),p(c.value).div(100).multipliedBy(1e4).toNumber(),p(d.value).div(100).multipliedBy(1e4).toNumber(),p(w.value).div(100).multipliedBy(1e4).toNumber(),p(k.value).div(100).multipliedBy(1e4).toNumber()]:a.deployerId==2?m=[p(g.value).div(100).multipliedBy(1e4).toNumber(),p(_.value).div(100).multipliedBy(1e4).toNumber(),p(c.value).div(100).multipliedBy(1e4).toNumber(),p(d.value).div(100).multipliedBy(1e4).toNumber(),p(M.value).div(100).multipliedBy(1e4).toNumber(),p(k.value).div(100).multipliedBy(1e4).toNumber()]:a.deployerId==3&&(m=[p(c.value).div(100).multipliedBy(1e4).toNumber(),p(_.value).div(100).multipliedBy(1e4).toNumber(),p(g.value).div(100).multipliedBy(1e4).toNumber(),p(k.value).div(100).multipliedBy(1e4).toNumber(),p(M.value).div(100).multipliedBy(1e4).toNumber(),p(d.value).div(100).multipliedBy(1e4).toNumber()]);const E=await o.completeCustoms(m);y({type:"success",message:e("submitSuccess")}),b.value=E.hash,f.value=!0,await E.wait(),a.getTokenFee(a.tokenAddress),y({type:"success",message:e("editTaxSuccess")}),i("operateSuccess")}catch(o){const m=C.wallet.metamask.parseError(o);y({message:e(m),type:"error"})}finally{t.value=!1}}return(o,m)=>{const E=P("el-button");return S(),$("div",Ae,[n("div",Ve,[n("div",We,s(o.$t("editBuyTax",{buyFee:v.value})),1),n("div",Pe,[n("div",Oe,[n("div",Ne,s(o.$t("marketingTax")),1),r(R,{class:"rate-item-value",modelValue:c.value,"onUpdate:modelValue":m[0]||(m[0]=x=>c.value=x),max:D.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Re,[n("div",Ee,s(o.$t("liquidityTax")),1),r(R,{class:"rate-item-value",modelValue:g.value,"onUpdate:modelValue":m[1]||(m[1]=x=>g.value=x),max:N.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),u(a).deployerId==1?(S(),$("div",De,[n("div",Ue,s(o.$t("burnTax")),1),r(R,{class:"rate-item-value",modelValue:L.value,"onUpdate:modelValue":m[2]||(m[2]=x=>L.value=x),max:z.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),u(a).deployerId==2||u(a).deployerId==3?(S(),$("div",He,[n("div",qe,s(o.$t("rewardTax")),1),r(R,{class:"rate-item-value",modelValue:_.value,"onUpdate:modelValue":m[3]||(m[3]=x=>_.value=x),max:J.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),n("div",Ke,[n("div",je,s(o.$t("editSellTax",{sellFee:O.value})),1),n("div",ze,[n("div",Je,[n("div",Xe,s(o.$t("marketingTax")),1),r(R,{class:"rate-item-value",modelValue:k.value,"onUpdate:modelValue":m[4]||(m[4]=x=>k.value=x),max:X.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Ge,[n("div",Qe,s(o.$t("liquidityTax")),1),r(R,{class:"rate-item-value",modelValue:d.value,"onUpdate:modelValue":m[5]||(m[5]=x=>d.value=x),max:G.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),u(a).deployerId==1?(S(),$("div",Ye,[n("div",Ze,s(o.$t("burnTax")),1),r(R,{class:"rate-item-value",modelValue:w.value,"onUpdate:modelValue":m[6]||(m[6]=x=>w.value=x),max:Q.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),u(a).deployerId==2||u(a).deployerId==3?(S(),$("div",et,[n("div",tt,s(o.$t("rewardTax")),1),r(R,{class:"rate-item-value",modelValue:M.value,"onUpdate:modelValue":m[7]||(m[7]=x=>M.value=x),max:Y.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),n("div",nt,[r(E,{class:"btn-gradient btn-block",loading:t.value,onClick:l},{default:B(()=>[A(s(o.$t("submit")),1)]),_:1},8,["loading"])]),r(K,{txHash:b.value,modelValue:f.value},null,8,["txHash","modelValue"])])}}},it={class:"mint"},st={class:"dlg-item"},lt={class:"dlg-bottom"},ut={class:"white-list-table"},ot={class:"white-list-table-title"},pt={class:"white-list-table-item"},rt={__name:"WhiteList",emits:["operateSuccess"],setup(F,{emit:i}){const{t:e}=H(),h=q(),a=j(),t=T(""),c=T(""),g=T(""),L=T(!1);function _(b){return b&&b.trim()}function k(){if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(t.value)){y({type:"warnning",message:e("trueFormat")});return}if(a.whiteList.findIndex(f=>f==t.value)!=-1){y({type:"warning",message:e("addressAdded")});return}Z.confirm(e("addWhiteListWarn",{userAddress:t.value,tokenName:a.symbol}),"",{cancelButtonText:e("thinkAgain"),confirmButtonText:e("confirm"),autofocus:!1,beforeClose:async(f,v,O)=>{v.confirmButtonLoading=!0,f=="confirm"&&await d(),v.confirmButtonLoading=!1,O()},callback:f=>{}})}async function d(){if(!h.isConnecting){y.error(e("pleaseConnectWallet"));return}let b=t.value;try{const f=await C.wallet.metamask.contract(a.tokenAddress,a.abi);console.log(f),await(await f.setFeeWhiteList([t.value],!0)).wait(),await a.getWhiteList(a.tokenAddress),y({type:"success",message:e("addWhiteListSuccess",{userAddress:b})})}catch(f){const v=C.wallet.metamask.parseError(f);y({message:e(v),type:"error"})}finally{}}function w(b){c.value=b,Z.confirm(e("removeWhiteListWarn",{userAddress:c.value}),"",{cancelButtonText:e("thinkAgain"),confirmButtonText:e("confirm"),autofocus:!1,beforeClose:async(f,v,O)=>{v.confirmButtonLoading=!0,f=="confirm"&&await M(),v.confirmButtonLoading=!1,O()},callback:f=>{}})}async function M(){if(!h.isConnecting){y.error(e("pleaseConnectWallet"));return}let b=c.value;try{const f=await C.wallet.metamask.contract(a.tokenAddress,a.abi);console.log(f);const v=await f.setFeeWhiteList([c.value],!1);console.log(v),await v.wait(),await a.getWhiteList(a.tokenAddress),c.value="",y({type:"success",message:e("removeWhiteListSuccess",{userAddress:b})})}catch(f){const v=C.wallet.metamask.parseError(f);y({message:e(v),type:"error"})}finally{}}return(b,f)=>{const v=P("el-input"),O=P("el-button"),D=P("el-link");return S(),$("div",it,[n("div",st,[r(v,{class:"ipt-block",clearable:"",formatter:_,modelValue:t.value,"onUpdate:modelValue":f[0]||(f[0]=N=>t.value=N),placeholder:u(e)("inputAddress")},null,8,["modelValue","placeholder"])]),n("div",lt,[r(O,{class:"btn-gradient btn-block",onClick:k},{default:B(()=>[A(s(b.$t("add")),1)]),_:1}),n("div",ut,[n("div",ot,s(b.$t("added")),1),n("ul",null,[(S(!0),$(se,null,le(u(a).whiteList,N=>(S(),$("li",pt,[r(ee,{text:N,smallText:u(ue)(N)},null,8,["text","smallText"]),r(D,{type:"primary",underline:!1,onClick:z=>w(N)},{default:B(()=>[A(s(b.$t("remove")),1)]),_:2},1032,["onClick"])]))),256))])])]),r(K,{txHash:g.value,modelValue:L.value},null,8,["txHash","modelValue"])])}}},yt={class:"transfer"},dt={class:"dlg-item"},mt={class:"dlg-item-title"},ct={class:"dlg-item"},bt={class:"dlg-item-title"},ft={class:"dlg-bottom"},vt={__name:"TransferOwnership",emits:["operateSuccess"],setup(F,{emit:i}){const{t:e}=H(),h=q(),a=j(),t=T(""),c=T(!1),g=T(!1),L=T(a.owner),_=T("");async function k(){if(!h.isConnecting){y.error(e("pleaseConnectWallet"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(_.value)){y({message:e("trueFormat"),type:"warning"});return}if(_.value==L.value){y({message:e("transferConsistent"),type:"warning"});return}g.value=!0;try{const d=await C.wallet.metamask.contract(a.tokenAddress,a.abi),w=await d.transferOwnership(_.value);y({message:e("submitSuccess"),type:"success"}),t.value=w.hash,c.value=!0,await w.wait(),a.owner=await d.owner(),_.value="",i("operateSuccess"),y({message:e("transferSuccess"),type:"success"})}catch(d){console.log(d),d.info&&d.info.error&&d.info.error.code===4001?y.error(e("userCancelOperate")):d.error&&d.error.message&&d.error.message=="Canceled"?y.error(e("userCancelOperate")):y.error(e("transferFail"))}finally{g.value=!1}}return(d,w)=>{const M=P("el-input"),b=P("el-button");return S(),$("div",yt,[n("div",dt,[n("div",mt,s(d.$t("ownership")),1),r(M,{class:"ipt-block",disabled:"",modelValue:L.value,"onUpdate:modelValue":w[0]||(w[0]=f=>L.value=f)},null,8,["modelValue"])]),n("div",ct,[n("div",bt,s(d.$t("transferTo")),1),r(M,{class:"ipt-block",modelValue:_.value,"onUpdate:modelValue":w[1]||(w[1]=f=>_.value=f),placeholder:d.$t("input")},null,8,["modelValue","placeholder"])]),n("div",ft,[r(b,{class:"btn-gradient btn-block",loading:g.value,onClick:k},{default:B(()=>[A(s(d.$t("submit")),1)]),_:1},8,["loading"])]),r(K,{txHash:t.value,modelValue:c.value},null,8,["txHash","modelValue"])])}}};const Tt={class:"token-detail"},wt={class:"content"},ht={class:"top"},gt={class:"small-title"},Mt={class:"left"},_t={class:"right"},kt={class:"left"},Ft={class:"right"},Lt={key:0},St={key:1},$t={key:2},xt={key:3},Ct={class:"left"},It={class:"right"},Bt={class:"left"},At={class:"right"},Vt={class:"left"},Wt={class:"right"},Pt={class:"left"},Ot={class:"right"},Nt={class:"left"},Rt={class:"right"},Et={key:0},Dt={class:"left"},Ut={class:"right"},Ht={class:"left"},qt={class:"right"},Kt={key:0},jt={class:"small-title"},zt={class:"model-manage"},Jt={class:"left"},Xt={class:"right"},Gt={key:1},Qt={class:"small-title"},Yt={key:0,class:"operate-item"},Zt={class:"left"},en={class:"right"},tn={key:1,class:"operate-item"},nn={class:"left"},an={class:"right"},sn={key:2,class:"operate-item"},ln={class:"left"},un={class:"right"},on={class:"small-title"},pn={class:"operate-item"},rn={class:"left"},yn={class:"right"},dn={class:"operate-item"},mn={class:"left"},cn={class:"right"},bn={class:"operate"},fn={__name:"Manage",setup(F){const{t:i}=H(),e=pe(),h=re(),a=q(),t=j(),c=T(!1),g=T(!1),L=T(!1),_=T(!1),k=T(!1),d=T(!1),w=T("");let M=e.params.deployerId,b=e.params.chain,f=e.params.tokenAddress;const v=V(()=>a.walletAddress.toLowerCase()===t.owner.toLowerCase());(M!=t.deployerId||f!=t.deployerId)&&(t.$reset(),t.init(e.params.deployerId,e.params.tokenAddress),N());const O=V(()=>{if(t.deployerId==1)return p(t.buyFundFee).plus(t.buyLPFee).plus(t.buyBurnFee);if(t.deployerId==2||t.deployerId==3)return p(t.buyFundFee).plus(t.buyLPFee).plus(t.buyRewardFee)}),D=V(()=>{if(t.deployerId==1)return p(t.sellFundFee).plus(t.sellLPFee).plus(t.sellBurnFee);if(t.deployerId==2||t.deployerId==3)return p(t.sellFundFee).plus(t.sellLPFee).plus(t.sellRewardFee)});async function N(){t.deployerId==0?await t.getFreeTaxTokenInfo(t.tokenAddress):t.deployerId==1?await t.getFeeTokenInfo(t.tokenAddress):t.deployerId==2?await t.getDividendSelfTokenInfo(t.tokenAddress):t.deployerId==3&&await t.getAddPoolDividendTokenInfo(t.tokenAddress)}async function z(){if(!a.isConnecting){y.error(i("pleaseConnectWallet"));return}if(!g.value){if(!v.value){y({type:"error",message:"您不是合约持有者"});return}if(!t.tradeStart){g.value=!0;try{await(await(await C.wallet.metamask.contract(t.tokenAddress,t.abi)).startTrade()).wait(),y({type:"success",message:i("tradeOpening")}),t.tradeStart=!0}catch(l){console.log(l.info);const o=C.wallet.metamask.parseError(l);y({message:i(o),type:"error"})}finally{g.value=!1}}}}function J(){Z.confirm(i("giveUpConfirmInfo"),"",{confirmButtonText:i("confirm"),cancelButtonText:i("thinkAgain"),type:"warning",autofocus:!1,beforeClose:async(l,o,m)=>{o.confirmButtonLoading=!0,l=="confirm"&&await X(),o.confirmButtonLoading=!1,m()}}).then(()=>{}).catch(()=>{})}async function X(){if(!a.isConnecting){y.error(i("pleaseConnectWallet"));return}try{const l=await C.wallet.metamask.contract(t.tokenAddress,t.abi);let o=await l.renounceOwnership();w.value=o.hash,d.value=!0,o.wait().then(async m=>{m.status===1&&(y({success:i("upChainSuccessfully"),type:"success"}),t.owner=await l.owner())})}catch(l){const o=C.wallet.metamask.parseError(l);y({message:i(o),type:"error"})}finally{}}function G(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function Q(){h.push("/lock/create/token")}async function Y(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t.tokenAddress,symbol:t.symbol,decimals:t.decimals,image:""}}})}catch(l){console.log(l),l.info&&l.info.error&&l.info.error.code===4001?y.error(i("userCancelOperate")):l.error&&l.error.message&&l.error.message=="Canceled"?y.error(i("userCancelOperate")):y.error(i("unkonwError"))}}return(l,o)=>{const m=P("el-button"),E=P("el-switch"),x=P("el-dialog"),ae=ye("loading");return S(),$("div",Tt,[r(ve),de((S(),$("div",wt,[n("ul",null,[n("li",ht,[r(Te,{class:"token-name",symbol:u(t).symbol,name:u(t).name,bigIcon:u(be)(u(b).toLowerCase(),u(t).tokenAddress.toLowerCase()),smallIcon:u(te)(u(b).toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),n("div",gt,s(l.$t("tokenInformation")),1),n("ul",null,[n("li",null,[n("div",Mt,s(l.$t("chain")),1),n("div",_t,[r(me,{icon:u(te)(u(b).toLowerCase()),text:u(fe).chainList.find(I=>I.chain==u(b).toLowerCase()).chainShow},null,8,["icon","text"])])]),n("li",null,[n("div",kt,s(l.$t("template")),1),n("div",Ft,[u(t).deployerId==0?(S(),$("span",Lt,s(l.$t("freeTax")),1)):u(t).deployerId==1?(S(),$("span",St,s(l.$t("feeToken")),1)):u(t).deployerId==2?(S(),$("span",$t,s(l.$t("selfDividendToken")),1)):u(t).deployerId==3?(S(),$("span",xt,s(l.$t("addPoolDividend")),1)):W("",!0)])]),n("li",null,[n("div",Ct,s(l.$t("tokenAddress")),1),n("div",It,[r(ee,{text:u(t).tokenAddress,smallText:u(t).tokenAddress},null,8,["text","smallText"])])]),n("li",null,[n("div",Bt,s(l.$t("tokenName")),1),n("div",At,s(u(t).name),1)]),n("li",null,[n("div",Vt,s(l.$t("tokenSymbol")),1),n("div",Wt,s(u(t).symbol),1)]),n("li",null,[n("div",Pt,s(l.$t("tokenPrecision")),1),n("div",Ot,s(u(t).decimals),1)]),n("li",null,[n("div",Nt,s(l.$t("tokenAmount")),1),n("div",Rt,s(u(ne)(u(t).totalSupply)),1)]),u(t).deployerId!=2?(S(),$("li",Et,[n("div",Dt,s(l.$t("isMintToken")),1),n("div",Ut,s(u(t).canMint?l.$t("yes"):l.$t("no")),1)])):W("",!0),n("li",null,[n("div",Ht,s(l.$t("ownerAddr")),1),n("div",qt,[r(ee,{text:u(t).owner,smallText:u(t).owner},null,8,["text","smallText"])])])]),u(t).canMint&&v.value?(S(),$("div",Kt,[n("div",jt,s(l.$t("economicManagement")),1),n("div",zt,[n("div",Jt,s(l.$t("currentIssuedAmount"))+"：",1),n("div",Xt,[A(s(u(ne)(u(t).totalSupply)),1),r(m,{class:"mint-btn",type:"primary",onClick:o[0]||(o[0]=I=>c.value=!0)},{default:B(()=>[A(s(l.$t("mint")),1)]),_:1})])])])):W("",!0),u(t).deployerId!=0&&(u(t).enableManualStartTrade||u(t).enableChangeTax||u(t).enableWhiteList)?(S(),$("div",Gt,[n("div",Qt,s(l.$t("tradeManage")),1),n("ul",null,[u(t).deployerId!=0&&u(t).enableManualStartTrade?(S(),$("li",Yt,[n("div",Zt,s(l.$t("openTrade")),1),n("div",en,[r(E,{"model-value":u(t).tradeStart,loading:g.value,onClick:o[1]||(o[1]=I=>z())},null,8,["model-value","loading"])])])):W("",!0),u(t).deployerId!=0&&u(t).enableChangeTax?(S(),$("li",tn,[n("div",nn,s(l.$t("taxEdit")),1),n("div",an,[n("span",null,s(l.$t("buy"))+s(O.value)+"%"+s(l.$t("sell"))+s(D.value)+"%",1),r(m,{class:"btn",key:"primary",type:"primary",disabled:!v.value,link:"",onClick:o[2]||(o[2]=I=>_.value=!0)},{default:B(()=>[A(s(l.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),u(t).deployerId!=0&&u(t).enableWhiteList?(S(),$("li",sn,[n("div",ln,s(l.$t("whiteList2")),1),n("div",un,[n("span",null,s(u(t).whiteList.length),1),r(m,{class:"btn",key:"primary",disabled:!v.value,type:"primary",link:"",onClick:o[3]||(o[3]=I=>L.value=!0)},{default:B(()=>[A(s(l.$t("add")),1)]),_:1},8,["disabled"])])])):W("",!0)])])):W("",!0),n("div",on,s(l.$t("authorityManagement")),1),n("ul",null,[n("li",pn,[n("div",rn,s(l.$t("contractOwnership")),1),n("div",yn,[r(m,{class:"btn",key:"primary",type:"primary",link:"",disabled:!v.value,onClick:J},{default:B(()=>[A(s(l.$t("renounce")),1)]),_:1},8,["disabled"])])]),n("li",dn,[n("div",mn,s(l.$t("transferOwnership")),1),n("div",cn,[r(m,{class:"btn",key:"primary",type:"primary",link:"",disabled:!v.value,onClick:o[4]||(o[4]=I=>k.value=!0)},{default:B(()=>[A(s(l.$t("transfer")),1)]),_:1},8,["disabled"])])])]),n("div",bn,[r(m,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:G},{default:B(()=>[A(s(l.$t("LPAddOrManage")),1)]),_:1}),r(m,{class:"btn",text:"",bg:"",type:"primary",onClick:Q},{default:B(()=>[A(s(l.$t("lockToken")),1)]),_:1}),u(a).walletType=="metamask"?(S(),ce(m,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:Y},{default:B(()=>[A(s(l.$t("importToWallet")),1)]),_:1})):W("",!0)])])),[[ae,u(t).loading]]),r(x,{modelValue:c.value,"onUpdate:modelValue":o[6]||(o[6]=I=>c.value=I),title:l.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:B(()=>[r(Be,{onOperateSuccess:o[5]||(o[5]=I=>c.value=!1)})]),_:1},8,["modelValue","title"]),r(x,{modelValue:_.value,"onUpdate:modelValue":o[8]||(o[8]=I=>_.value=I),title:l.$t("taxEdit"),class:"dlg dlg-rate"},{default:B(()=>[r(at,{onOperateSuccess:o[7]||(o[7]=I=>_.value=!1)})]),_:1},8,["modelValue","title"]),r(x,{modelValue:L.value,"onUpdate:modelValue":o[10]||(o[10]=I=>L.value=I),title:l.$t("whiteListManage"),class:"dlg dlg-white-list"},{default:B(()=>[r(rt,{onOperateSuccess:o[9]||(o[9]=I=>L.value=!1)})]),_:1},8,["modelValue","title"]),r(x,{modelValue:k.value,"onUpdate:modelValue":o[12]||(o[12]=I=>k.value=I),title:l.$t("transferOwnership"),class:"dlg dlg-white-list"},{default:B(()=>[r(vt,{onOperateSuccess:o[11]||(o[11]=I=>k.value=!1)})]),_:1},8,["modelValue","title"]),r(K,{txHash:w.value,modelValue:d.value},null,8,["txHash","modelValue"])])}}},Ln=oe(fn,[["__scopeId","data-v-2f2ee30c"]]);export{Ln as default};
