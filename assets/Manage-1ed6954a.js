import{K as ue,k as I,C as p,h as J,i as G,r as b,d as W,o as w,c as g,e as n,t as l,g as r,l as o,y as $,A as P,E as d,v as N,z as V,_ as se,F as te,f as ne,B as Z,p as oe,a as pe,u as re,H as de,I as ye,L as me,M as ce,q as be,m as ae,x as fe,N as ie}from"./index-645b9a47.js";import{B as ve}from"./Back-24fcb704.js";import{C as ee,T as Te}from"./CopyText-83980b6c.js";import{_ as Q}from"./OperateSuccessDialog-5feac55d.js";import{f as X,a as we}from"./units-094ed48a.js";import{R as U}from"./Rate-a6e70a96.js";import"./TokenIcon-9f31aa1c.js";/* empty css                                                          */import"./DoubleToken-10278670.js";const he=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],_e=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Me=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ge=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],Y=ue("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,enableKillBlock:!1,killBlock:0,whiteListCount:0,whiteList:[]}),actions:{init(S,a){switch(this.deployerId=Number(S),this.tokenAddress=a.toLowerCase(),this.deployerId){case 0:this.abi=he;break;case 1:this.abi=_e;break;case 2:this.abi=Me;break;case 3:this.abi=ge;break;default:this.abi=null}},async getFreeTaxTokenInfo(S){this.loading=!0;const a=await I.wallet.metamask.contract(S,this.abi);Promise.all([a.name(),a.canMint(),a.symbol(),a.decimals(),a.totalSupply(),a.owner()]).then(t=>{this.name=t[0],this.canMint=t[1],this.symbol=t[2],this.decimals=Number(t[3]),this.totalSupply=X(t[4].toString(),Number(this.decimals)),this.owner=t[5]}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getWhiteList(S){try{const a=await I.wallet.metamask.contract(S,this.abi);this.whiteListCount=await a.feeWhiteListCount();let t=[];this.whiteListCount>0&&(t=await a.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=t.map(h=>h.toLowerCase()),console.log(this.whiteListCount),console.log(this.whiteList)}catch(a){throw a}},async getTokenFee(S){const a=await I.wallet.metamask.contract(S,this.abi);let t=[];this.deployerId==1?t=[a._buyFundFee(),a._buyLPFee(),a._buyBurnFee(),a._sellFundFee(),a._sellLPFee(),a._sellBurnFee()]:(this.deployerId==2||this.deployerId==3)&&(t=[a._buyFundFee(),a._buyLPFee(),a._buyRewardFee(),a._sellFundFee(),a._sellLPFee(),a._sellRewardFee()]),Promise.all(t).then(h=>{console.log(h),this.deployerId==1?(this.buyFundFee=p(h[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=p(h[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=p(h[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=p(h[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=p(h[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=p(h[5]).div(1e4).multipliedBy(100).toString()):(this.deployerId==2||this.deployerId==3)&&(this.buyFundFee=p(h[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=p(h[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=p(h[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=p(h[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=p(h[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=p(h[5]).div(1e4).multipliedBy(100).toString())}).catch(h=>{console.log(h)})},async getFeeTokenInfo(S){this.loading=!0;const a=await I.wallet.metamask.contract(S,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.canMint(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax(),a.enableKillBlock(),a.kb()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=X(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.canMint=t[5],this.enableManualStartTrade=t[6],this.tradeStart=t[7],this.enableWhiteList=t[8],this.enableChangeTax=t[9],this.enableKillBlock=t[10],this.killBlock=t[11],await this.getTokenFee(S),await this.getWhiteList(S)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getDividendSelfTokenInfo(S){this.loading=!0;const a=await I.wallet.metamask.contract(S,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax(),a.enableKillBlock(),a.kb()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=X(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.enableKillBlock=t[9],this.killBlock=t[10],await this.getTokenFee(S),await this.getWhiteList(S)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getAddPoolDividendTokenInfo(S){this.loading=!0;const a=await I.wallet.metamask.contract(S,this.abi);Promise.all([a.name(),a.symbol(),a.decimals(),a.totalSupply(),a.owner(),a.enableManualStartTrade(),a.tradeStart(),a.enableWhiteList(),a.enableChangeTax(),a.canMint(),a.enableKillBlock(),a.kb()]).then(async t=>{console.log(t),this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=X(t[3].toString(),Number(this.decimals)),this.owner=t[4],this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.canMint=t[9],this.enableKillBlock=t[10],this.killBlock=t[11],await this.getTokenFee(S),await this.getWhiteList(S)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})}}}),ke={class:"mint"},Fe={class:"dlg-item"},Le={class:"dlg-item-title"},Se={class:"dlg-item"},$e={class:"dlg-item-title"},Ce={class:"dlg-item"},Ae={class:"dlg-item-title"},Ie={class:"dlg-bottom"},xe={__name:"Mint",emits:["operateSuccess"],setup(S,{emit:a}){const{t}=J(),h=G(),i=Y(),e=b(""),v=b(h.walletAddress),c=b(""),k=b(!1),F=b(!1);function L(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(v.value)||d.error(t("addressWrong"))}async function m(){if(!h.isConnecting){d.error(t("pleaseConnectWallet"));return}if(!e.value){d.error(t("amountEmpty"));return}if(e.value.replace(".","").length>34){d.error(t("amountOver"));return}let T=e.value.split(".");if(T[1]&&T[1].length>i.decimals){d.error(t("amountOver"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(v.value)){d.error(t("addressWrong"));return}k.value=!0;try{const M=await I.wallet.metamask.contract(i.tokenAddress,i.abi);let C=await M.mint(v.value,we(e.value,i.decimals));c.value=C.hash,F.value=!0,C.wait().then(async O=>{if(O.status===1){d.success(t("upChainSuccessfully"));let x=await M.totalSupply();i.totalSupply=X(x.toString(),i.decimals),k.value=!1,a("operateSuccess")}})}catch(M){k.value=!1;const C=I.wallet.metamask.parseError(M);d.error(t(C))}finally{}}return(T,M)=>{const C=W("el-input"),O=W("el-button");return w(),g("div",ke,[n("div",Fe,[n("div",Le,l(T.$t("currentTotal")),1),r(C,{class:"ipt-block",disabled:"",modelValue:o(i).totalSupply,"onUpdate:modelValue":M[0]||(M[0]=x=>o(i).totalSupply=x)},null,8,["modelValue"])]),n("div",Se,[n("div",$e,l(T.$t("mintTokenAmount")),1),r(C,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":M[1]||(M[1]=x=>e.value=x),placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",Ce,[n("div",Ae,l(T.$t("receivingAddress")),1),r(C,{class:"ipt-block",modelValue:v.value,"onUpdate:modelValue":M[2]||(M[2]=x=>v.value=x),onBlur:L,placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),n("div",Ie,[r(O,{class:"btn-gradient btn-block",loading:k.value,onClick:m},{default:$(()=>[P(l(T.$t("submitAdd")),1)]),_:1},8,["loading"])]),r(Q,{txHash:c.value,modelValue:F.value},null,8,["txHash","modelValue"])])}}},Be={class:"edit-rate"},Ve={class:"dlg-item"},Pe={class:"dlg-item-title"},We={class:"dlg-item-value"},Oe={class:"rate-item"},Ne={class:"rate-item-title"},Ee={class:"rate-item"},Re={class:"rate-item-title"},Ue={key:0,class:"rate-item"},De={class:"rate-item-title"},He={key:1,class:"rate-item"},Ke={class:"rate-item-title"},qe={class:"dlg-item"},ze={class:"dlg-item-title"},je={class:"dlg-item-value"},Xe={class:"rate-item"},Je={class:"rate-item-title"},Ge={class:"rate-item"},Qe={class:"rate-item-title"},Ye={key:0,class:"rate-item"},Ze={class:"rate-item-title"},et={key:1,class:"rate-item"},tt={class:"rate-item-title"},nt={class:"dlg-bottom"},at={__name:"EditTax",emits:["operateSuccess"],setup(S,{emit:a}){const{t}=J(),h=G(),i=Y(),e=b(!1),v=b(i.buyFundFee),c=b(i.buyLPFee),k=b(i.buyBurnFee),F=b(i.buyRewardFee),L=b(i.sellFundFee),m=b(i.sellLPFee),T=b(i.sellBurnFee),M=b(i.sellRewardFee),C=b(""),O=b(!1),x=N(()=>{if(i.deployerId==1)return p(v.value).plus(c.value).plus(k.value);if(i.deployerId==2||i.deployerId==3)return p(v.value).plus(c.value).plus(F.value)}),f=N(()=>{if(i.deployerId==1)return p(L.value).plus(m.value).plus(T.value);if(i.deployerId==2||i.deployerId==3)return p(L.value).plus(m.value).plus(M.value)}),_=N(()=>{if(i.deployerId==1)return Number(p(20).minus(c.value).minus(k.value));if(i.deployerId==2||i.deployerId==3)return Number(p(20).minus(c.value).minus(F.value))}),R=N(()=>{if(i.deployerId==1)return Number(p(20).minus(v.value).minus(k.value));if(i.deployerId==2||i.deployerId==3)return Number(p(20).minus(v.value).minus(F.value))}),E=N(()=>{if(i.deployerId==1)return Number(p(20).minus(v.value).minus(c.value))}),K=N(()=>{if(i.deployerId==2||i.deployerId==3)return Number(p(20).minus(v.value).minus(c.value).toNumber())}),q=N(()=>{if(i.deployerId==1)return Number(p(20).minus(m.value).minus(T.value));if(i.deployerId==2||i.deployerId==3)return Number(p(20).minus(m.value).minus(M.value))}),D=N(()=>{if(i.deployerId==1)return Number(p(20).minus(L.value).minus(T.value));if(i.deployerId==2||i.deployerId==3)return Number(p(20).minus(L.value).minus(M.value))}),z=N(()=>{if(i.deployerId==1)return Number(p(20).minus(L.value).minus(m.value))}),j=N(()=>{if(i.deployerId==2||i.deployerId==3)return p(20).minus(L.value).minus(m.value).toNumber()});async function s(){if(!h.isConnecting){d.error(t("pleaseConnectWallet"));return}if(i.deployerId==1){if(p(v.value).plus(k.value).plus(c.value).plus(L.value).plus(T.value).plus(m.value).lte(0)){d.error(t("taxlimit1"));return}}else if(i.deployerId==2){if(p(v.value).plus(c.value).plus(L.value).plus(m.value).lte(0)){d.error(t("taxlimit2"));return}}else if(i.deployerId==3&&p(v.value).plus(F.value).plus(c.value).plus(L.value).plus(M.value).plus(m.value).lte(0)){d.error(t("taxlimit1"));return}e.value=!0;try{const u=await I.wallet.metamask.contract(i.tokenAddress,i.abi);let y;i.deployerId==1?y=[p(c.value).div(100).multipliedBy(1e4).toNumber(),p(k.value).div(100).multipliedBy(1e4).toNumber(),p(v.value).div(100).multipliedBy(1e4).toNumber(),p(m.value).div(100).multipliedBy(1e4).toNumber(),p(T.value).div(100).multipliedBy(1e4).toNumber(),p(L.value).div(100).multipliedBy(1e4).toNumber()]:i.deployerId==2?y=[p(c.value).div(100).multipliedBy(1e4).toNumber(),p(F.value).div(100).multipliedBy(1e4).toNumber(),p(v.value).div(100).multipliedBy(1e4).toNumber(),p(m.value).div(100).multipliedBy(1e4).toNumber(),p(M.value).div(100).multipliedBy(1e4).toNumber(),p(L.value).div(100).multipliedBy(1e4).toNumber()]:i.deployerId==3&&(y=[p(v.value).div(100).multipliedBy(1e4).toNumber(),p(F.value).div(100).multipliedBy(1e4).toNumber(),p(c.value).div(100).multipliedBy(1e4).toNumber(),p(L.value).div(100).multipliedBy(1e4).toNumber(),p(M.value).div(100).multipliedBy(1e4).toNumber(),p(m.value).div(100).multipliedBy(1e4).toNumber()]);const H=await u.completeCustoms(y);d.success(t("submitSuccess")),C.value=H.hash,O.value=!0,await H.wait(),i.getTokenFee(i.tokenAddress),d.success(t("editTaxSuccess")),a("operateSuccess")}catch(u){const y=I.wallet.metamask.parseError(u);d.error(t(y))}finally{e.value=!1}}return(u,y)=>{const H=W("el-button");return w(),g("div",Be,[n("div",Ve,[n("div",Pe,l(u.$t("editBuyTax",{buyFee:x.value})),1),n("div",We,[n("div",Oe,[n("div",Ne,l(u.$t("marketingTax")),1),r(U,{class:"rate-item-value",modelValue:v.value,"onUpdate:modelValue":y[0]||(y[0]=A=>v.value=A),max:_.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Ee,[n("div",Re,l(u.$t("liquidityTax")),1),r(U,{class:"rate-item-value",modelValue:c.value,"onUpdate:modelValue":y[1]||(y[1]=A=>c.value=A),max:R.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),o(i).deployerId==1?(w(),g("div",Ue,[n("div",De,l(u.$t("burnTax")),1),r(U,{class:"rate-item-value",modelValue:k.value,"onUpdate:modelValue":y[2]||(y[2]=A=>k.value=A),max:E.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):V("",!0),o(i).deployerId==2||o(i).deployerId==3?(w(),g("div",He,[n("div",Ke,l(u.$t("rewardTax")),1),r(U,{class:"rate-item-value",modelValue:F.value,"onUpdate:modelValue":y[3]||(y[3]=A=>F.value=A),max:K.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):V("",!0)])]),n("div",qe,[n("div",ze,l(u.$t("editSellTax",{sellFee:f.value})),1),n("div",je,[n("div",Xe,[n("div",Je,l(u.$t("marketingTax")),1),r(U,{class:"rate-item-value",modelValue:L.value,"onUpdate:modelValue":y[4]||(y[4]=A=>L.value=A),max:q.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),n("div",Ge,[n("div",Qe,l(u.$t("liquidityTax")),1),r(U,{class:"rate-item-value",modelValue:m.value,"onUpdate:modelValue":y[5]||(y[5]=A=>m.value=A),max:D.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),o(i).deployerId==1?(w(),g("div",Ye,[n("div",Ze,l(u.$t("burnTax")),1),r(U,{class:"rate-item-value",modelValue:T.value,"onUpdate:modelValue":y[6]||(y[6]=A=>T.value=A),max:z.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):V("",!0),o(i).deployerId==2||o(i).deployerId==3?(w(),g("div",et,[n("div",tt,l(u.$t("rewardTax")),1),r(U,{class:"rate-item-value",modelValue:M.value,"onUpdate:modelValue":y[7]||(y[7]=A=>M.value=A),max:j.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):V("",!0)])]),n("div",nt,[r(H,{class:"btn-gradient btn-block",loading:e.value,onClick:s},{default:$(()=>[P(l(u.$t("submit")),1)]),_:1},8,["loading"])]),r(Q,{txHash:C.value,modelValue:O.value},null,8,["txHash","modelValue"])])}}};const it={class:"mint"},st={key:1,class:"err-info"},lt={key:2,class:"err-info"},ut={class:"dlg-item"},ot={class:"dlg-bottom"},pt={class:"white-list-table"},rt={key:0,class:"white-list-table-title"},dt={__name:"WhiteList",emits:["operateSuccess"],setup(S,{emit:a}){const{t}=J(),h=G(),i=Y(),e=b([{addressAdd:"",formatErr:!1,isAdded:!1}]),v=b(!1),c=b([]),k=b(!1),F=b(""),L=b(!1);function m(f){return f&&f.trim()}function T(){e.value.push({addressAdd:"",formatErr:!1,isAdded:!1})}function M(f){e.value.splice(f,1)}function C(f){let _=e.value[f].addressAdd;if(!_)return;if(/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(_))e.value[f].formatErr=!1;else{e.value[f].formatErr=!0;return}console.log(e.value.find(E=>E.addressAdd.toLowerCase()==_.toLowerCase())),e.value.filter(E=>E.addressAdd.toLowerCase()==_.toLowerCase()).length>1&&(e.value[f].addressAdd="",d.error(t("addressHasEntered"))),i.whiteList.findIndex(E=>E==_.toLowerCase())!=-1?e.value[f].isAdded=!0:e.value[f].isAdded=!1}async function O(){if(!h.isConnecting){d.error(t("pleaseConnectWallet"));return}let f=[];for(let _ in e.value)e.value[_].addressAdd&&!e.value[_].formatErr&&!e.value[_].isAdded&&f.push(e.value[_].addressAdd);if(f.length==0){d.error(t("enterAddressLimit"));return}v.value=!0,console.log(f);try{const _=await I.wallet.metamask.contract(i.tokenAddress,i.abi);console.log(_),await(await _.setFeeWhiteList(f,!0)).wait(),await i.getWhiteList(i.tokenAddress),e.value=[{addressAdd:"",formatErr:!1,isAdded:!1}],c.value=[],d.success(t("addWhiteListSuccess"))}catch(_){const R=I.wallet.metamask.parseError(_);d.error(t(R))}finally{v.value=!1}}async function x(){if(!h.isConnecting){d.error(t("pleaseConnectWallet"));return}if(console.log(c.value),c.value.length==0){d.error(t("selectAddressLimit"));return}k.value=!0;try{const f=await I.wallet.metamask.contract(i.tokenAddress,i.abi);console.log(f);const _=await f.setFeeWhiteList(c.value,!1);console.log(_),await _.wait(),await i.getWhiteList(i.tokenAddress),e.value=[{addressAdd:"",formatErr:!1,isAdded:!1}],c.value=[],d.success(t("removeWhiteListSuccess"))}catch(f){const _=I.wallet.metamask.parseError(f);d.error(t(_))}finally{k.value=!1}}return(f,_)=>{const R=W("CircleCloseFilled"),E=W("el-icon"),K=W("el-input"),q=W("Plus"),D=W("el-button"),z=W("el-checkbox"),j=W("el-checkbox-group");return w(),g("div",it,[(w(!0),g(te,null,ne(e.value,(s,u)=>(w(),g("div",{class:"dlg-item",key:u},[e.value.length>1?(w(),Z(E,{key:0,class:"close",onClick:y=>M(u)},{default:$(()=>[r(R)]),_:2},1032,["onClick"])):V("",!0),r(K,{class:"ipt-block",clearable:"",formatter:m,onBlur:y=>C(u),modelValue:e.value[u].addressAdd,"onUpdate:modelValue":y=>e.value[u].addressAdd=y,placeholder:o(t)("inputAddress")},null,8,["onBlur","modelValue","onUpdate:modelValue","placeholder"]),e.value[u].addressAdd&&e.value[u].formatErr?(w(),g("div",st,l(f.$t("addressWrong")),1)):V("",!0),e.value[u].addressAdd&&e.value[u].isAdded?(w(),g("div",lt,l(f.$t("addressAdded")),1)):V("",!0)]))),128)),n("div",ut,[r(D,{class:"add-address",size:"small",onClick:_[0]||(_[0]=s=>T())},{default:$(()=>[r(E,{class:"icon"},{default:$(()=>[r(q)]),_:1}),P(" "+l(f.$t("addAddress")),1)]),_:1})]),n("div",ot,[r(D,{class:"btn-gradient btn-block",loading:v.value,onClick:O},{default:$(()=>[P(l(f.$t("add")),1)]),_:1},8,["loading"]),n("div",pt,[o(i).whiteList.length>0?(w(),g("div",rt,[n("span",null,l(f.$t("added")),1),r(D,{class:"btn-gradient",loading:k.value,onClick:x,type:"primary",size:"small"},{default:$(()=>[P(l(f.$t("remove")),1)]),_:1},8,["loading"])])):V("",!0),r(j,{class:"checkbox-group",modelValue:c.value,"onUpdate:modelValue":_[1]||(_[1]=s=>c.value=s)},{default:$(()=>[(w(!0),g(te,null,ne(o(i).whiteList,(s,u)=>(w(),Z(z,{class:"white-list-table-item",label:s,key:u},{default:$(()=>[r(ee,{text:s,smallText:o(oe)(s)},null,8,["text","smallText"])]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])]),r(Q,{txHash:F.value,modelValue:L.value},null,8,["txHash","modelValue"])])}}},yt=se(dt,[["__scopeId","data-v-1a7a4026"]]),mt={class:"transfer"},ct={class:"dlg-item"},bt={class:"dlg-item-title"},ft={class:"dlg-item"},vt={class:"dlg-item-title"},Tt={class:"dlg-bottom"},wt={__name:"TransferOwnership",emits:["operateSuccess"],setup(S,{emit:a}){const{t}=J(),h=G(),i=Y(),e=b(""),v=b(!1),c=b(!1),k=b(i.owner),F=b("");async function L(){if(!h.isConnecting){d.error(t("pleaseConnectWallet"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(F.value)){d.error(t("trueFormat"));return}if(F.value==k.value){d.error(t("transferConsistent"));return}c.value=!0;try{const m=await I.wallet.metamask.contract(i.tokenAddress,i.abi),T=await m.transferOwnership(F.value);d.success(t("submitSuccess")),e.value=T.hash,v.value=!0,await T.wait(),i.owner=await m.owner(),F.value="",a("operateSuccess"),d.success(t("transferSuccess"))}catch(m){console.log(m),m.info&&m.info.error&&m.info.error.code===4001?d.error(t("userCancelOperate")):m.error&&m.error.message&&m.error.message=="Canceled"?d.error(t("userCancelOperate")):d.error(t("transferFail"))}finally{c.value=!1}}return(m,T)=>{const M=W("el-input"),C=W("el-button");return w(),g("div",mt,[n("div",ct,[n("div",bt,l(m.$t("ownership")),1),r(M,{class:"ipt-block",disabled:"",modelValue:k.value,"onUpdate:modelValue":T[0]||(T[0]=O=>k.value=O)},null,8,["modelValue"])]),n("div",ft,[n("div",vt,l(m.$t("transferTo")),1),r(M,{class:"ipt-block",modelValue:F.value,"onUpdate:modelValue":T[1]||(T[1]=O=>F.value=O),placeholder:m.$t("input")},null,8,["modelValue","placeholder"])]),n("div",Tt,[r(C,{class:"btn-gradient btn-block",loading:c.value,onClick:L},{default:$(()=>[P(l(m.$t("submit")),1)]),_:1},8,["loading"])]),r(Q,{txHash:e.value,modelValue:v.value},null,8,["txHash","modelValue"])])}}};const ht={class:"token-detail"},_t={class:"content"},Mt={class:"top"},gt={class:"small-title"},kt={class:"left"},Ft={class:"right"},Lt={class:"left"},St={class:"right"},$t={key:0},Ct={key:1},At={key:2},It={key:3},xt={class:"left"},Bt={class:"right"},Vt={class:"left"},Pt={class:"right"},Wt={class:"left"},Ot={class:"right"},Nt={class:"left"},Et={class:"right"},Rt={class:"left"},Ut={class:"right"},Dt={key:0},Ht={class:"left"},Kt={class:"right"},qt={class:"left"},zt={class:"right"},jt={key:0},Xt={class:"small-title"},Jt={class:"model-manage"},Gt={class:"left"},Qt={class:"right"},Yt={key:1},Zt={class:"small-title"},en={key:0,class:"operate-item"},tn={class:"left"},nn={class:"right"},an={key:1,class:"operate-item"},sn={class:"left"},ln={class:"right"},un={key:2,class:"operate-item"},on={class:"left"},pn={class:"right"},rn={key:3,class:"operate-item"},dn={class:"left"},yn={class:"right"},mn={class:"small-title"},cn={class:"operate-item"},bn={class:"left"},fn={class:"right"},vn={class:"operate-item"},Tn={class:"left"},wn={class:"right"},hn={class:"operate"},_n={__name:"Manage",setup(S){const{t:a}=J(),t=pe(),h=re(),i=G(),e=Y(),v=b(!1),c=b(!1),k=b(!1),F=b(!1),L=b(!1),m=b(!1),T=b("");let M=t.params.deployerId,C=t.params.chain,O=t.params.tokenAddress;const x=N(()=>i.walletAddress.toLowerCase()===e.owner.toLowerCase());(M!=e.deployerId||O!=e.deployerId)&&(e.$reset(),e.init(t.params.deployerId,t.params.tokenAddress),R());const f=N(()=>{if(e.deployerId==1)return p(e.buyFundFee).plus(e.buyLPFee).plus(e.buyBurnFee);if(e.deployerId==2||e.deployerId==3)return p(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee)}),_=N(()=>{if(e.deployerId==1)return p(e.sellFundFee).plus(e.sellLPFee).plus(e.sellBurnFee);if(e.deployerId==2||e.deployerId==3)return p(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee)});async function R(){e.deployerId==0?await e.getFreeTaxTokenInfo(e.tokenAddress):e.deployerId==1?await e.getFeeTokenInfo(e.tokenAddress):e.deployerId==2?await e.getDividendSelfTokenInfo(e.tokenAddress):e.deployerId==3&&await e.getAddPoolDividendTokenInfo(e.tokenAddress)}async function E(){if(!i.isConnecting){d.error(a("pleaseConnectWallet"));return}if(!c.value){if(!x.value){d.error(a("notHolder"));return}if(!e.tradeStart){c.value=!0;try{await(await(await I.wallet.metamask.contract(e.tokenAddress,e.abi)).startTrade()).wait(),d.success(a("tradeOpening")),e.tradeStart=!0}catch(s){console.log(s.info);const u=I.wallet.metamask.parseError(s);d.error(a(u))}finally{c.value=!1}}}}function K(){ce.confirm(a("giveUpConfirmInfo"),"",{confirmButtonText:a("confirm"),cancelButtonText:a("thinkAgain"),type:"warning",autofocus:!1,beforeClose:async(s,u,y)=>{u.confirmButtonLoading=!0,s=="confirm"&&await q(),u.confirmButtonLoading=!1,y()}}).then(()=>{}).catch(()=>{})}async function q(){if(!i.isConnecting){d.error(a("pleaseConnectWallet"));return}try{const s=await I.wallet.metamask.contract(e.tokenAddress,e.abi);let u=await s.renounceOwnership();T.value=u.hash,m.value=!0,u.wait().then(async y=>{y.status===1&&(d.success(a("upChainSuccessfully")),e.owner=await s.owner())})}catch(s){const u=I.wallet.metamask.parseError(s);d.error(a(u))}finally{}}function D(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function z(){h.push("/lock/create/token")}async function j(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e.tokenAddress,symbol:e.symbol,decimals:e.decimals,image:""}}})}catch(s){console.log(s),s.info&&s.info.error&&s.info.error.code===4001?d.error(a("userCancelOperate")):s.error&&s.error.message&&s.error.message=="Canceled"?d.error(a("userCancelOperate")):d.error(a("unkonwError"))}}return(s,u)=>{const y=W("el-button"),H=W("el-switch"),A=W("el-dialog"),le=de("loading");return w(),g("div",ht,[r(ve),ye((w(),g("div",_t,[n("ul",null,[n("li",Mt,[r(Te,{class:"token-name",symbol:o(e).symbol,name:o(e).name,bigIcon:o(be)(o(C).toLowerCase(),o(e).tokenAddress.toLowerCase()),smallIcon:o(ae)(o(C).toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),n("div",gt,l(s.$t("tokenInformation")),1),n("ul",null,[n("li",null,[n("div",kt,l(s.$t("chain")),1),n("div",Ft,[r(me,{icon:o(ae)(o(C).toLowerCase()),text:o(fe).chainList.find(B=>B.chain==o(C).toLowerCase()).chainShow},null,8,["icon","text"])])]),n("li",null,[n("div",Lt,l(s.$t("template")),1),n("div",St,[o(e).deployerId==0?(w(),g("span",$t,l(s.$t("freeTax")),1)):o(e).deployerId==1?(w(),g("span",Ct,l(s.$t("feeToken")),1)):o(e).deployerId==2?(w(),g("span",At,l(s.$t("selfDividendToken")),1)):o(e).deployerId==3?(w(),g("span",It,l(s.$t("addPoolDividend")),1)):V("",!0)])]),n("li",null,[n("div",xt,l(s.$t("tokenAddress")),1),n("div",Bt,[r(ee,{text:o(e).tokenAddress,smallText:o(e).tokenAddress},null,8,["text","smallText"])])]),n("li",null,[n("div",Vt,l(s.$t("tokenName")),1),n("div",Pt,l(o(e).name),1)]),n("li",null,[n("div",Wt,l(s.$t("tokenSymbol")),1),n("div",Ot,l(o(e).symbol),1)]),n("li",null,[n("div",Nt,l(s.$t("tokenPrecision")),1),n("div",Et,l(o(e).decimals),1)]),n("li",null,[n("div",Rt,l(s.$t("tokenAmount")),1),n("div",Ut,l(o(ie)(o(e).totalSupply)),1)]),o(e).deployerId!=2?(w(),g("li",Dt,[n("div",Ht,l(s.$t("isMintToken")),1),n("div",Kt,l(o(e).canMint?s.$t("yes"):s.$t("no")),1)])):V("",!0),n("li",null,[n("div",qt,l(s.$t("ownerAddr")),1),n("div",zt,[r(ee,{text:o(e).owner,smallText:o(e).owner},null,8,["text","smallText"])])])]),o(e).canMint&&x.value?(w(),g("div",jt,[n("div",Xt,l(s.$t("economicManagement")),1),n("div",Jt,[n("div",Gt,l(s.$t("currentIssuedAmount"))+"：",1),n("div",Qt,[P(l(o(ie)(o(e).totalSupply)),1),r(y,{class:"mint-btn",type:"primary",onClick:u[0]||(u[0]=B=>v.value=!0)},{default:$(()=>[P(l(s.$t("mint")),1)]),_:1})])])])):V("",!0),o(e).deployerId!=0&&(o(e).enableManualStartTrade||o(e).enableChangeTax||o(e).enableWhiteList)?(w(),g("div",Yt,[n("div",Zt,l(s.$t("tradeManage")),1),n("ul",null,[o(e).deployerId!=0&&o(e).enableManualStartTrade?(w(),g("li",en,[n("div",tn,l(s.$t("openTrade")),1),n("div",nn,[r(H,{"model-value":o(e).tradeStart,loading:c.value,onClick:u[1]||(u[1]=B=>E())},null,8,["model-value","loading"])])])):V("",!0),o(e).deployerId!=0&&o(e).enableKillBlock?(w(),g("li",an,[n("div",sn,l(s.$t("autoKillBlockNum")),1),n("div",ln,l(o(e).killBlock),1)])):V("",!0),o(e).deployerId!=0&&o(e).enableChangeTax?(w(),g("li",un,[n("div",on,l(s.$t("taxEdit")),1),n("div",pn,[n("span",null,l(s.$t("buy"))+l(f.value)+"%"+l(s.$t("sell"))+l(_.value)+"%",1),r(y,{class:"btn",key:"primary",type:"primary",disabled:!x.value,link:"",onClick:u[2]||(u[2]=B=>F.value=!0)},{default:$(()=>[P(l(s.$t("edit")),1)]),_:1},8,["disabled"])])])):V("",!0),o(e).deployerId!=0&&o(e).enableWhiteList?(w(),g("li",rn,[n("div",dn,l(s.$t("whiteList")),1),n("div",yn,[n("span",null,l(o(e).whiteList.length),1),r(y,{class:"btn",key:"primary",disabled:!x.value,type:"primary",link:"",onClick:u[3]||(u[3]=B=>k.value=!0)},{default:$(()=>[P(l(s.$t("add")),1)]),_:1},8,["disabled"])])])):V("",!0)])])):V("",!0),n("div",mn,l(s.$t("authorityManagement")),1),n("ul",null,[n("li",cn,[n("div",bn,l(s.$t("contractOwnership")),1),n("div",fn,[r(y,{class:"btn",key:"primary",type:"primary",link:"",disabled:!x.value,onClick:K},{default:$(()=>[P(l(s.$t("renounce")),1)]),_:1},8,["disabled"])])]),n("li",vn,[n("div",Tn,l(s.$t("transferOwnership")),1),n("div",wn,[r(y,{class:"btn",key:"primary",type:"primary",link:"",disabled:!x.value,onClick:u[4]||(u[4]=B=>L.value=!0)},{default:$(()=>[P(l(s.$t("transfer")),1)]),_:1},8,["disabled"])])])]),n("div",hn,[r(y,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:D},{default:$(()=>[P(l(s.$t("LPAddOrManage")),1)]),_:1}),r(y,{class:"btn",text:"",bg:"",type:"primary",onClick:z},{default:$(()=>[P(l(s.$t("lockToken")),1)]),_:1}),o(i).walletType=="metamask"?(w(),Z(y,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:j},{default:$(()=>[P(l(s.$t("importToWallet")),1)]),_:1})):V("",!0)])])),[[le,o(e).loading]]),r(A,{modelValue:v.value,"onUpdate:modelValue":u[6]||(u[6]=B=>v.value=B),title:s.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:$(()=>[r(xe,{onOperateSuccess:u[5]||(u[5]=B=>v.value=!1)})]),_:1},8,["modelValue","title"]),r(A,{modelValue:F.value,"onUpdate:modelValue":u[8]||(u[8]=B=>F.value=B),title:s.$t("taxEdit"),"destroy-on-close":"",class:"dlg dlg-rate"},{default:$(()=>[r(at,{onOperateSuccess:u[7]||(u[7]=B=>F.value=!1)})]),_:1},8,["modelValue","title"]),r(A,{modelValue:k.value,"onUpdate:modelValue":u[10]||(u[10]=B=>k.value=B),title:s.$t("whiteListManage"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:$(()=>[r(yt,{onOperateSuccess:u[9]||(u[9]=B=>k.value=!1)})]),_:1},8,["modelValue","title"]),r(A,{modelValue:L.value,"onUpdate:modelValue":u[12]||(u[12]=B=>L.value=B),title:s.$t("transferOwnership"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:$(()=>[r(wt,{onOperateSuccess:u[11]||(u[11]=B=>L.value=!1)})]),_:1},8,["modelValue","title"]),r(Q,{txHash:T.value,modelValue:m.value},null,8,["txHash","modelValue"])])}}},In=se(_n,[["__scopeId","data-v-e9bbd9d1"]]);export{In as default};
