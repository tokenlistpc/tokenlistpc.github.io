import{K as be,b as $,C as o,i as X,u as J,j as b,e as P,o as w,c as _,f as i,t as s,h as p,l,y as S,A as B,E as d,v as K,z as W,_ as de,F as ue,g as oe,B as se,p as fe,d as ve,a as Te,H as we,I as he,L as _e,M as ge,q as ke,m as re,x as Me,N as pe}from"./index-5bf2b147.js";import{B as Fe}from"./Back-daa116a7.js";import{C as ae,T as Se}from"./CopyText-296d106d.js";import{_ as G}from"./OperateSuccessDialog-ec045a4a.js";import{f as U,a as le}from"./units-67c055c8.js";import{R as z}from"./Rate-97e324a1.js";import"./TokenIcon-ab49bb8c.js";/* empty css                                                          */import"./DoubleToken-ca9a166e.js";const Le=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Ae=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],$e=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Ce=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],xe=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"iterations",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claims",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastProcessedIndex",type:"uint256"},{indexed:!0,internalType:"bool",name:"automatic",type:"bool"},{indexed:!1,internalType:"uint256",name:"gas",type:"uint256"},{indexed:!0,internalType:"address",name:"processor",type:"address"}],name:"ProcessedDividendTracker",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SendDividends",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouterAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"buy_totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"deadWallet",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"dividendToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"dividendTracker",outputs:[{internalType:"contract ETHBackDividendTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"excludeFromDividends",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"gasForProcessing",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isLaunch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"launch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"mustHoldNum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gas",type:"uint256"}],name:"processDividendTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"sell_totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"wallet",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapTokensAtAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Q=be("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,rewardToken:"",rewardTokenName:"",rewardTokenSymbol:"",buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,enableSwapLimit:!1,maxSwapAmount:0,enableWalletLimit:!1,maxWalletAmount:0,fundAddress:"",canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,enableKillBlock:!1,killBlock:0,whiteListCount:0,whiteList:[]}),actions:{init(A,n){switch(this.deployerId=Number(A),this.tokenAddress=n.toLowerCase(),this.deployerId){case 0:this.abi=Le;break;case 1:this.abi=Ae;break;case 2:this.abi=$e;break;case 3:this.abi=Ce;break;case 4:this.abi=xe;break;default:this.abi=null}},async getFreeTaxTokenInfo(A){this.loading=!0;const n=await $.wallet.metamask.contract(A,this.abi);Promise.all([n.name(),n.canMint(),n.symbol(),n.decimals(),n.totalSupply(),n.owner()]).then(t=>{this.name=t[0],this.canMint=t[1],this.symbol=t[2],this.decimals=Number(t[3]),this.totalSupply=U(t[4].toString(),Number(this.decimals)),this.owner=t[5].toLowerCase()}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getWhiteList(A){try{const n=await $.wallet.metamask.contract(A,this.abi);this.whiteListCount=await n.feeWhiteListCount();let t=[];this.whiteListCount>0&&(t=await n.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=t.map(g=>g.toLowerCase())}catch(n){throw n}},async getRewardTokenInfo(A){try{const n=await $.wallet.metamask.contractERC20(A);Promise.all([n.name(),n.symbol()]).then(t=>{console.log(t),this.rewardTokenName=t[0],this.rewardTokenSymbol=t[1]}).catch(t=>{console.log(t)})}catch(n){console.log(n)}},async getTokenFee(A){const n=await $.wallet.metamask.contract(A,this.abi);let t=[];this.deployerId==1?t=[n._buyFundFee(),n._buyLPFee(),n._buyBurnFee(),n._sellFundFee(),n._sellLPFee(),n._sellBurnFee()]:this.deployerId==2||this.deployerId==3?t=[n._buyFundFee(),n._buyLPFee(),n._buyRewardFee(),n._sellFundFee(),n._sellLPFee(),n._sellRewardFee()]:this.deployerId==4&&(t=[n._buyFundFee(),n._buyLPFee(),n._buyRewardFee(),n._buyBurnFee(),n._sellFundFee(),n._sellLPFee(),n._sellRewardFee(),n._sellBurnFee()]),Promise.all(t).then(g=>{console.log(g),this.deployerId==1?(this.buyFundFee=o(g[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(g[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=o(g[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(g[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(g[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=o(g[5]).div(1e4).multipliedBy(100).toString()):this.deployerId==2||this.deployerId==3?(this.buyFundFee=o(g[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(g[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=o(g[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(g[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(g[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=o(g[5]).div(1e4).multipliedBy(100).toString()):this.deployerId==4&&(this.buyFundFee=o(g[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=o(g[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=o(g[2]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=o(g[3]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=o(g[4]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=o(g[5]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=o(g[6]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=o(g[7]).div(1e4).multipliedBy(100).toString())}).catch(g=>{console.log(g)})},async getFeeTokenInfo(A){this.loading=!0;const n=await $.wallet.metamask.contract(A,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.canMint(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4].toLowerCase(),this.canMint=t[5],this.enableManualStartTrade=t[6],this.tradeStart=t[7],this.enableWhiteList=t[8],this.enableChangeTax=t[9],this.enableKillBlock=t[10],this.killBlock=t[11],this.enableSwapLimit=t[12],this.maxSwapAmount=U(t[13].toString(),Number(this.decimals)),this.enableWalletLimit=t[14],this.maxWalletAmount=U(t[15].toString(),Number(this.decimals)),this.fundAddress=t[16].toLowerCase(),await this.getTokenFee(A),await this.getWhiteList(A)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getDividendSelfTokenInfo(A){this.loading=!0;const n=await $.wallet.metamask.contract(A,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async t=>{this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4].toLowerCase(),this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.enableKillBlock=t[9],this.killBlock=t[10],this.enableSwapLimit=t[11],this.maxSwapAmount=U(t[12].toString(),Number(this.decimals)),this.enableWalletLimit=t[13],this.maxWalletAmount=U(t[14].toString(),Number(this.decimals)),this.fundAddress=t[15].toLowerCase(),await this.getTokenFee(A),await this.getWhiteList(A)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getAddPoolDividendTokenInfo(A){this.loading=!0;const n=await $.wallet.metamask.contract(A,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.canMint(),n.enableKillBlock(),n.kb(),n.rewardToken(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async t=>{console.log(t),this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4].toLowerCase(),this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.canMint=t[9],this.enableKillBlock=t[10],this.killBlock=t[11],this.rewardToken=t[12].toLowerCase(),this.enableSwapLimit=t[13],this.maxSwapAmount=U(t[14].toString(),Number(this.decimals)),this.enableWalletLimit=t[15],this.maxWalletAmount=U(t[16].toString(),Number(this.decimals)),this.fundAddress=t[17].toLowerCase(),await this.getTokenFee(A),await this.getWhiteList(A),await this.getRewardTokenInfo(this.rewardToken)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})},async getDividendTokenInfo(A){this.loading=!0;const n=await $.wallet.metamask.contract(A,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.isLaunch(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.dividendToken(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async t=>{console.log(t),this.name=t[0],this.symbol=t[1],this.decimals=Number(t[2]),this.totalSupply=U(t[3].toString(),Number(this.decimals)),this.owner=t[4].toLowerCase(),this.enableManualStartTrade=t[5],this.tradeStart=t[6],this.enableWhiteList=t[7],this.enableChangeTax=t[8],this.enableKillBlock=t[9],this.killBlock=t[10],this.rewardToken=t[11].toLowerCase(),this.enableSwapLimit=t[12],this.maxSwapAmount=U(t[13].toString(),Number(this.decimals)),this.enableWalletLimit=t[14],this.maxWalletAmount=U(t[15].toString(),Number(this.decimals)),this.fundAddress=t[16].toLowerCase(),await this.getTokenFee(A),await this.getRewardTokenInfo(this.rewardToken)}).catch(t=>{console.log(t)}).finally(t=>{this.loading=!1})}}}),Ie={class:"mint"},Be={class:"dlg-item"},We={class:"dlg-item-title"},Ve={class:"dlg-item"},Pe={class:"dlg-item-title"},Ne={class:"dlg-item"},Oe={class:"dlg-item-title"},Re={class:"dlg-bottom"},Ee={__name:"Mint",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(""),f=b(g.walletAddress),c=b(""),T=b(!1),k=b(!1);function v(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(f.value)||d.error(t("addressWrong"))}async function r(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(!e.value){d.error(t("amountEmpty"));return}if(e.value.replace(".","").length>34){d.error(t("amountOver"));return}let m=e.value.split(".");if(m[1]&&m[1].length>a.decimals){d.error(t("amountOver"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(f.value)){d.error(t("addressWrong"));return}T.value=!0;try{const h=await $.wallet.metamask.contract(a.tokenAddress,a.abi);let C=await h.mint(f.value,le(e.value,a.decimals));c.value=C.hash,k.value=!0,C.wait().then(async V=>{if(V.status===1){d.success(t("upChainSuccessfully"));let E=await h.totalSupply();a.totalSupply=U(E.toString(),a.decimals),T.value=!1,n("operateSuccess")}})}catch(h){T.value=!1;const C=$.wallet.metamask.parseError(h);d.error(t(C))}finally{}}return(m,h)=>{const C=P("el-input"),V=P("el-button");return w(),_("div",Ie,[i("div",Be,[i("div",We,s(m.$t("currentTotal")),1),p(C,{class:"ipt-block",disabled:"",modelValue:l(a).totalSupply,"onUpdate:modelValue":h[0]||(h[0]=E=>l(a).totalSupply=E)},null,8,["modelValue"])]),i("div",Ve,[i("div",Pe,s(m.$t("mintTokenAmount")),1),p(C,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":h[1]||(h[1]=E=>e.value=E),placeholder:m.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Ne,[i("div",Oe,s(m.$t("receivingAddress")),1),p(C,{class:"ipt-block",modelValue:f.value,"onUpdate:modelValue":h[2]||(h[2]=E=>f.value=E),onBlur:v,placeholder:m.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Re,[p(V,{class:"btn-gradient btn-block",loading:T.value,onClick:r},{default:S(()=>[B(s(m.$t("submitAdd")),1)]),_:1},8,["loading"])]),p(G,{txHash:c.value,modelValue:k.value},null,8,["txHash","modelValue"])])}}},He={class:"edit-rate"},Ue={class:"dlg-item"},De={class:"dlg-item-title"},Ke={key:0},qe={key:1},je={class:"dlg-item-value"},ze={class:"rate-item"},Xe={class:"rate-item-title"},Je={class:"rate-item"},Ge={class:"rate-item-title"},Qe={key:0,class:"rate-item"},Ye={class:"rate-item-title"},Ze={key:1,class:"rate-item"},et={class:"rate-item-title"},tt={class:"dlg-item"},nt={class:"dlg-item-title"},at={key:0},it={key:1},st={class:"dlg-item-value"},lt={class:"rate-item"},ut={class:"rate-item-title"},ot={class:"rate-item"},rt={class:"rate-item-title"},pt={key:0,class:"rate-item"},dt={class:"rate-item-title"},yt={key:1,class:"rate-item"},mt={class:"rate-item-title"},ct={class:"dlg-bottom"},bt={__name:"EditTax",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(!1),f=b(a.buyFundFee),c=b(a.buyLPFee),T=b(a.buyBurnFee),k=b(a.buyRewardFee),v=b(a.sellFundFee),r=b(a.sellLPFee),m=b(a.sellBurnFee),h=b(a.sellRewardFee),C=b(""),V=b(!1),E=K(()=>{if(a.deployerId==1)return o(f.value).plus(c.value).plus(T.value);if(a.deployerId==2||a.deployerId==3)return o(f.value).plus(c.value).plus(k.value);if(a.deployerId==4)return o(f.value).plus(c.value).plus(k.value).plus(T.value)}),M=K(()=>{if(a.deployerId==1)return o(v.value).plus(r.value).plus(m.value);if(a.deployerId==2||a.deployerId==3)return o(v.value).plus(r.value).plus(h.value);if(a.deployerId==4)return o(v.value).plus(r.value).plus(h.value).plus(m.value)}),F=K(()=>{if(a.deployerId==1)return Number(o(20).minus(c.value).minus(T.value));if(a.deployerId==2||a.deployerId==3)return Number(o(20).minus(c.value).minus(k.value));if(a.deployerId==4)return Number(o(25).minus(c.value).minus(k.value).minus(T.value))}),N=K(()=>{if(a.deployerId==1)return Number(o(20).minus(f.value).minus(T.value));if(a.deployerId==2||a.deployerId==3)return Number(o(20).minus(f.value).minus(k.value));if(a.deployerId==4)return Number(o(25).minus(f.value).minus(k.value).minus(T.value))}),D=K(()=>{if(a.deployerId==1)return Number(o(20).minus(f.value).minus(c.value));if(a.deployerId==4)return Number(o(25).minus(f.value).minus(c.value).minus(k.value))}),O=K(()=>{if(a.deployerId==2||a.deployerId==3)return Number(o(20).minus(f.value).minus(c.value).toNumber());if(a.deployerId==4)return Number(o(25).minus(f.value).minus(c.value).minus(T.value))}),ee=K(()=>{if(a.deployerId==1)return Number(o(20).minus(r.value).minus(m.value));if(a.deployerId==2||a.deployerId==3)return Number(o(20).minus(r.value).minus(h.value));if(a.deployerId==4)return Number(o(25).minus(r.value).minus(h.value).minus(m.value))}),j=K(()=>{if(a.deployerId==1)return Number(o(20).minus(v.value).minus(m.value));if(a.deployerId==2||a.deployerId==3)return Number(o(20).minus(v.value).minus(h.value));if(a.deployerId==4)return Number(o(25).minus(v.value).minus(h.value).minus(m.value))}),te=K(()=>{if(a.deployerId==1)return Number(o(20).minus(v.value).minus(r.value));if(a.deployerId==4)return Number(o(25).minus(v.value).minus(r.value).minus(h.value))}),ne=K(()=>{if(a.deployerId==2||a.deployerId==3)return o(20).minus(v.value).minus(r.value).toNumber();if(a.deployerId==4)return Number(o(25).minus(v.value).minus(r.value).minus(m.value))});async function q(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(a.deployerId==1){if(o(f.value).plus(T.value).plus(c.value).plus(v.value).plus(m.value).plus(r.value).lte(0)){d.error(t("taxlimit1"));return}}else if(a.deployerId==2){if(o(f.value).plus(c.value).plus(v.value).plus(r.value).lte(0)){d.error(t("taxlimit2"));return}}else if(a.deployerId==3&&o(f.value).plus(k.value).plus(c.value).plus(v.value).plus(h.value).plus(r.value).lte(0)){d.error(t("taxlimit1"));return}e.value=!0;try{const I=await $.wallet.metamask.contract(a.tokenAddress,a.abi);let x;a.deployerId==1?x=[o(c.value).div(100).multipliedBy(1e4).toNumber(),o(T.value).div(100).multipliedBy(1e4).toNumber(),o(f.value).div(100).multipliedBy(1e4).toNumber(),o(r.value).div(100).multipliedBy(1e4).toNumber(),o(m.value).div(100).multipliedBy(1e4).toNumber(),o(v.value).div(100).multipliedBy(1e4).toNumber()]:a.deployerId==2?x=[o(c.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber(),o(f.value).div(100).multipliedBy(1e4).toNumber(),o(r.value).div(100).multipliedBy(1e4).toNumber(),o(h.value).div(100).multipliedBy(1e4).toNumber(),o(v.value).div(100).multipliedBy(1e4).toNumber()]:a.deployerId==3?x=[o(f.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber(),o(c.value).div(100).multipliedBy(1e4).toNumber(),o(v.value).div(100).multipliedBy(1e4).toNumber(),o(h.value).div(100).multipliedBy(1e4).toNumber(),o(r.value).div(100).multipliedBy(1e4).toNumber()]:a.deployerId==4&&(x=[o(f.value).div(100).multipliedBy(1e4).toNumber(),o(c.value).div(100).multipliedBy(1e4).toNumber(),o(k.value).div(100).multipliedBy(1e4).toNumber(),o(T.value).div(100).multipliedBy(1e4).toNumber(),o(v.value).div(100).multipliedBy(1e4).toNumber(),o(r.value).div(100).multipliedBy(1e4).toNumber(),o(h.value).div(100).multipliedBy(1e4).toNumber(),o(m.value).div(100).multipliedBy(1e4).toNumber()]);const Z=await I.completeCustoms(x);d.success(t("submitSuccess")),C.value=Z.hash,V.value=!0,await Z.wait(),a.getTokenFee(a.tokenAddress),d.success(t("editTaxSuccessfully")),n("operateSuccess")}catch(I){const x=$.wallet.metamask.parseError(I);d.error(t(x))}finally{e.value=!1}}return(I,x)=>{const Z=P("el-button");return w(),_("div",He,[i("div",Ue,[i("div",De,[l(a).deployerId!=4?(w(),_("span",Ke,s(I.$t("editBuyTax",{buyFee:E.value,maxBuyFee:20})),1)):(w(),_("span",qe,s(I.$t("editBuyTax",{buyFee:E.value,maxBuyFee:25})),1))]),i("div",je,[i("div",ze,[i("div",Xe,s(I.$t("marketingTax")),1),p(z,{class:"rate-item-value",modelValue:f.value,"onUpdate:modelValue":x[0]||(x[0]=R=>f.value=R),max:F.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),i("div",Je,[i("div",Ge,s(I.$t("liquidityTax")),1),p(z,{class:"rate-item-value",modelValue:c.value,"onUpdate:modelValue":x[1]||(x[1]=R=>c.value=R),max:N.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),l(a).deployerId==1||l(a).deployerId==4?(w(),_("div",Qe,[i("div",Ye,s(I.$t("burnTax")),1),p(z,{class:"rate-item-value",modelValue:T.value,"onUpdate:modelValue":x[2]||(x[2]=R=>T.value=R),max:D.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),l(a).deployerId==2||l(a).deployerId==3||l(a).deployerId==4?(w(),_("div",Ze,[i("div",et,s(I.$t("rewardTax")),1),p(z,{class:"rate-item-value",modelValue:k.value,"onUpdate:modelValue":x[3]||(x[3]=R=>k.value=R),max:O.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),i("div",tt,[i("div",nt,[l(a).deployerId!=4?(w(),_("span",at,s(I.$t("editSellTax",{sellFee:M.value,maxSellFee:20})),1)):(w(),_("span",it,s(I.$t("editSellTax",{sellFee:M.value,maxSellFee:25})),1))]),i("div",st,[i("div",lt,[i("div",ut,s(I.$t("marketingTax")),1),p(z,{class:"rate-item-value",modelValue:v.value,"onUpdate:modelValue":x[4]||(x[4]=R=>v.value=R),max:ee.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),i("div",ot,[i("div",rt,s(I.$t("liquidityTax")),1),p(z,{class:"rate-item-value",modelValue:r.value,"onUpdate:modelValue":x[5]||(x[5]=R=>r.value=R),max:j.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),l(a).deployerId==1||l(a).deployerId==4?(w(),_("div",pt,[i("div",dt,s(I.$t("burnTax")),1),p(z,{class:"rate-item-value",modelValue:m.value,"onUpdate:modelValue":x[6]||(x[6]=R=>m.value=R),max:te.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),l(a).deployerId==2||l(a).deployerId==3||l(a).deployerId==4?(w(),_("div",yt,[i("div",mt,s(I.$t("rewardTax")),1),p(z,{class:"rate-item-value",modelValue:h.value,"onUpdate:modelValue":x[7]||(x[7]=R=>h.value=R),max:ne.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),i("div",ct,[p(Z,{class:"btn-gradient btn-block",loading:e.value,onClick:q},{default:S(()=>[B(s(I.$t("submit")),1)]),_:1},8,["loading"])]),p(G,{txHash:C.value,modelValue:V.value},null,8,["txHash","modelValue"])])}}};const ft={class:"mint"},vt={key:1,class:"err-info has-added"},Tt={class:"dlg-item"},wt={key:0,class:"dlg-bottom"},ht={class:"white-list-table"},_t={key:0,class:"white-list-table-title"},gt={key:1,class:"dlg-bottom"},kt={class:"operate"},Mt={__name:"WhiteList",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b([{addressAdd:"",isAdded:!1}]),f=b(!1),c=b([]),T=b(!1),k=b(""),v=b(!1);function r(M){return M&&M.trim()}function m(){e.value.push({addressAdd:"",isAdded:!1})}function h(M){e.value.splice(M,1)}async function C(M){e.value[M].addressAdd=e.value[M].addressAdd.trim();let F=e.value[M].addressAdd;if(e.value[M].isAdded=!1,!F)return;if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(F)){e.value[M].addressAdd="",d.error(t("addressWrong"));return}if(console.log(e.value.find(D=>D.addressAdd.toLowerCase()==F.toLowerCase())),e.value.filter(D=>D.addressAdd.toLowerCase()==F.toLowerCase()).length>1&&(e.value[M].addressAdd="",d.error(t("addressHasEntered"))),a.deployerId==4){f.value=!0,T.value=!0;const D=await $.wallet.metamask.contract(a.tokenAddress,a.abi);console.log(D),await D._feeWhiteList(F)?e.value[M].isAdded=!0:e.value[M].isAdded=!1,f.value=!1,T.value=!1}else a.whiteList.findIndex(D=>D==F.toLowerCase())!=-1?e.value[M].isAdded=!0:e.value[M].isAdded=!1}async function V(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}let M=[];for(let F in e.value)e.value[F].addressAdd&&!e.value[F].isAdded&&M.push(e.value[F].addressAdd);if(M.length==0){d.error(t("enterAddressLimit"));return}f.value=!0,console.log(M);try{const F=await $.wallet.metamask.contract(a.tokenAddress,a.abi);console.log(F);const N=await F.setFeeWhiteList(M,!0);k.value=N.hash,v.value=!0,await N.wait(),a.deployerId!=4&&(await a.getWhiteList(a.tokenAddress),c.value=[]),e.value=[{addressAdd:"",isAdded:!1}],d.success(t("addWhiteListSuccess"))}catch(F){const N=$.wallet.metamask.parseError(F);d.error(t(N))}finally{f.value=!1}}async function E(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}let M=[];if(a.deployerId==4){for(let F in e.value)e.value[F].addressAdd&&e.value[F].isAdded&&M.push(e.value[F].addressAdd);if(M.length==0){d.error(t("enterRemoveAddressLimit"));return}}else if(M=c.value,M.length==0){d.error(t("selectAddressLimit"));return}T.value=!0;try{const F=await $.wallet.metamask.contract(a.tokenAddress,a.abi);console.log(F);const N=await F.setFeeWhiteList(M,!1);console.log(N),k.value=N.hash,v.value=!0,await N.wait(),a.deployerId!=4&&(await a.getWhiteList(a.tokenAddress),c.value=[]),e.value=[{addressAdd:"",isAdded:!1}],d.success(t("removeWhiteListSuccess"))}catch(F){const N=$.wallet.metamask.parseError(F);d.error(t(N))}finally{T.value=!1}}return(M,F)=>{const N=P("CircleCloseFilled"),D=P("el-icon"),O=P("el-input"),ee=P("Plus"),j=P("el-button"),te=P("el-checkbox"),ne=P("el-checkbox-group");return w(),_("div",ft,[(w(!0),_(ue,null,oe(e.value,(q,I)=>(w(),_("div",{class:"dlg-item",key:I},[e.value.length>1?(w(),se(D,{key:0,class:"close",onClick:x=>h(I)},{default:S(()=>[p(N)]),_:2},1032,["onClick"])):W("",!0),p(O,{class:"ipt-block",clearable:"",formatter:r,onChange:x=>C(I),modelValue:e.value[I].addressAdd,"onUpdate:modelValue":x=>e.value[I].addressAdd=x,placeholder:l(t)("inputAddress")},null,8,["onChange","modelValue","onUpdate:modelValue","placeholder"]),e.value[I].addressAdd&&e.value[I].isAdded?(w(),_("div",vt,s(M.$t("addressAdded")),1)):W("",!0)]))),128)),i("div",Tt,[p(j,{class:"add-address",size:"small",onClick:F[0]||(F[0]=q=>m())},{default:S(()=>[p(D,{class:"icon"},{default:S(()=>[p(ee)]),_:1}),B(" "+s(M.$t("addAddress")),1)]),_:1})]),l(a).deployerId!=4?(w(),_("div",wt,[p(j,{class:"btn-gradient btn-block",loading:f.value,onClick:V},{default:S(()=>[B(s(M.$t("add")),1)]),_:1},8,["loading"]),i("div",ht,[l(a).whiteList.length>0?(w(),_("div",_t,[i("span",null,s(M.$t("added")),1),p(j,{class:"btn-gradient",loading:T.value,onClick:E,type:"primary",size:"small"},{default:S(()=>[B(s(M.$t("remove")),1)]),_:1},8,["loading"])])):W("",!0),p(ne,{class:"checkbox-group",modelValue:c.value,"onUpdate:modelValue":F[1]||(F[1]=q=>c.value=q)},{default:S(()=>[(w(!0),_(ue,null,oe(l(a).whiteList,(q,I)=>(w(),se(te,{class:"white-list-table-item",label:q,key:I},{default:S(()=>[p(ae,{text:q,smallText:l(fe)(q)},null,8,["text","smallText"])]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])])):(w(),_("div",gt,[i("div",kt,[p(j,{class:"btn remove",loading:T.value,onClick:E},{default:S(()=>[B(s(M.$t("remove")),1)]),_:1},8,["loading"]),p(j,{class:"btn-gradient btn",loading:f.value,onClick:V},{default:S(()=>[B(s(M.$t("add")),1)]),_:1},8,["loading"])])])),p(G,{txHash:k.value,modelValue:v.value,"onUpdate:modelValue":F[2]||(F[2]=q=>v.value=q)},null,8,["txHash","modelValue"])])}}},Ft=de(Mt,[["__scopeId","data-v-b5231e22"]]),St={class:"transfer"},Lt={class:"dlg-item"},At={class:"dlg-item-title"},$t={class:"dlg-item"},Ct={class:"dlg-item-title"},xt={class:"dlg-bottom"},It={__name:"TransferOwnership",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(""),f=b(!1),c=b(!1),T=b(a.owner),k=b("");async function v(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(k.value=k.value.trim(),!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(k.value)){d.error(t("trueFormat"));return}if(k.value==T.value){d.error(t("transferConsistent"));return}c.value=!0;try{const r=await $.wallet.metamask.contract(a.tokenAddress,a.abi),m=await r.transferOwnership(k.value);d.success(t("submitSuccess")),e.value=m.hash,f.value=!0,await m.wait(),a.owner=await r.owner(),k.value="",n("operateSuccess"),d.success(t("transferSuccess"))}catch(r){console.log(r),r.info&&r.info.error&&r.info.error.code===4001?d.error(t("userCancelOperate")):r.error&&r.error.message&&r.error.message=="Canceled"?d.error(t("userCancelOperate")):d.error(t("transferFail"))}finally{c.value=!1}}return(r,m)=>{const h=P("el-input"),C=P("el-button");return w(),_("div",St,[i("div",Lt,[i("div",At,s(r.$t("ownership")),1),p(h,{class:"ipt-block",disabled:"",modelValue:T.value,"onUpdate:modelValue":m[0]||(m[0]=V=>T.value=V)},null,8,["modelValue"])]),i("div",$t,[i("div",Ct,s(r.$t("transferTo")),1),p(h,{class:"ipt-block",modelValue:k.value,"onUpdate:modelValue":m[1]||(m[1]=V=>k.value=V),placeholder:r.$t("input")},null,8,["modelValue","placeholder"])]),i("div",xt,[p(C,{class:"btn-gradient btn-block",loading:c.value,onClick:v},{default:S(()=>[B(s(r.$t("submit")),1)]),_:1},8,["loading"])]),p(G,{txHash:e.value,modelValue:f.value},null,8,["txHash","modelValue"])])}}},Bt={class:"mint"},Wt={class:"dlg-item"},Vt={class:"dlg-item-title"},Pt={class:"dlg-bottom"},Nt={__name:"EditMaxSwapAmount",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(a.maxSwapAmount),f=b(""),c=b(!1),T=b(!1);async function k(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(!e.value){d.error(t("amountEmpty"));return}if(e.value.replace(".","").length>34){d.error(t("amountOver"));return}let v=e.value.split(".");if(v[1]&&v[1].length>a.decimals){d.error(t("amountOver"));return}c.value=!0;try{const r=await $.wallet.metamask.contract(a.tokenAddress,a.abi);let m=await r.changeSwapLimit(le(e.value,a.decimals));f.value=m.hash,T.value=!0,m.wait().then(async h=>{if(h.status===1){d.success(t("upChainSuccessfully"));let C=await r.maxSwapAmount();a.maxSwapAmount=U(C.toString(),a.decimals),c.value=!1,n("operateSuccess")}})}catch(r){c.value=!1;const m=$.wallet.metamask.parseError(r);d.error(t(m))}finally{}}return(v,r)=>{const m=P("el-input"),h=P("el-button");return w(),_("div",Bt,[i("div",Wt,[i("div",Vt,s(v.$t("swapAmount")),1),p(m,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":r[0]||(r[0]=C=>e.value=C),placeholder:v.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Pt,[p(h,{class:"btn-gradient btn-block",loading:c.value,onClick:k},{default:S(()=>[B(s(v.$t("submit")),1)]),_:1},8,["loading"])]),p(G,{txHash:f.value,modelValue:T.value},null,8,["txHash","modelValue"])])}}},Ot={class:"mint"},Rt={class:"dlg-item"},Et={class:"dlg-item-title"},Ht={class:"dlg-bottom"},Ut={__name:"EditMaxWalletAmount",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(a.maxWalletAmount),f=b(""),c=b(!1),T=b(!1);async function k(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(!e.value){d.error(t("amountEmpty"));return}if(e.value.replace(".","").length>34){d.error(t("amountOver"));return}let v=e.value.split(".");if(v[1]&&v[1].length>a.decimals){d.error(t("amountOver"));return}c.value=!0;try{const r=await $.wallet.metamask.contract(a.tokenAddress,a.abi);let m=await r.changeWalletLimit(le(e.value,a.decimals));f.value=m.hash,T.value=!0,m.wait().then(async h=>{if(h.status===1){d.success(t("upChainSuccessfully"));let C=await r.maxWalletAmount();a.maxWalletAmount=U(C.toString(),a.decimals),c.value=!1,n("operateSuccess")}})}catch(r){c.value=!1;const m=$.wallet.metamask.parseError(r);d.error(t(m))}finally{}}return(v,r)=>{const m=P("el-input"),h=P("el-button");return w(),_("div",Ot,[i("div",Rt,[i("div",Et,s(v.$t("walletAmount")),1),p(m,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":r[0]||(r[0]=C=>e.value=C),placeholder:v.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Ht,[p(h,{class:"btn-gradient btn-block",loading:c.value,onClick:k},{default:S(()=>[B(s(v.$t("submit")),1)]),_:1},8,["loading"])]),p(G,{txHash:f.value,modelValue:T.value},null,8,["txHash","modelValue"])])}}},Dt={class:"transfer"},Kt={class:"dlg-item"},qt={class:"dlg-item-title"},jt={class:"dlg-item"},zt={class:"dlg-item-title"},Xt={class:"dlg-bottom"},Jt={__name:"EditFundAddress",emits:["operateSuccess"],setup(A,{emit:n}){const{t}=X(),g=J(),a=Q(),e=b(""),f=b(!1),c=b(!1),T=b(""),k=K(()=>a.fundAddress);async function v(){if(!g.isConnecting){d.error(t("pleaseConnectWallet"));return}if(T.value=T.value.trim(),!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(T.value)){d.error(t("trueFormat"));return}if(T.value.toLowerCase()==k.value.toLowerCase()){d.error(t("transferConsistent"));return}c.value=!0;try{const r=await $.wallet.metamask.contract(a.tokenAddress,a.abi),m=await r.setFundAddress(T.value);d.success(t("submitSuccess")),e.value=m.hash,f.value=!0,await m.wait(),a.fundAddress=(await r.fundAddress()).toLowerCase(),n("operateSuccess"),d.success(t("upChainSuccessfully"))}catch(r){console.log(r),r.info&&r.info.error&&r.info.error.code===4001?d.error(t("userCancelOperate")):r.error&&r.error.message&&r.error.message=="Canceled"?d.error(t("userCancelOperate")):d.error(t("transferFail"))}finally{c.value=!1}}return(r,m)=>{const h=P("el-input"),C=P("el-button");return w(),_("div",Dt,[i("div",Kt,[i("div",qt,s(r.$t("currentFundAddress")),1),p(h,{class:"ipt-block",disabled:"",modelValue:k.value,"onUpdate:modelValue":m[0]||(m[0]=V=>k.value=V)},null,8,["modelValue"])]),i("div",jt,[i("div",zt,s(r.$t("newFundAddress")),1),p(h,{class:"ipt-block",modelValue:T.value,"onUpdate:modelValue":m[1]||(m[1]=V=>T.value=V),placeholder:r.$t("input")},null,8,["modelValue","placeholder"])]),i("div",Xt,[p(C,{class:"btn-gradient btn-block",loading:c.value,onClick:v},{default:S(()=>[B(s(r.$t("submit")),1)]),_:1},8,["loading"])]),p(G,{txHash:e.value,modelValue:f.value},null,8,["txHash","modelValue"])])}}};const Gt={class:"token-detail"},Qt={class:"content"},Yt={class:"top"},Zt={class:"small-title"},en={class:"left"},tn={class:"right"},nn={class:"left"},an={class:"right"},sn={key:0},ln={key:1},un={key:2},on={key:3},rn={key:4},pn={class:"left"},dn={class:"right"},yn={class:"left"},mn={class:"right"},cn={class:"left"},bn={class:"right"},fn={class:"left"},vn={class:"right"},Tn={class:"left"},wn={class:"right"},hn={key:0},_n={class:"left"},gn={class:"right"},kn={class:"left"},Mn={class:"right"},Fn={key:1},Sn={class:"left"},Ln={class:"right"},An={key:2},$n={class:"left"},Cn={class:"right"},xn={key:0},In={class:"small-title"},Bn={class:"model-manage"},Wn={class:"left"},Vn={class:"right"},Pn={key:1},Nn={class:"small-title"},On={key:0,class:"operate-item"},Rn={class:"left"},En={class:"right"},Hn={key:1,class:"operate-item"},Un={class:"left"},Dn={class:"right"},Kn={key:2,class:"operate-item"},qn={class:"left"},jn={class:"right"},zn={key:3,class:"operate-item"},Xn={class:"left"},Jn={key:0,class:"right"},Gn={key:1,class:"right"},Qn={key:4,class:"operate-item"},Yn={class:"left"},Zn={class:"right"},ea={key:5,class:"operate-item"},ta={class:"left"},na={class:"right"},aa={key:6,class:"operate-item"},ia={class:"left"},sa={class:"right"},la={key:7,class:"operate-item"},ua={class:"left"},oa={class:"right"},ra={key:8,class:"operate-item"},pa={class:"left"},da={class:"right"},ya={class:"small-title"},ma={class:"operate-item"},ca={class:"left"},ba={class:"right"},fa={class:"operate-item"},va={class:"left"},Ta={class:"right"},wa={class:"operate"},ha={__name:"Manage",setup(A){const{t:n}=X(),t=ve(),g=Te(),a=J(),e=Q(),f=b(!1),c=b(!1),T=b(!1),k=b(!1),v=b(!1),r=b(!1),m=b(!1),h=b(!1),C=b(!1),V=b(!1),E=b(!1),M=b("");let F=t.params.deployerId,N=t.params.chain,D=t.params.tokenAddress;const O=K(()=>a.walletAddress.toLowerCase()===e.owner.toLowerCase());(F!=e.deployerId||D!=e.tokenAddress)&&(e.$reset(),e.init(t.params.deployerId,t.params.tokenAddress),te());const ee=K(()=>{if(e.deployerId==1)return o(e.buyFundFee).plus(e.buyLPFee).plus(e.buyBurnFee);if(e.deployerId==2||e.deployerId==3)return o(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee);if(e.deployerId==4)return o(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee).plus(e.buyBurnFee)}),j=K(()=>{if(e.deployerId==1)return o(e.sellFundFee).plus(e.sellLPFee).plus(e.sellBurnFee);if(e.deployerId==2||e.deployerId==3)return o(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee);if(e.deployerId==4)return o(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee).plus(e.sellBurnFee)});async function te(){e.deployerId==0?await e.getFreeTaxTokenInfo(e.tokenAddress):e.deployerId==1?await e.getFeeTokenInfo(e.tokenAddress):e.deployerId==2?await e.getDividendSelfTokenInfo(e.tokenAddress):e.deployerId==3?await e.getAddPoolDividendTokenInfo(e.tokenAddress):e.deployerId==4&&await e.getDividendTokenInfo(e.tokenAddress)}async function ne(){if(!a.isConnecting){d.error(n("pleaseConnectWallet"));return}if(!c.value){if(!O.value){d.error(n("notHolder"));return}if(!e.tradeStart){c.value=!0;try{const u=await $.wallet.metamask.contract(e.tokenAddress,e.abi);let y;e.deployerId!=4?y=await u.startTrade():y=await u.launch(),await y.wait(),d.success(n("tradeOpening")),e.tradeStart=!0}catch(u){console.log(u.info);const y=$.wallet.metamask.parseError(u);d.error(n(y))}finally{c.value=!1}}}}async function q(){if(!a.isConnecting){d.error(n("pleaseConnectWallet"));return}if(!k.value){if(!O.value){d.error(n("notHolder"));return}if(e.enableSwapLimit){k.value=!0;try{await(await(await $.wallet.metamask.contract(e.tokenAddress,e.abi)).disableSwapLimit()).wait(),d.success(n("closeSwapLimit")),e.enableSwapLimit=!1,e.maxSwapAmount=0}catch(u){console.log(u.info);const y=$.wallet.metamask.parseError(u);d.error(n(y))}finally{k.value=!1}}}}async function I(){if(!a.isConnecting){d.error(n("pleaseConnectWallet"));return}if(!r.value){if(!O.value){d.error(n("notHolder"));return}if(e.enableWalletLimit){r.value=!0;try{await(await(await $.wallet.metamask.contract(e.tokenAddress,e.abi)).disableWalletLimit()).wait(),d.success(n("closeWalletLimit")),e.enableWalletLimit=!1,e.maxWalletAmount=0}catch(u){console.log(u.info);const y=$.wallet.metamask.parseError(u);d.error(n(y))}finally{r.value=!1}}}}function x(){ge.confirm(n("giveUpConfirmInfo"),"",{confirmButtonText:n("confirm"),cancelButtonText:n("thinkAgain"),type:"warning",autofocus:!1,beforeClose:async(u,y,H)=>{y.confirmButtonLoading=!0,u=="confirm"&&await Z(),y.confirmButtonLoading=!1,H()}}).then(()=>{}).catch(()=>{})}async function Z(){if(!a.isConnecting){d.error(n("pleaseConnectWallet"));return}try{const u=await $.wallet.metamask.contract(e.tokenAddress,e.abi);let y=await u.renounceOwnership();M.value=y.hash,E.value=!0,y.wait().then(async H=>{H.status===1&&(d.success(n("upChainSuccessfully")),e.owner=await u.owner())})}catch(u){const y=$.wallet.metamask.parseError(u);d.error(n(y))}finally{}}function R(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function ye(){g.push("/lock/create/token")}async function me(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e.tokenAddress,symbol:e.symbol,decimals:e.decimals,image:""}}})}catch(u){console.log(u),u.info&&u.info.error&&u.info.error.code===4001?d.error(n("userCancelOperate")):u.error&&u.error.message&&u.error.message=="Canceled"?d.error(n("userCancelOperate")):d.error(n("unkonwError"))}}return(u,y)=>{const H=P("el-button"),ie=P("el-switch"),Y=P("el-dialog"),ce=we("loading");return w(),_("div",Gt,[p(Fe),he((w(),_("div",Qt,[i("ul",null,[i("li",Yt,[p(Se,{class:"token-name",symbol:l(e).symbol,name:l(e).name,bigIcon:l(ke)(l(N).toLowerCase(),l(e).tokenAddress.toLowerCase()),smallIcon:l(re)(l(N).toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),i("div",Zt,s(u.$t("tokenInformation")),1),i("ul",null,[i("li",null,[i("div",en,s(u.$t("chain")),1),i("div",tn,[p(_e,{icon:l(re)(l(N).toLowerCase()),text:l(Me).chainList.find(L=>L.chain==l(N).toLowerCase()).chainShow},null,8,["icon","text"])])]),i("li",null,[i("div",nn,s(u.$t("template")),1),i("div",an,[l(e).deployerId==0?(w(),_("span",sn,s(u.$t("freeTax")),1)):l(e).deployerId==1?(w(),_("span",ln,s(u.$t("feeToken")),1)):l(e).deployerId==2?(w(),_("span",un,s(u.$t("selfDividendToken")),1)):l(e).deployerId==3?(w(),_("span",on,s(u.$t("addPoolDividend")),1)):l(e).deployerId==4?(w(),_("span",rn,s(u.$t("dividendToken")),1)):W("",!0)])]),i("li",null,[i("div",pn,s(u.$t("tokenAddress")),1),i("div",dn,[p(ae,{text:l(e).tokenAddress,smallText:l(e).tokenAddress},null,8,["text","smallText"])])]),i("li",null,[i("div",yn,s(u.$t("tokenName")),1),i("div",mn,s(l(e).name),1)]),i("li",null,[i("div",cn,s(u.$t("tokenSymbol")),1),i("div",bn,s(l(e).symbol),1)]),i("li",null,[i("div",fn,s(u.$t("tokenPrecision")),1),i("div",vn,s(l(e).decimals),1)]),i("li",null,[i("div",Tn,s(u.$t("tokenAmount")),1),i("div",wn,s(l(pe)(l(e).totalSupply)),1)]),l(e).deployerId!=2&&l(e).deployerId!=4?(w(),_("li",hn,[i("div",_n,s(u.$t("isMintToken")),1),i("div",gn,s(l(e).canMint?u.$t("yes"):u.$t("no")),1)])):W("",!0),i("li",null,[i("div",kn,s(u.$t("ownerAddr")),1),i("div",Mn,[p(ae,{text:l(e).owner,smallText:l(e).owner},null,8,["text","smallText"])])]),l(e).deployerId==3||l(e).deployerId==4?(w(),_("li",Fn,[i("div",Sn,s(u.$t("fundAddress")),1),i("div",Ln,[p(ae,{text:l(e).rewardToken,smallText:l(e).rewardToken},null,8,["text","smallText"])])])):W("",!0),l(e).deployerId==3||l(e).deployerId==4?(w(),_("li",An,[i("div",$n,s(u.$t("fundAddressName")),1),i("div",Cn,s(l(e).rewardTokenName)+" ("+s(l(e).rewardTokenSymbol)+") ",1)])):W("",!0)]),l(e).canMint&&O.value?(w(),_("div",xn,[i("div",In,s(u.$t("economicManagement")),1),i("div",Bn,[i("div",Wn,s(u.$t("currentIssuedAmount"))+"：",1),i("div",Vn,[B(s(l(pe)(l(e).totalSupply)),1),p(H,{class:"mint-btn",type:"primary",onClick:y[0]||(y[0]=L=>f.value=!0)},{default:S(()=>[B(s(u.$t("mint")),1)]),_:1})])])])):W("",!0),l(e).deployerId!=0&&(l(e).enableManualStartTrade||l(e).enableChangeTax||l(e).enableWhiteList)?(w(),_("div",Pn,[i("div",Nn,s(u.$t("tradeManage")),1),i("ul",null,[l(e).deployerId!=0&&l(e).enableManualStartTrade?(w(),_("li",On,[i("div",Rn,s(u.$t("openTrade")),1),i("div",En,[p(ie,{"model-value":l(e).tradeStart,disabled:l(e).tradeStart,loading:c.value,onClick:y[1]||(y[1]=L=>ne())},null,8,["model-value","disabled","loading"])])])):W("",!0),l(e).deployerId!=0&&l(e).enableKillBlock?(w(),_("li",Hn,[i("div",Un,s(u.$t("autoKillBlockNum")),1),i("div",Dn,s(l(e).killBlock),1)])):W("",!0),l(e).deployerId!=0&&l(e).enableChangeTax?(w(),_("li",Kn,[i("div",qn,s(u.$t("taxEdit")),1),i("div",jn,[i("span",null,s(u.$t("buy"))+" "+s(ee.value)+"%"+s(u.$t("sell"))+" "+s(j.value)+"%",1),p(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:y[2]||(y[2]=L=>C.value=!0)},{default:S(()=>[B(s(u.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),l(e).deployerId!=0&&l(e).enableWhiteList?(w(),_("li",zn,[i("div",Xn,s(u.$t("whiteList")),1),l(e).deployerId!=4?(w(),_("div",Jn,[i("span",null,s(l(e).whiteList.length),1),p(H,{class:"btn",key:"primary",disabled:!O.value,type:"primary",link:"",onClick:y[3]||(y[3]=L=>T.value=!0)},{default:S(()=>[B(s(u.$t("add")),1)]),_:1},8,["disabled"])])):(w(),_("div",Gn,[p(H,{class:"btn",key:"primary",disabled:!O.value,type:"primary",link:"",onClick:y[4]||(y[4]=L=>T.value=!0)},{default:S(()=>[B(s(u.$t("add"))+"/"+s(u.$t("remove")),1)]),_:1},8,["disabled"])]))])):W("",!0),l(e).deployerId!=0?(w(),_("li",Qn,[i("div",Yn,s(u.$t("swapLimit")),1),i("div",Zn,[p(ie,{"model-value":l(e).enableSwapLimit,disabled:!l(e).enableSwapLimit||!O.value,loading:k.value,onClick:y[5]||(y[5]=L=>q())},null,8,["model-value","disabled","loading"])])])):W("",!0),l(e).deployerId!=0&&l(e).enableSwapLimit?(w(),_("li",ea,[i("div",ta,s(u.$t("swapAmount")),1),i("div",na,[i("span",null,s(l(e).maxSwapAmount),1),p(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:y[6]||(y[6]=L=>v.value=!0)},{default:S(()=>[B(s(u.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),l(e).deployerId!=0?(w(),_("li",aa,[i("div",ia,s(u.$t("walletLimit")),1),i("div",sa,[p(ie,{"model-value":l(e).enableWalletLimit,disabled:!l(e).enableWalletLimit||!O.value,loading:r.value,onClick:y[7]||(y[7]=L=>I())},null,8,["model-value","disabled","loading"])])])):W("",!0),l(e).deployerId!=0&&l(e).enableWalletLimit?(w(),_("li",la,[i("div",ua,s(u.$t("walletAmount")),1),i("div",oa,[i("span",null,s(l(e).maxWalletAmount),1),p(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:y[8]||(y[8]=L=>m.value=!0)},{default:S(()=>[B(s(u.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),l(e).deployerId!=0?(w(),_("li",ra,[i("div",pa,s(u.$t("marketingAddress")),1),i("div",da,[i("span",null,s(l(e).fundAddress),1),p(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:y[9]||(y[9]=L=>h.value=!0)},{default:S(()=>[B(s(u.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0)])])):W("",!0),i("div",ya,s(u.$t("authorityManagement")),1),i("ul",null,[i("li",ma,[i("div",ca,s(u.$t("contractOwnership")),1),i("div",ba,[p(H,{class:"btn",key:"primary",type:"primary",link:"",disabled:!O.value,onClick:x},{default:S(()=>[B(s(u.$t("renounce")),1)]),_:1},8,["disabled"])])]),i("li",fa,[i("div",va,s(u.$t("transferOwnership")),1),i("div",Ta,[p(H,{class:"btn",key:"primary",type:"primary",link:"",disabled:!O.value,onClick:y[10]||(y[10]=L=>V.value=!0)},{default:S(()=>[B(s(u.$t("transfer")),1)]),_:1},8,["disabled"])])])]),i("div",wa,[p(H,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:R},{default:S(()=>[B(s(u.$t("LPAddOrManage")),1)]),_:1}),p(H,{class:"btn",text:"",bg:"",type:"primary",onClick:ye},{default:S(()=>[B(s(u.$t("lockToken")),1)]),_:1}),l(a).walletType=="metamask"?(w(),se(H,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:me},{default:S(()=>[B(s(u.$t("importToWallet")),1)]),_:1})):W("",!0)])])),[[ce,l(e).loading]]),p(Y,{modelValue:f.value,"onUpdate:modelValue":y[12]||(y[12]=L=>f.value=L),title:u.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:S(()=>[p(Ee,{onOperateSuccess:y[11]||(y[11]=L=>f.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:C.value,"onUpdate:modelValue":y[14]||(y[14]=L=>C.value=L),title:u.$t("taxEdit"),"destroy-on-close":"",class:"dlg dlg-rate"},{default:S(()=>[p(bt,{onOperateSuccess:y[13]||(y[13]=L=>C.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:T.value,"onUpdate:modelValue":y[16]||(y[16]=L=>T.value=L),title:u.$t("whiteListManage"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[p(Ft,{onOperateSuccess:y[15]||(y[15]=L=>T.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:V.value,"onUpdate:modelValue":y[18]||(y[18]=L=>V.value=L),title:u.$t("transferOwnership"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[p(It,{onOperateSuccess:y[17]||(y[17]=L=>V.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:v.value,"onUpdate:modelValue":y[20]||(y[20]=L=>v.value=L),title:u.$t("editSwapAmount"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[p(Nt,{onOperateSuccess:y[19]||(y[19]=L=>v.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:m.value,"onUpdate:modelValue":y[22]||(y[22]=L=>m.value=L),title:u.$t("editWalletAmount"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[p(Ut,{onOperateSuccess:y[21]||(y[21]=L=>m.value=!1)})]),_:1},8,["modelValue","title"]),p(Y,{modelValue:h.value,"onUpdate:modelValue":y[24]||(y[24]=L=>h.value=L),title:u.$t("editFundAddress"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[p(Jt,{onOperateSuccess:y[23]||(y[23]=L=>h.value=!1)})]),_:1},8,["modelValue","title"]),p(G,{txHash:M.value,modelValue:E.value},null,8,["txHash","modelValue"])])}}},Ca=de(ha,[["__scopeId","data-v-08f75608"]]);export{Ca as default};
