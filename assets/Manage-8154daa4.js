import{N as we,b as A,C as r,i as X,u as J,j as f,e as P,o as h,c as g,f as i,t as u,h as d,l as s,y as S,A as B,E as y,v as K,z as W,_ as be,F as ue,g as oe,B as se,p as he,d as _e,a as ge,K as ke,L as Me,O as Fe,P as Se,q as Le,m as re,x as Ie,Q as pe}from"./index-fbe4e919.js";import{B as Ae}from"./Back-a57b2cb5.js";import{C as ae,T as $e}from"./CopyText-b73d26c7.js";import{_ as Q}from"./OperateSuccessDialog-e831244e.js";import{f as U,a as le}from"./units-4a879e1d.js";import{R as z}from"./Rate-2e10f38b.js";import"./TokenIcon-bf3d2694.js";/* empty css                                                          */import"./DoubleToken-0be4bc19.js";const de=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"deadAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCirculatingSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ye=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"_allowances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IPancakeRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_transferBlackList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],me=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"}],name:"FailedSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapAndLiquifyEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTBuyFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LP_MKTSellFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"currencyIsEth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableRewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"},{internalType:"bool",name:"isSell",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"setSwapAndLiquifyEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapAndLiquifyEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],ce=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidity",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_FeePercentageBase",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_rewardList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_rewardTokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract ISwapRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tokenDistributor",outputs:[{internalType:"contract TokenDistributor",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"o",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"batchBots",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canMint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"currency",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"excludeHolder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeWhiteListCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getfeeWhiteList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"holderIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"holderRewardCondition",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"holders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMaxEatExempt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"limitEnable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minimumTokensBeforeSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"processRewardWaitBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPath",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_currency",type:"address"},{internalType:"address",name:"_router",type:"address"}],name:"setCurrency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setExcludeHolder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setHolderRewardCondition",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLimit",type:"uint256"}],name:"setNumTokensBeforeSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setProcessRewardWaitBlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"bool",name:"exempt",type:"bool"}],name:"setisMaxEatExempt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"a",type:"uint256"}],name:"setkb",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradeStart",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"user2blocks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],Ce=[{inputs:[{internalType:"string[]",name:"stringParams",type:"string[]"},{internalType:"address[]",name:"addressParams",type:"address[]"},{internalType:"uint256[]",name:"numberParams",type:"uint256[]"},{internalType:"bool[]",name:"boolParams",type:"bool[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"Failed_addLiquidityETH",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForETHSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[],name:"Failed_swapExactTokensForTokensSupportingFeeOnTransferTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenFactory",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"InformTokenFactoryFailed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"iterations",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claims",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastProcessedIndex",type:"uint256"},{indexed:!0,internalType:"bool",name:"automatic",type:"bool"},{indexed:!1,internalType:"uint256",name:"gas",type:"uint256"},{indexed:!0,internalType:"address",name:"processor",type:"address"}],name:"ProcessedDividendTracker",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SendDividends",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"_buyBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_buyRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_feeWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_mainPair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellBurnFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellFundFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellLPFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_sellRewardFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_swapPairList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouter",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_swapRouterAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"buy_totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"changeWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"customs",type:"uint256[]"}],name:"completeCustoms",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"deadWallet",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableChangeTax",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableSwapLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWalletLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"dividendToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"dividendTracker",outputs:[{internalType:"contract ETHBackDividendTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableChangeTax",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableKillBlock",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableManualStartTrade",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableSwapLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWalletLimit",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"enableWhiteList",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"excludeFromDividends",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"fundAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"gasForProcessing",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"}],name:"initTokenFactory",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isLaunch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"kb",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"launch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"maxSwapAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"mustHoldNum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gas",type:"uint256"}],name:"processDividendTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"sell_totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"addr",type:"address[]"},{internalType:"bool",name:"enable",type:"bool"}],name:"setFeeWhiteList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"wallet",type:"address"}],name:"setFundAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"},{internalType:"bool",name:"enable",type:"bool"}],name:"setSwapPairList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startTradeBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"swapTokensAtAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],G=we("ctManageStore",{state:()=>({loading:!1,deployerId:-1,tokenAddress:"",abi:null,owner:"",name:"",symbol:"",totalSupply:"",decimals:0,rewardToken:"",rewardTokenName:"",rewardTokenSymbol:"",buyFundFee:0,buyLPFee:0,buyBurnFee:0,buyRewardFee:0,sellFundFee:0,sellLPFee:0,sellBurnFee:0,sellRewardFee:0,enableSwapLimit:!1,maxSwapAmount:0,enableWalletLimit:!1,maxWalletAmount:0,fundAddress:"",canMint:!1,enableManualStartTrade:!1,tradeStart:!1,enableWhiteList:!1,enableChangeTax:!1,enableKillBlock:!1,killBlock:0,whiteListCount:0,whiteList:[]}),actions:{init(I,n){switch(this.deployerId=Number(I),this.tokenAddress=n.toLowerCase(),this.deployerId){case 0:this.abi=de;break;case 1:this.abi=ye;break;case 2:this.abi=me;break;case 3:this.abi=ce;break;case 4:this.abi=Ce;break;case 5:this.abi=de;break;case 6:this.abi=ye;break;case 7:this.abi=me;break;case 8:this.abi=ce;break;default:this.abi=null}},async getFreeTaxTokenInfo(I){this.loading=!0;const n=await A.wallet.metamask.contract(I,this.abi);let a=[n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner()];this.deployerId<5&&a.push(n.canMint()),Promise.all(a).then(l=>{this.name=l[0],this.symbol=l[1],this.decimals=Number(l[2]),this.totalSupply=U(l[3].toString(),Number(this.decimals)),this.owner=l[4].toLowerCase(),this.deployerId<5&&(this.canMint=l[5])}).catch(l=>{console.log(l)}).finally(l=>{this.loading=!1})},async getWhiteList(I){try{const n=await A.wallet.metamask.contract(I,this.abi);this.whiteListCount=await n.feeWhiteListCount();let a=[];this.whiteListCount>0&&(a=await n.getfeeWhiteList(0,Number(this.whiteListCount)-1)),this.whiteList=a.map(l=>l.toLowerCase())}catch(n){throw n}},async getRewardTokenInfo(I){try{const n=await A.wallet.metamask.contractERC20(I);Promise.all([n.name(),n.symbol()]).then(a=>{console.log(a),this.rewardTokenName=a[0],this.rewardTokenSymbol=a[1]}).catch(a=>{console.log(a)})}catch(n){console.log(n)}},async getTokenFee(I){const n=await A.wallet.metamask.contract(I,this.abi);let a=[];this.deployerId==1||this.deployerId==6?a=[n._buyFundFee(),n._buyLPFee(),n._buyBurnFee(),n._sellFundFee(),n._sellLPFee(),n._sellBurnFee()]:this.deployerId==2||this.deployerId==3||this.deployerId==7||this.deployerId==8?a=[n._buyFundFee(),n._buyLPFee(),n._buyRewardFee(),n._sellFundFee(),n._sellLPFee(),n._sellRewardFee()]:this.deployerId==4&&(a=[n._buyFundFee(),n._buyLPFee(),n._buyRewardFee(),n._buyBurnFee(),n._sellFundFee(),n._sellLPFee(),n._sellRewardFee(),n._sellBurnFee()]),Promise.all(a).then(l=>{console.log(l),this.deployerId==1||this.deployerId==6?(this.buyFundFee=r(l[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=r(l[1]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=r(l[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=r(l[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=r(l[4]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=r(l[5]).div(1e4).multipliedBy(100).toString()):this.deployerId==2||this.deployerId==3||this.deployerId==7||this.deployerId==8?(this.buyFundFee=r(l[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=r(l[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=r(l[2]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=r(l[3]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=r(l[4]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=r(l[5]).div(1e4).multipliedBy(100).toString()):this.deployerId==4&&(this.buyFundFee=r(l[0]).div(1e4).multipliedBy(100).toString(),this.buyLPFee=r(l[1]).div(1e4).multipliedBy(100).toString(),this.buyRewardFee=r(l[2]).div(1e4).multipliedBy(100).toString(),this.buyBurnFee=r(l[3]).div(1e4).multipliedBy(100).toString(),this.sellFundFee=r(l[4]).div(1e4).multipliedBy(100).toString(),this.sellLPFee=r(l[5]).div(1e4).multipliedBy(100).toString(),this.sellRewardFee=r(l[6]).div(1e4).multipliedBy(100).toString(),this.sellBurnFee=r(l[7]).div(1e4).multipliedBy(100).toString())}).catch(l=>{console.log(l)})},async getFeeTokenInfo(I){this.loading=!0,console.log(this.abi);const n=await A.wallet.metamask.contract(I,this.abi);let a=[n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()];this.deployerId<5&&a.push(n.canMint()),Promise.all(a).then(async l=>{this.name=l[0],this.symbol=l[1],this.decimals=Number(l[2]),this.totalSupply=U(l[3].toString(),Number(this.decimals)),this.owner=l[4].toLowerCase(),this.enableManualStartTrade=l[5],this.tradeStart=l[6],this.enableWhiteList=l[7],this.enableChangeTax=l[8],this.enableKillBlock=l[9],this.killBlock=l[10],this.enableSwapLimit=l[11],this.maxSwapAmount=U(l[12].toString(),Number(this.decimals)),this.enableWalletLimit=l[13],this.maxWalletAmount=U(l[14].toString(),Number(this.decimals)),this.fundAddress=l[15].toLowerCase(),this.deployerId<5&&(this.canMint=l[16]),await this.getTokenFee(I),await this.getWhiteList(I)}).catch(l=>{console.log(l)}).finally(l=>{this.loading=!1})},async getDividendSelfTokenInfo(I){this.loading=!0;const n=await A.wallet.metamask.contract(I,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async a=>{this.name=a[0],this.symbol=a[1],this.decimals=Number(a[2]),this.totalSupply=U(a[3].toString(),Number(this.decimals)),this.owner=a[4].toLowerCase(),this.enableManualStartTrade=a[5],this.tradeStart=a[6],this.enableWhiteList=a[7],this.enableChangeTax=a[8],this.enableKillBlock=a[9],this.killBlock=a[10],this.enableSwapLimit=a[11],this.maxSwapAmount=U(a[12].toString(),Number(this.decimals)),this.enableWalletLimit=a[13],this.maxWalletAmount=U(a[14].toString(),Number(this.decimals)),this.fundAddress=a[15].toLowerCase(),await this.getTokenFee(I),await this.getWhiteList(I)}).catch(a=>{console.log(a)}).finally(a=>{this.loading=!1})},async getAddPoolDividendTokenInfo(I){this.loading=!0;const n=await A.wallet.metamask.contract(I,this.abi);let a=[n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.tradeStart(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.rewardToken(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()];this.deployerId<5&&a.push(n.canMint()),Promise.all(a).then(async l=>{console.log(l),this.name=l[0],this.symbol=l[1],this.decimals=Number(l[2]),this.totalSupply=U(l[3].toString(),Number(this.decimals)),this.owner=l[4].toLowerCase(),this.enableManualStartTrade=l[5],this.tradeStart=l[6],this.enableWhiteList=l[7],this.enableChangeTax=l[8],this.enableKillBlock=l[9],this.killBlock=l[10],this.rewardToken=l[11].toLowerCase(),this.enableSwapLimit=l[12],this.maxSwapAmount=U(l[13].toString(),Number(this.decimals)),this.enableWalletLimit=l[14],this.maxWalletAmount=U(l[15].toString(),Number(this.decimals)),this.fundAddress=l[16].toLowerCase(),this.deployerId<5&&(this.canMint=l[17]),await this.getTokenFee(I),await this.getWhiteList(I),await this.getRewardTokenInfo(this.rewardToken)}).catch(l=>{console.log(l)}).finally(l=>{this.loading=!1})},async getDividendTokenInfo(I){this.loading=!0;const n=await A.wallet.metamask.contract(I,this.abi);Promise.all([n.name(),n.symbol(),n.decimals(),n.totalSupply(),n.owner(),n.enableManualStartTrade(),n.isLaunch(),n.enableWhiteList(),n.enableChangeTax(),n.enableKillBlock(),n.kb(),n.dividendToken(),n.enableSwapLimit(),n.maxSwapAmount(),n.enableWalletLimit(),n.maxWalletAmount(),n.fundAddress()]).then(async a=>{console.log(a),this.name=a[0],this.symbol=a[1],this.decimals=Number(a[2]),this.totalSupply=U(a[3].toString(),Number(this.decimals)),this.owner=a[4].toLowerCase(),this.enableManualStartTrade=a[5],this.tradeStart=a[6],this.enableWhiteList=a[7],this.enableChangeTax=a[8],this.enableKillBlock=a[9],this.killBlock=a[10],this.rewardToken=a[11].toLowerCase(),this.enableSwapLimit=a[12],this.maxSwapAmount=U(a[13].toString(),Number(this.decimals)),this.enableWalletLimit=a[14],this.maxWalletAmount=U(a[15].toString(),Number(this.decimals)),this.fundAddress=a[16].toLowerCase(),await this.getTokenFee(I),await this.getRewardTokenInfo(this.rewardToken)}).catch(a=>{console.log(a)}).finally(a=>{this.loading=!1})}}}),xe={class:"mint"},Be={class:"dlg-item"},We={class:"dlg-item-title"},Ve={class:"dlg-item"},Pe={class:"dlg-item-title"},Ne={class:"dlg-item"},Oe={class:"dlg-item-title"},Re={class:"dlg-bottom"},Ee={__name:"Mint",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(""),v=f(l.walletAddress),b=f(""),w=f(!1),k=f(!1);function T(){/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(v.value)||y.error(a("addressWrong"))}async function p(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(!e.value){y.error(a("amountEmpty"));return}if(e.value.replace(".","").length>34){y.error(a("amountOver"));return}let c=e.value.split(".");if(c[1]&&c[1].length>t.decimals){y.error(a("amountOver"));return}if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(v.value)){y.error(a("addressWrong"));return}w.value=!0;try{const _=await A.wallet.metamask.contract(t.tokenAddress,t.abi);let $=await _.mint(v.value,le(e.value,t.decimals));b.value=$.hash,k.value=!0,$.wait().then(async V=>{if(V.status===1){y.success(a("upChainSuccessfully"));let E=await _.totalSupply();t.totalSupply=U(E.toString(),t.decimals),w.value=!1,n("operateSuccess")}})}catch(_){w.value=!1;const $=A.wallet.metamask.parseError(_);y.error(a($))}finally{}}return(c,_)=>{const $=P("el-input"),V=P("el-button");return h(),g("div",xe,[i("div",Be,[i("div",We,u(c.$t("currentTotal")),1),d($,{class:"ipt-block",disabled:"",modelValue:s(t).totalSupply,"onUpdate:modelValue":_[0]||(_[0]=E=>s(t).totalSupply=E)},null,8,["modelValue"])]),i("div",Ve,[i("div",Pe,u(c.$t("mintTokenAmount")),1),d($,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":_[1]||(_[1]=E=>e.value=E),placeholder:c.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Ne,[i("div",Oe,u(c.$t("receivingAddress")),1),d($,{class:"ipt-block",modelValue:v.value,"onUpdate:modelValue":_[2]||(_[2]=E=>v.value=E),onBlur:T,placeholder:c.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Re,[d(V,{class:"btn-gradient btn-block",loading:w.value,onClick:p},{default:S(()=>[B(u(c.$t("submitAdd")),1)]),_:1},8,["loading"])]),d(Q,{txHash:b.value,modelValue:k.value},null,8,["txHash","modelValue"])])}}},He={class:"edit-rate"},Ue={class:"dlg-item"},De={class:"dlg-item-title"},Ke={key:0},qe={key:1},je={class:"dlg-item-value"},ze={class:"rate-item"},Xe={class:"rate-item-title"},Je={class:"rate-item"},Qe={class:"rate-item-title"},Ge={key:0,class:"rate-item"},Ye={class:"rate-item-title"},Ze={key:1,class:"rate-item"},et={class:"rate-item-title"},tt={class:"dlg-item"},nt={class:"dlg-item-title"},at={key:0},it={key:1},st={class:"dlg-item-value"},lt={class:"rate-item"},ut={class:"rate-item-title"},ot={class:"rate-item"},rt={class:"rate-item-title"},pt={key:0,class:"rate-item"},dt={class:"rate-item-title"},yt={key:1,class:"rate-item"},mt={class:"rate-item-title"},ct={class:"dlg-bottom"},bt={__name:"EditTax",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(!1),v=f(t.buyFundFee),b=f(t.buyLPFee),w=f(t.buyBurnFee),k=f(t.buyRewardFee),T=f(t.sellFundFee),p=f(t.sellLPFee),c=f(t.sellBurnFee),_=f(t.sellRewardFee),$=f(""),V=f(!1),E=K(()=>{if(t.deployerId==1||t.deployerId==6)return r(v.value).plus(b.value).plus(w.value);if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return r(v.value).plus(b.value).plus(k.value);if(t.deployerId==4)return r(v.value).plus(b.value).plus(k.value).plus(w.value)}),M=K(()=>{if(t.deployerId==1||t.deployerId==6)return r(T.value).plus(p.value).plus(c.value);if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return r(T.value).plus(p.value).plus(_.value);if(t.deployerId==4)return r(T.value).plus(p.value).plus(_.value).plus(c.value)}),F=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(b.value).minus(w.value));if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return Number(r(20).minus(b.value).minus(k.value));if(t.deployerId==4)return Number(r(25).minus(b.value).minus(k.value).minus(w.value))}),N=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(v.value).minus(w.value));if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return Number(r(20).minus(v.value).minus(k.value));if(t.deployerId==4)return Number(r(25).minus(v.value).minus(k.value).minus(w.value))}),D=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(v.value).minus(b.value));if(t.deployerId==4)return Number(r(25).minus(v.value).minus(b.value).minus(k.value))}),O=K(()=>{if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return Number(r(20).minus(v.value).minus(b.value).toNumber());if(t.deployerId==4)return Number(r(25).minus(v.value).minus(b.value).minus(w.value))}),ee=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(p.value).minus(c.value));if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return Number(r(20).minus(p.value).minus(_.value));if(t.deployerId==4)return Number(r(25).minus(p.value).minus(_.value).minus(c.value))}),j=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(T.value).minus(c.value));if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return Number(r(20).minus(T.value).minus(_.value));if(t.deployerId==4)return Number(r(25).minus(T.value).minus(_.value).minus(c.value))}),te=K(()=>{if(t.deployerId==1||t.deployerId==6)return Number(r(20).minus(T.value).minus(p.value));if(t.deployerId==4)return Number(r(25).minus(T.value).minus(p.value).minus(_.value))}),ne=K(()=>{if(t.deployerId==2||t.deployerId==3||t.deployerId==7||t.deployerId==8)return r(20).minus(T.value).minus(p.value).toNumber();if(t.deployerId==4)return Number(r(25).minus(T.value).minus(p.value).minus(c.value))});async function q(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(t.deployerId==1||t.deployerId==6){if(r(v.value).plus(w.value).plus(b.value).plus(T.value).plus(c.value).plus(p.value).lte(0)){y.error(a("taxlimit1"));return}}else if(t.deployerId==2||t.deployerId==7){if(r(v.value).plus(b.value).plus(T.value).plus(p.value).lte(0)){y.error(a("taxlimit2"));return}}else if((t.deployerId==3||t.deployerId==8)&&r(v.value).plus(k.value).plus(b.value).plus(T.value).plus(_.value).plus(p.value).lte(0)){y.error(a("taxlimit1"));return}e.value=!0;try{const x=await A.wallet.metamask.contract(t.tokenAddress,t.abi);let C;t.deployerId==1||t.deployerId==6?C=[r(b.value).div(100).multipliedBy(1e4).toNumber(),r(w.value).div(100).multipliedBy(1e4).toNumber(),r(v.value).div(100).multipliedBy(1e4).toNumber(),r(p.value).div(100).multipliedBy(1e4).toNumber(),r(c.value).div(100).multipliedBy(1e4).toNumber(),r(T.value).div(100).multipliedBy(1e4).toNumber()]:t.deployerId==2||t.deployerId==7?C=[r(b.value).div(100).multipliedBy(1e4).toNumber(),r(k.value).div(100).multipliedBy(1e4).toNumber(),r(v.value).div(100).multipliedBy(1e4).toNumber(),r(p.value).div(100).multipliedBy(1e4).toNumber(),r(_.value).div(100).multipliedBy(1e4).toNumber(),r(T.value).div(100).multipliedBy(1e4).toNumber()]:t.deployerId==3||t.deployerId==8?C=[r(v.value).div(100).multipliedBy(1e4).toNumber(),r(k.value).div(100).multipliedBy(1e4).toNumber(),r(b.value).div(100).multipliedBy(1e4).toNumber(),r(T.value).div(100).multipliedBy(1e4).toNumber(),r(_.value).div(100).multipliedBy(1e4).toNumber(),r(p.value).div(100).multipliedBy(1e4).toNumber()]:t.deployerId==4&&(C=[r(v.value).div(100).multipliedBy(1e4).toNumber(),r(b.value).div(100).multipliedBy(1e4).toNumber(),r(k.value).div(100).multipliedBy(1e4).toNumber(),r(w.value).div(100).multipliedBy(1e4).toNumber(),r(T.value).div(100).multipliedBy(1e4).toNumber(),r(p.value).div(100).multipliedBy(1e4).toNumber(),r(_.value).div(100).multipliedBy(1e4).toNumber(),r(c.value).div(100).multipliedBy(1e4).toNumber()]);const Z=await x.completeCustoms(C);y.success(a("submitSuccess")),$.value=Z.hash,V.value=!0,await Z.wait(),t.getTokenFee(t.tokenAddress),y.success(a("editTaxSuccessfully")),n("operateSuccess")}catch(x){const C=A.wallet.metamask.parseError(x);y.error(a(C))}finally{e.value=!1}}return(x,C)=>{const Z=P("el-button");return h(),g("div",He,[i("div",Ue,[i("div",De,[s(t).deployerId!=4?(h(),g("span",Ke,u(x.$t("editBuyTax",{buyFee:E.value,maxBuyFee:20})),1)):(h(),g("span",qe,u(x.$t("editBuyTax",{buyFee:E.value,maxBuyFee:25})),1))]),i("div",je,[i("div",ze,[i("div",Xe,u(x.$t("marketingTax")),1),d(z,{class:"rate-item-value",modelValue:v.value,"onUpdate:modelValue":C[0]||(C[0]=R=>v.value=R),max:F.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),i("div",Je,[i("div",Qe,u(x.$t("liquidityTax")),1),d(z,{class:"rate-item-value",modelValue:b.value,"onUpdate:modelValue":C[1]||(C[1]=R=>b.value=R),max:N.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),s(t).deployerId==1||s(t).deployerId==4||s(t).deployerId==6?(h(),g("div",Ge,[i("div",Ye,u(x.$t("burnTax")),1),d(z,{class:"rate-item-value",modelValue:w.value,"onUpdate:modelValue":C[2]||(C[2]=R=>w.value=R),max:D.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),s(t).deployerId==2||s(t).deployerId==3||s(t).deployerId==4||s(t).deployerId==7||s(t).deployerId==8?(h(),g("div",Ze,[i("div",et,u(x.$t("rewardTax")),1),d(z,{class:"rate-item-value",modelValue:k.value,"onUpdate:modelValue":C[3]||(C[3]=R=>k.value=R),max:O.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),i("div",tt,[i("div",nt,[s(t).deployerId!=4?(h(),g("span",at,u(x.$t("editSellTax",{sellFee:M.value,maxSellFee:20})),1)):(h(),g("span",it,u(x.$t("editSellTax",{sellFee:M.value,maxSellFee:25})),1))]),i("div",st,[i("div",lt,[i("div",ut,u(x.$t("marketingTax")),1),d(z,{class:"rate-item-value",modelValue:T.value,"onUpdate:modelValue":C[4]||(C[4]=R=>T.value=R),max:ee.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),i("div",ot,[i("div",rt,u(x.$t("liquidityTax")),1),d(z,{class:"rate-item-value",modelValue:p.value,"onUpdate:modelValue":C[5]||(C[5]=R=>p.value=R),max:j.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])]),s(t).deployerId==1||s(t).deployerId==4||s(t).deployerId==6?(h(),g("div",pt,[i("div",dt,u(x.$t("burnTax")),1),d(z,{class:"rate-item-value",modelValue:c.value,"onUpdate:modelValue":C[6]||(C[6]=R=>c.value=R),max:te.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0),s(t).deployerId==2||s(t).deployerId==3||s(t).deployerId==4||s(t).deployerId==7||s(t).deployerId==8?(h(),g("div",yt,[i("div",mt,u(x.$t("rewardTax")),1),d(z,{class:"rate-item-value",modelValue:_.value,"onUpdate:modelValue":C[7]||(C[7]=R=>_.value=R),max:ne.value,min:0,step:.1,precision:2},null,8,["modelValue","max"])])):W("",!0)])]),i("div",ct,[d(Z,{class:"btn-gradient btn-block",loading:e.value,onClick:q},{default:S(()=>[B(u(x.$t("submit")),1)]),_:1},8,["loading"])]),d(Q,{txHash:$.value,modelValue:V.value},null,8,["txHash","modelValue"])])}}};const ft={class:"mint"},vt={key:1,class:"err-info has-added"},Tt={class:"dlg-item"},wt={key:0,class:"dlg-bottom"},ht={class:"white-list-table"},_t={key:0,class:"white-list-table-title"},gt={key:1,class:"dlg-bottom"},kt={class:"operate"},Mt={__name:"WhiteList",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f([{addressAdd:"",isAdded:!1}]),v=f(!1),b=f([]),w=f(!1),k=f(""),T=f(!1);function p(M){return M&&M.trim()}function c(){e.value.push({addressAdd:"",isAdded:!1})}function _(M){e.value.splice(M,1)}async function $(M){e.value[M].addressAdd=e.value[M].addressAdd.trim();let F=e.value[M].addressAdd;if(e.value[M].isAdded=!1,!F)return;if(!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(F)){e.value[M].addressAdd="",y.error(a("addressWrong"));return}if(console.log(e.value.find(D=>D.addressAdd.toLowerCase()==F.toLowerCase())),e.value.filter(D=>D.addressAdd.toLowerCase()==F.toLowerCase()).length>1&&(e.value[M].addressAdd="",y.error(a("addressHasEntered"))),t.deployerId==4){v.value=!0,w.value=!0;const D=await A.wallet.metamask.contract(t.tokenAddress,t.abi);console.log(D),await D._feeWhiteList(F)?e.value[M].isAdded=!0:e.value[M].isAdded=!1,v.value=!1,w.value=!1}else t.whiteList.findIndex(D=>D==F.toLowerCase())!=-1?e.value[M].isAdded=!0:e.value[M].isAdded=!1}async function V(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}let M=[];for(let F in e.value)e.value[F].addressAdd&&!e.value[F].isAdded&&M.push(e.value[F].addressAdd);if(M.length==0){y.error(a("enterAddressLimit"));return}v.value=!0,console.log(M);try{const F=await A.wallet.metamask.contract(t.tokenAddress,t.abi);console.log(F);const N=await F.setFeeWhiteList(M,!0);k.value=N.hash,T.value=!0,await N.wait(),t.deployerId!=4&&(await t.getWhiteList(t.tokenAddress),b.value=[]),e.value=[{addressAdd:"",isAdded:!1}],y.success(a("addWhiteListSuccess"))}catch(F){const N=A.wallet.metamask.parseError(F);y.error(a(N))}finally{v.value=!1}}async function E(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}let M=[];if(t.deployerId==4){for(let F in e.value)e.value[F].addressAdd&&e.value[F].isAdded&&M.push(e.value[F].addressAdd);if(M.length==0){y.error(a("enterRemoveAddressLimit"));return}}else if(M=b.value,M.length==0){y.error(a("selectAddressLimit"));return}w.value=!0;try{const F=await A.wallet.metamask.contract(t.tokenAddress,t.abi);console.log(F);const N=await F.setFeeWhiteList(M,!1);console.log(N),k.value=N.hash,T.value=!0,await N.wait(),t.deployerId!=4&&(await t.getWhiteList(t.tokenAddress),b.value=[]),e.value=[{addressAdd:"",isAdded:!1}],y.success(a("removeWhiteListSuccess"))}catch(F){const N=A.wallet.metamask.parseError(F);y.error(a(N))}finally{w.value=!1}}return(M,F)=>{const N=P("CircleCloseFilled"),D=P("el-icon"),O=P("el-input"),ee=P("Plus"),j=P("el-button"),te=P("el-checkbox"),ne=P("el-checkbox-group");return h(),g("div",ft,[(h(!0),g(ue,null,oe(e.value,(q,x)=>(h(),g("div",{class:"dlg-item",key:x},[e.value.length>1?(h(),se(D,{key:0,class:"close",onClick:C=>_(x)},{default:S(()=>[d(N)]),_:2},1032,["onClick"])):W("",!0),d(O,{class:"ipt-block",clearable:"",formatter:p,onChange:C=>$(x),modelValue:e.value[x].addressAdd,"onUpdate:modelValue":C=>e.value[x].addressAdd=C,placeholder:s(a)("inputAddress")},null,8,["onChange","modelValue","onUpdate:modelValue","placeholder"]),e.value[x].addressAdd&&e.value[x].isAdded?(h(),g("div",vt,u(M.$t("addressAdded")),1)):W("",!0)]))),128)),i("div",Tt,[d(j,{class:"add-address",size:"small",onClick:F[0]||(F[0]=q=>c())},{default:S(()=>[d(D,{class:"icon"},{default:S(()=>[d(ee)]),_:1}),B(" "+u(M.$t("addAddress")),1)]),_:1})]),s(t).deployerId!=4?(h(),g("div",wt,[d(j,{class:"btn-gradient btn-block",loading:v.value,onClick:V},{default:S(()=>[B(u(M.$t("add")),1)]),_:1},8,["loading"]),i("div",ht,[s(t).whiteList.length>0?(h(),g("div",_t,[i("span",null,u(M.$t("added")),1),d(j,{class:"btn-gradient",loading:w.value,onClick:E,type:"primary",size:"small"},{default:S(()=>[B(u(M.$t("remove")),1)]),_:1},8,["loading"])])):W("",!0),d(ne,{class:"checkbox-group",modelValue:b.value,"onUpdate:modelValue":F[1]||(F[1]=q=>b.value=q)},{default:S(()=>[(h(!0),g(ue,null,oe(s(t).whiteList,(q,x)=>(h(),se(te,{class:"white-list-table-item",label:q,key:x},{default:S(()=>[d(ae,{text:q,smallText:s(he)(q)},null,8,["text","smallText"])]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])])):(h(),g("div",gt,[i("div",kt,[d(j,{class:"btn remove",loading:w.value,onClick:E},{default:S(()=>[B(u(M.$t("remove")),1)]),_:1},8,["loading"]),d(j,{class:"btn-gradient btn",loading:v.value,onClick:V},{default:S(()=>[B(u(M.$t("add")),1)]),_:1},8,["loading"])])])),d(Q,{txHash:k.value,modelValue:T.value,"onUpdate:modelValue":F[2]||(F[2]=q=>T.value=q)},null,8,["txHash","modelValue"])])}}},Ft=be(Mt,[["__scopeId","data-v-b5231e22"]]),St={class:"transfer"},Lt={class:"dlg-item"},It={class:"dlg-item-title"},At={class:"dlg-item"},$t={class:"dlg-item-title"},Ct={class:"dlg-bottom"},xt={__name:"TransferOwnership",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(""),v=f(!1),b=f(!1),w=f(t.owner),k=f("");async function T(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(k.value=k.value.trim(),!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(k.value)){y.error(a("trueFormat"));return}if(k.value==w.value){y.error(a("transferConsistent"));return}b.value=!0;try{const p=await A.wallet.metamask.contract(t.tokenAddress,t.abi),c=await p.transferOwnership(k.value);y.success(a("submitSuccess")),e.value=c.hash,v.value=!0,await c.wait(),t.owner=await p.owner(),k.value="",n("operateSuccess"),y.success(a("transferSuccess"))}catch(p){console.log(p),p.info&&p.info.error&&p.info.error.code===4001?y.error(a("userCancelOperate")):p.error&&p.error.message&&p.error.message=="Canceled"?y.error(a("userCancelOperate")):y.error(a("transferFail"))}finally{b.value=!1}}return(p,c)=>{const _=P("el-input"),$=P("el-button");return h(),g("div",St,[i("div",Lt,[i("div",It,u(p.$t("ownership")),1),d(_,{class:"ipt-block",disabled:"",modelValue:w.value,"onUpdate:modelValue":c[0]||(c[0]=V=>w.value=V)},null,8,["modelValue"])]),i("div",At,[i("div",$t,u(p.$t("transferTo")),1),d(_,{class:"ipt-block",modelValue:k.value,"onUpdate:modelValue":c[1]||(c[1]=V=>k.value=V),placeholder:p.$t("input")},null,8,["modelValue","placeholder"])]),i("div",Ct,[d($,{class:"btn-gradient btn-block",loading:b.value,onClick:T},{default:S(()=>[B(u(p.$t("submit")),1)]),_:1},8,["loading"])]),d(Q,{txHash:e.value,modelValue:v.value},null,8,["txHash","modelValue"])])}}},Bt={class:"mint"},Wt={class:"dlg-item"},Vt={class:"dlg-item-title"},Pt={class:"dlg-bottom"},Nt={__name:"EditMaxSwapAmount",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(t.maxSwapAmount),v=f(""),b=f(!1),w=f(!1);async function k(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(!e.value){y.error(a("amountEmpty"));return}if(e.value.replace(".","").length>34){y.error(a("amountOver"));return}let T=e.value.split(".");if(T[1]&&T[1].length>t.decimals){y.error(a("amountOver"));return}b.value=!0;try{const p=await A.wallet.metamask.contract(t.tokenAddress,t.abi);let c=await p.changeSwapLimit(le(e.value,t.decimals));v.value=c.hash,w.value=!0,c.wait().then(async _=>{if(_.status===1){y.success(a("upChainSuccessfully"));let $=await p.maxSwapAmount();t.maxSwapAmount=U($.toString(),t.decimals),b.value=!1,n("operateSuccess")}})}catch(p){b.value=!1;const c=A.wallet.metamask.parseError(p);y.error(a(c))}finally{}}return(T,p)=>{const c=P("el-input"),_=P("el-button");return h(),g("div",Bt,[i("div",Wt,[i("div",Vt,u(T.$t("swapAmount")),1),d(c,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":p[0]||(p[0]=$=>e.value=$),placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Pt,[d(_,{class:"btn-gradient btn-block",loading:b.value,onClick:k},{default:S(()=>[B(u(T.$t("submit")),1)]),_:1},8,["loading"])]),d(Q,{txHash:v.value,modelValue:w.value},null,8,["txHash","modelValue"])])}}},Ot={class:"mint"},Rt={class:"dlg-item"},Et={class:"dlg-item-title"},Ht={class:"dlg-bottom"},Ut={__name:"EditMaxWalletAmount",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(t.maxWalletAmount),v=f(""),b=f(!1),w=f(!1);async function k(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(!e.value){y.error(a("amountEmpty"));return}if(e.value.replace(".","").length>34){y.error(a("amountOver"));return}let T=e.value.split(".");if(T[1]&&T[1].length>t.decimals){y.error(a("amountOver"));return}b.value=!0;try{const p=await A.wallet.metamask.contract(t.tokenAddress,t.abi);let c=await p.changeWalletLimit(le(e.value,t.decimals));v.value=c.hash,w.value=!0,c.wait().then(async _=>{if(_.status===1){y.success(a("upChainSuccessfully"));let $=await p.maxWalletAmount();t.maxWalletAmount=U($.toString(),t.decimals),b.value=!1,n("operateSuccess")}})}catch(p){b.value=!1;const c=A.wallet.metamask.parseError(p);y.error(a(c))}finally{}}return(T,p)=>{const c=P("el-input"),_=P("el-button");return h(),g("div",Ot,[i("div",Rt,[i("div",Et,u(T.$t("walletAmount")),1),d(c,{class:"ipt-block",type:"number",modelValue:e.value,"onUpdate:modelValue":p[0]||(p[0]=$=>e.value=$),placeholder:T.$t("pleaseEnter")},null,8,["modelValue","placeholder"])]),i("div",Ht,[d(_,{class:"btn-gradient btn-block",loading:b.value,onClick:k},{default:S(()=>[B(u(T.$t("submit")),1)]),_:1},8,["loading"])]),d(Q,{txHash:v.value,modelValue:w.value},null,8,["txHash","modelValue"])])}}},Dt={class:"transfer"},Kt={class:"dlg-item"},qt={class:"dlg-item-title"},jt={class:"dlg-item"},zt={class:"dlg-item-title"},Xt={class:"dlg-bottom"},Jt={__name:"EditFundAddress",emits:["operateSuccess"],setup(I,{emit:n}){const{t:a}=X(),l=J(),t=G(),e=f(""),v=f(!1),b=f(!1),w=f(""),k=K(()=>t.fundAddress);async function T(){if(!l.isConnecting){y.error(a("pleaseConnectWallet"));return}if(w.value=w.value.trim(),!/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/.test(w.value)){y.error(a("trueFormat"));return}if(w.value.toLowerCase()==k.value.toLowerCase()){y.error(a("transferConsistent"));return}b.value=!0;try{const p=await A.wallet.metamask.contract(t.tokenAddress,t.abi),c=await p.setFundAddress(w.value);y.success(a("submitSuccess")),e.value=c.hash,v.value=!0,await c.wait(),t.fundAddress=(await p.fundAddress()).toLowerCase(),n("operateSuccess"),y.success(a("upChainSuccessfully"))}catch(p){console.log(p),p.info&&p.info.error&&p.info.error.code===4001?y.error(a("userCancelOperate")):p.error&&p.error.message&&p.error.message=="Canceled"?y.error(a("userCancelOperate")):y.error(a("transferFail"))}finally{b.value=!1}}return(p,c)=>{const _=P("el-input"),$=P("el-button");return h(),g("div",Dt,[i("div",Kt,[i("div",qt,u(p.$t("currentFundAddress")),1),d(_,{class:"ipt-block",disabled:"",modelValue:k.value,"onUpdate:modelValue":c[0]||(c[0]=V=>k.value=V)},null,8,["modelValue"])]),i("div",jt,[i("div",zt,u(p.$t("newFundAddress")),1),d(_,{class:"ipt-block",modelValue:w.value,"onUpdate:modelValue":c[1]||(c[1]=V=>w.value=V),placeholder:p.$t("input")},null,8,["modelValue","placeholder"])]),i("div",Xt,[d($,{class:"btn-gradient btn-block",loading:b.value,onClick:T},{default:S(()=>[B(u(p.$t("submit")),1)]),_:1},8,["loading"])]),d(Q,{txHash:e.value,modelValue:v.value},null,8,["txHash","modelValue"])])}}};const Qt={class:"token-detail"},Gt={class:"content"},Yt={class:"top"},Zt={class:"small-title"},en={class:"left"},tn={class:"right"},nn={class:"left"},an={class:"right"},sn={key:0},ln={key:1},un={key:2},on={key:3},rn={key:4},pn={class:"left"},dn={class:"right"},yn={class:"left"},mn={class:"right"},cn={class:"left"},bn={class:"right"},fn={class:"left"},vn={class:"right"},Tn={class:"left"},wn={class:"right"},hn={key:0},_n={class:"left"},gn={class:"right"},kn={class:"left"},Mn={class:"right"},Fn={key:1},Sn={class:"left"},Ln={class:"right"},In={key:2},An={class:"left"},$n={class:"right"},Cn={key:0},xn={class:"small-title"},Bn={class:"model-manage"},Wn={class:"left"},Vn={class:"right"},Pn={key:1},Nn={class:"small-title"},On={key:0,class:"operate-item"},Rn={class:"left"},En={class:"right"},Hn={key:1,class:"operate-item"},Un={class:"left"},Dn={class:"right"},Kn={key:2,class:"operate-item"},qn={class:"left"},jn={class:"right"},zn={key:3,class:"operate-item"},Xn={class:"left"},Jn={key:0,class:"right"},Qn={key:1,class:"right"},Gn={key:4,class:"operate-item"},Yn={class:"left"},Zn={class:"right"},ea={key:5,class:"operate-item"},ta={class:"left"},na={class:"right"},aa={key:6,class:"operate-item"},ia={class:"left"},sa={class:"right"},la={key:7,class:"operate-item"},ua={class:"left"},oa={class:"right"},ra={key:8,class:"operate-item"},pa={class:"left"},da={class:"right"},ya={class:"small-title"},ma={class:"operate-item"},ca={class:"left"},ba={class:"right"},fa={class:"operate-item"},va={class:"left"},Ta={class:"right"},wa={class:"operate"},ha={__name:"Manage",setup(I){const{t:n}=X(),a=_e(),l=ge(),t=J(),e=G(),v=f(!1),b=f(!1),w=f(!1),k=f(!1),T=f(!1),p=f(!1),c=f(!1),_=f(!1),$=f(!1),V=f(!1),E=f(!1),M=f("");let F=a.params.deployerId,N=a.params.chain,D=a.params.tokenAddress;const O=K(()=>t.walletAddress.toLowerCase()===e.owner.toLowerCase());(F!=e.deployerId||D!=e.tokenAddress)&&(e.$reset(),e.init(a.params.deployerId,a.params.tokenAddress),te());const ee=K(()=>{if(e.deployerId==1||e.deployerId==6)return r(e.buyFundFee).plus(e.buyLPFee).plus(e.buyBurnFee);if(e.deployerId==2||e.deployerId==3||e.deployerId==7||e.deployerId==8)return r(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee);if(e.deployerId==4)return r(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee).plus(e.buyBurnFee)}),j=K(()=>{if(e.deployerId==1||e.deployerId==6)return r(e.sellFundFee).plus(e.sellLPFee).plus(e.sellBurnFee);if(e.deployerId==2||e.deployerId==3||e.deployerId==7||e.deployerId==8)return r(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee);if(e.deployerId==4)return r(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee).plus(e.sellBurnFee)});async function te(){e.deployerId==0||e.deployerId==5?await e.getFreeTaxTokenInfo(e.tokenAddress):e.deployerId==1||e.deployerId==6?await e.getFeeTokenInfo(e.tokenAddress):e.deployerId==2||e.deployerId==7?await e.getDividendSelfTokenInfo(e.tokenAddress):e.deployerId==3||e.deployerId==8?await e.getAddPoolDividendTokenInfo(e.tokenAddress):e.deployerId==4&&await e.getDividendTokenInfo(e.tokenAddress)}async function ne(){if(!t.isConnecting){y.error(n("pleaseConnectWallet"));return}if(!b.value){if(!O.value){y.error(n("notHolder"));return}if(!e.tradeStart){b.value=!0;try{const o=await A.wallet.metamask.contract(e.tokenAddress,e.abi);let m;e.deployerId!=4?m=await o.startTrade():m=await o.launch(),await m.wait(),y.success(n("tradeOpening")),e.tradeStart=!0}catch(o){console.log(o.info);const m=A.wallet.metamask.parseError(o);y.error(n(m))}finally{b.value=!1}}}}async function q(){if(!t.isConnecting){y.error(n("pleaseConnectWallet"));return}if(!k.value){if(!O.value){y.error(n("notHolder"));return}if(e.enableSwapLimit){k.value=!0;try{await(await(await A.wallet.metamask.contract(e.tokenAddress,e.abi)).disableSwapLimit()).wait(),y.success(n("closeSwapLimit")),e.enableSwapLimit=!1,e.maxSwapAmount=0}catch(o){console.log(o.info);const m=A.wallet.metamask.parseError(o);y.error(n(m))}finally{k.value=!1}}}}async function x(){if(!t.isConnecting){y.error(n("pleaseConnectWallet"));return}if(!p.value){if(!O.value){y.error(n("notHolder"));return}if(e.enableWalletLimit){p.value=!0;try{await(await(await A.wallet.metamask.contract(e.tokenAddress,e.abi)).disableWalletLimit()).wait(),y.success(n("closeWalletLimit")),e.enableWalletLimit=!1,e.maxWalletAmount=0}catch(o){console.log(o.info);const m=A.wallet.metamask.parseError(o);y.error(n(m))}finally{p.value=!1}}}}function C(){Se.confirm(n("giveUpConfirmInfo"),"",{confirmButtonText:n("confirm"),cancelButtonText:n("thinkAgain"),type:"warning",autofocus:!1,beforeClose:async(o,m,H)=>{m.confirmButtonLoading=!0,o=="confirm"&&await Z(),m.confirmButtonLoading=!1,H()}}).then(()=>{}).catch(()=>{})}async function Z(){if(!t.isConnecting){y.error(n("pleaseConnectWallet"));return}try{const o=await A.wallet.metamask.contract(e.tokenAddress,e.abi);let m=await o.renounceOwnership();M.value=m.hash,E.value=!0,m.wait().then(async H=>{H.status===1&&(y.success(n("upChainSuccessfully")),e.owner=await o.owner())})}catch(o){const m=A.wallet.metamask.parseError(o);y.error(n(m))}finally{}}function R(){window.open("https://m.jfliquidity.xyz/add?utm_source=ave.ai")}function fe(){l.push("/lock/create/token")}async function ve(){try{await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e.tokenAddress,symbol:e.symbol,decimals:e.decimals,image:""}}})}catch(o){console.log(o),o.info&&o.info.error&&o.info.error.code===4001?y.error(n("userCancelOperate")):o.error&&o.error.message&&o.error.message=="Canceled"?y.error(n("userCancelOperate")):y.error(n("unkonwError"))}}return(o,m)=>{const H=P("el-button"),ie=P("el-switch"),Y=P("el-dialog"),Te=ke("loading");return h(),g("div",Qt,[d(Ae),Me((h(),g("div",Gt,[i("ul",null,[i("li",Yt,[d($e,{class:"token-name",symbol:s(e).symbol,name:s(e).name,bigIcon:s(Le)(s(N).toLowerCase(),s(e).tokenAddress.toLowerCase()),smallIcon:s(re)(s(N).toLowerCase())},null,8,["symbol","name","bigIcon","smallIcon"])])]),i("div",Zt,u(o.$t("tokenInformation")),1),i("ul",null,[i("li",null,[i("div",en,u(o.$t("chain")),1),i("div",tn,[d(Fe,{icon:s(re)(s(N).toLowerCase()),text:s(Ie).chainList.find(L=>L.chain==s(N).toLowerCase()).chainShow},null,8,["icon","text"])])]),i("li",null,[i("div",nn,u(o.$t("template")),1),i("div",an,[s(e).deployerId==0||s(e).deployerId==5?(h(),g("span",sn,u(o.$t("freeTax")),1)):s(e).deployerId==1||s(e).deployerId==6?(h(),g("span",ln,u(o.$t("feeToken")),1)):s(e).deployerId==2||s(e).deployerId==7?(h(),g("span",un,u(o.$t("selfDividendToken")),1)):s(e).deployerId==3||s(e).deployerId==8?(h(),g("span",on,u(o.$t("addPoolDividend")),1)):s(e).deployerId==4?(h(),g("span",rn,u(o.$t("dividendToken")),1)):W("",!0)])]),i("li",null,[i("div",pn,u(o.$t("tokenAddress")),1),i("div",dn,[d(ae,{text:s(e).tokenAddress,smallText:s(e).tokenAddress},null,8,["text","smallText"])])]),i("li",null,[i("div",yn,u(o.$t("tokenName")),1),i("div",mn,u(s(e).name),1)]),i("li",null,[i("div",cn,u(o.$t("tokenSymbol")),1),i("div",bn,u(s(e).symbol),1)]),i("li",null,[i("div",fn,u(o.$t("tokenPrecision")),1),i("div",vn,u(s(e).decimals),1)]),i("li",null,[i("div",Tn,u(o.$t("tokenAmount")),1),i("div",wn,u(s(pe)(s(e).totalSupply)),1)]),s(e).deployerId!=2&&s(e).deployerId!=4&&s(e).deployerId<5?(h(),g("li",hn,[i("div",_n,u(o.$t("isMintToken")),1),i("div",gn,u(s(e).canMint?o.$t("yes"):o.$t("no")),1)])):W("",!0),i("li",null,[i("div",kn,u(o.$t("ownerAddr")),1),i("div",Mn,[d(ae,{text:s(e).owner,smallText:s(e).owner},null,8,["text","smallText"])])]),s(e).deployerId==3||s(e).deployerId==4||s(e).deployerId==8?(h(),g("li",Fn,[i("div",Sn,u(o.$t("fundAddress")),1),i("div",Ln,[d(ae,{text:s(e).rewardToken,smallText:s(e).rewardToken},null,8,["text","smallText"])])])):W("",!0),s(e).deployerId==3||s(e).deployerId==4||s(e).deployerId==8?(h(),g("li",In,[i("div",An,u(o.$t("fundAddressName")),1),i("div",$n,u(s(e).rewardTokenName)+" ("+u(s(e).rewardTokenSymbol)+") ",1)])):W("",!0)]),s(e).canMint&&O.value?(h(),g("div",Cn,[i("div",xn,u(o.$t("economicManagement")),1),i("div",Bn,[i("div",Wn,u(o.$t("currentIssuedAmount"))+"：",1),i("div",Vn,[B(u(s(pe)(s(e).totalSupply)),1),d(H,{class:"mint-btn",type:"primary",onClick:m[0]||(m[0]=L=>v.value=!0)},{default:S(()=>[B(u(o.$t("mint")),1)]),_:1})])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&(s(e).enableManualStartTrade||s(e).enableChangeTax||s(e).enableWhiteList)?(h(),g("div",Pn,[i("div",Nn,u(o.$t("tradeManage")),1),i("ul",null,[s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableManualStartTrade?(h(),g("li",On,[i("div",Rn,u(o.$t("openTrade")),1),i("div",En,[d(ie,{"model-value":s(e).tradeStart,disabled:s(e).tradeStart,loading:b.value,onClick:m[1]||(m[1]=L=>ne())},null,8,["model-value","disabled","loading"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableKillBlock?(h(),g("li",Hn,[i("div",Un,u(o.$t("autoKillBlockNum")),1),i("div",Dn,u(s(e).killBlock),1)])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableChangeTax?(h(),g("li",Kn,[i("div",qn,u(o.$t("taxEdit")),1),i("div",jn,[i("span",null,u(o.$t("buy"))+" "+u(ee.value)+"%"+u(o.$t("sell"))+" "+u(j.value)+"%",1),d(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:m[2]||(m[2]=L=>$.value=!0)},{default:S(()=>[B(u(o.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableWhiteList?(h(),g("li",zn,[i("div",Xn,u(o.$t("whiteList")),1),s(e).deployerId!=4?(h(),g("div",Jn,[i("span",null,u(s(e).whiteList.length),1),d(H,{class:"btn",key:"primary",disabled:!O.value,type:"primary",link:"",onClick:m[3]||(m[3]=L=>w.value=!0)},{default:S(()=>[B(u(o.$t("add")),1)]),_:1},8,["disabled"])])):(h(),g("div",Qn,[d(H,{class:"btn",key:"primary",disabled:!O.value,type:"primary",link:"",onClick:m[4]||(m[4]=L=>w.value=!0)},{default:S(()=>[B(u(o.$t("add"))+"/"+u(o.$t("remove")),1)]),_:1},8,["disabled"])]))])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5?(h(),g("li",Gn,[i("div",Yn,u(o.$t("swapLimit")),1),i("div",Zn,[d(ie,{"model-value":s(e).enableSwapLimit,disabled:!s(e).enableSwapLimit||!O.value,loading:k.value,onClick:m[5]||(m[5]=L=>q())},null,8,["model-value","disabled","loading"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableSwapLimit?(h(),g("li",ea,[i("div",ta,u(o.$t("swapAmount")),1),i("div",na,[i("span",null,u(s(e).maxSwapAmount),1),d(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:m[6]||(m[6]=L=>T.value=!0)},{default:S(()=>[B(u(o.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5?(h(),g("li",aa,[i("div",ia,u(o.$t("walletLimit")),1),i("div",sa,[d(ie,{"model-value":s(e).enableWalletLimit,disabled:!s(e).enableWalletLimit||!O.value,loading:p.value,onClick:m[7]||(m[7]=L=>x())},null,8,["model-value","disabled","loading"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5&&s(e).enableWalletLimit?(h(),g("li",la,[i("div",ua,u(o.$t("walletAmount")),1),i("div",oa,[i("span",null,u(s(e).maxWalletAmount),1),d(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:m[8]||(m[8]=L=>c.value=!0)},{default:S(()=>[B(u(o.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0),s(e).deployerId!=0&&s(e).deployerId!=5?(h(),g("li",ra,[i("div",pa,u(o.$t("marketingAddress")),1),i("div",da,[i("span",null,u(s(e).fundAddress),1),d(H,{class:"btn",key:"primary",type:"primary",disabled:!O.value,link:"",onClick:m[9]||(m[9]=L=>_.value=!0)},{default:S(()=>[B(u(o.$t("edit")),1)]),_:1},8,["disabled"])])])):W("",!0)])])):W("",!0),i("div",ya,u(o.$t("authorityManagement")),1),i("ul",null,[i("li",ma,[i("div",ca,u(o.$t("contractOwnership")),1),i("div",ba,[d(H,{class:"btn",key:"primary",type:"primary",link:"",disabled:!O.value,onClick:C},{default:S(()=>[B(u(o.$t("renounce")),1)]),_:1},8,["disabled"])])]),i("li",fa,[i("div",va,u(o.$t("transferOwnership")),1),i("div",Ta,[d(H,{class:"btn",key:"primary",type:"primary",link:"",disabled:!O.value,onClick:m[10]||(m[10]=L=>V.value=!0)},{default:S(()=>[B(u(o.$t("transfer")),1)]),_:1},8,["disabled"])])])]),i("div",wa,[d(H,{class:"btn-gradient btn",text:"",bg:"",type:"primary",onClick:R},{default:S(()=>[B(u(o.$t("LPAddOrManage")),1)]),_:1}),d(H,{class:"btn",text:"",bg:"",type:"primary",onClick:fe},{default:S(()=>[B(u(o.$t("lockToken")),1)]),_:1}),s(t).walletType=="metamask"?(h(),se(H,{key:0,class:"btn",text:"",bg:"",type:"primary",onClick:ve},{default:S(()=>[B(u(o.$t("importToWallet")),1)]),_:1})):W("",!0)])])),[[Te,s(e).loading]]),d(Y,{modelValue:v.value,"onUpdate:modelValue":m[12]||(m[12]=L=>v.value=L),title:o.$t("mint"),"destroy-on-close":"",class:"dlg dlg-mint"},{default:S(()=>[d(Ee,{onOperateSuccess:m[11]||(m[11]=L=>v.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:$.value,"onUpdate:modelValue":m[14]||(m[14]=L=>$.value=L),title:o.$t("taxEdit"),"destroy-on-close":"",class:"dlg dlg-rate"},{default:S(()=>[d(bt,{onOperateSuccess:m[13]||(m[13]=L=>$.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:w.value,"onUpdate:modelValue":m[16]||(m[16]=L=>w.value=L),title:o.$t("whiteListManage"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[d(Ft,{onOperateSuccess:m[15]||(m[15]=L=>w.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:V.value,"onUpdate:modelValue":m[18]||(m[18]=L=>V.value=L),title:o.$t("transferOwnership"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[d(xt,{onOperateSuccess:m[17]||(m[17]=L=>V.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:T.value,"onUpdate:modelValue":m[20]||(m[20]=L=>T.value=L),title:o.$t("editSwapAmount"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[d(Nt,{onOperateSuccess:m[19]||(m[19]=L=>T.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:c.value,"onUpdate:modelValue":m[22]||(m[22]=L=>c.value=L),title:o.$t("editWalletAmount"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[d(Ut,{onOperateSuccess:m[21]||(m[21]=L=>c.value=!1)})]),_:1},8,["modelValue","title"]),d(Y,{modelValue:_.value,"onUpdate:modelValue":m[24]||(m[24]=L=>_.value=L),title:o.$t("editFundAddress"),"destroy-on-close":"",class:"dlg dlg-white-list"},{default:S(()=>[d(Jt,{onOperateSuccess:m[23]||(m[23]=L=>_.value=!1)})]),_:1},8,["modelValue","title"]),d(Q,{txHash:M.value,modelValue:E.value},null,8,["txHash","modelValue"])])}}},$a=be(ha,[["__scopeId","data-v-9c64c89b"]]);export{$a as default};
